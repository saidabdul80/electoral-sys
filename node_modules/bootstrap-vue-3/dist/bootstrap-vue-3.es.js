var pl = Object.defineProperty;
var gl = (e, t, a) => t in e ? pl(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a;
var ue = (e, t, a) => (gl(e, typeof t != "symbol" ? t + "" : t, a), a);
import { shallowRef as hl, watchEffect as yl, readonly as Bl, computed as i, Comment as $l, reactive as Le, inject as Ne, onMounted as Be, onBeforeUnmount as Ot, ref as U, toRef as s, onActivated as zt, watch as ne, nextTick as Ee, defineComponent as x, provide as We, openBlock as d, createElementBlock as m, unref as o, normalizeClass as I, renderSlot as g, createBlock as P, resolveDynamicComponent as X, withCtx as O, createElementVNode as E, withDirectives as Xe, createTextVNode as J, toDisplayString as j, createVNode as se, useSlots as $e, Fragment as Z, createCommentVNode as M, normalizeStyle as Ie, mergeProps as W, getCurrentInstance as kl, renderList as re, resolveComponent as ua, normalizeProps as ve, useAttrs as da, withModifiers as Lt, isRef as tt, vModelCheckbox as Cl, h as le, vModelRadio as Sl, vModelSelect as wl, guardReactiveProps as Ce, Transition as Tl, Teleport as Vl, withKeys as _l, vShow as Al, createSlots as ca, onUnmounted as xl, isReactive as Il } from "vue";
import { Collapse as Fl, Popover as wt, Tooltip as $t, Alert as Pl, Carousel as Ol, Dropdown as zl, Offcanvas as Ll } from "bootstrap";
const Nl = (e, t) => {
  var l;
  const a = hl();
  return yl(
    () => {
      a.value = e();
    },
    {
      ...t,
      flush: (l = t == null ? void 0 : t.flush) != null ? l : "sync"
    }
  ), Bl(a);
}, El = (e) => i(
  () => e.value === "center" ? "justify-content-center" : e.value === "end" ? "justify-content-end" : "justify-content-start"
), ct = (e, t) => Object.keys(e).filter((a) => !t.includes(a)).reduce((a, l) => ({ ...a, [l]: e[l] }), {}), De = () => ({ enumerable: !0, configurable: !1, writable: !1 }), it = (e) => Array.isArray(e) ? e.map((t) => it(t)) : e instanceof Date ? new Date(e.getTime()) : e && typeof e == "object" ? Object.getOwnPropertyNames(e).reduce((t, a) => {
  var l;
  return Object.defineProperty(t, a, (l = Object.getOwnPropertyDescriptor(e, a)) != null ? l : {}), t[a] = it(e[a]), t;
}, Object.create(Object.getPrototypeOf(e))) : e, Tt = (e) => new Promise((t) => t(it(e)));
class ft {
  constructor(t, a = {}) {
    ue(this, "cancelable", !0);
    ue(this, "componentId", null);
    ue(this, "defaultPrevented", !1);
    ue(this, "nativeEvent", null);
    ue(this, "preventDefault");
    ue(this, "relatedTarget", null);
    ue(this, "target", null);
    ue(this, "eventType", "");
    ue(this, "vueTarget", null);
    if (!t)
      throw new TypeError(
        `Failed to construct '${this.constructor.name}'. 1 argument required, ${arguments.length} given.`
      );
    Object.assign(this, ft.Defaults, this.constructor.Defaults, a, { eventType: t }), Object.defineProperties(this, {
      type: De(),
      cancelable: De(),
      nativeEvent: De(),
      target: De(),
      relatedTarget: De(),
      vueTarget: De(),
      componentId: De()
    });
    let l = !1;
    this.preventDefault = function() {
      this.cancelable && (l = !0);
    }, Object.defineProperty(this, "defaultPrevented", {
      enumerable: !0,
      get() {
        return l;
      }
    });
  }
  static get Defaults() {
    return {
      eventType: "",
      cancelable: !0,
      nativeEvent: null,
      target: null,
      relatedTarget: null,
      vueTarget: null,
      componentId: null
    };
  }
}
const Hl = (e) => e !== null && typeof e == "object", fa = (e) => /^[0-9]*\.?[0-9]+$/.test(String(e)), Dl = (e) => Object.prototype.toString.call(e) === "[object Object]", va = /_/g, ma = /([a-z])([A-Z])/g, Rl = /(\s|^)(\w)/g, jl = /(\s|^)(\w)/, ot = /\s+/, ql = /^#/, Ml = /^#[A-Za-z]+[\w\-:.]*$/, Vt = (e, t = 2) => typeof e == "string" ? e : e == null ? "" : Array.isArray(e) || Dl(e) && e.toString === Object.prototype.toString ? JSON.stringify(e, null, t) : String(e), Mt = (e) => e.replace(va, " ").replace(ma, (t, a, l) => `${a} ${l}`).replace(jl, (t, a, l) => a + l.toUpperCase()), Gt = (e) => e.replace(va, " ").replace(ma, (t, a, l) => `${a} ${l}`).replace(Rl, (t, a, l) => a + l.toUpperCase()), Gl = (e) => {
  const t = e.trim();
  return t.charAt(0).toUpperCase() + t.slice(1);
}, kt = (e) => `\\${e}`, Ul = (e) => {
  const t = Vt(e), { length: a } = t, l = t.charCodeAt(0);
  return t.split("").reduce((n, u, f) => {
    const c = t.charCodeAt(f);
    return c === 0 ? `${n}\uFFFD` : c === 127 || c >= 1 && c <= 31 || f === 0 && c >= 48 && c <= 57 || f === 1 && c >= 48 && c <= 57 && l === 45 ? n + kt(`${c.toString(16)} `) : f === 0 && c === 45 && a === 1 ? n + kt(u) : c >= 128 || c === 45 || c === 95 || c >= 48 && c <= 57 || c >= 65 && c <= 90 || c >= 97 && c <= 122 ? n + u : n + kt(u);
  }, "");
}, ba = typeof window < "u", Wl = typeof document < "u", Xl = typeof navigator < "u", Kl = ba && Wl && Xl, pa = typeof window < "u", ga = typeof document < "u", Jl = typeof Element < "u", ha = typeof navigator < "u", vt = pa && ga && ha, Re = pa ? window : {}, mt = ga ? document : {}, ya = ha ? navigator : {}, Ba = (ya.userAgent || "").toLowerCase();
Ba.indexOf("jsdom") > 0;
/msie|trident/.test(Ba);
(() => {
  let e = !1;
  if (vt)
    try {
      const t = {
        get passive() {
          return e = !0, e;
        }
      };
      Re.addEventListener("test", t, t), Re.removeEventListener("test", t, t);
    } catch {
      e = !1;
    }
  return e;
})();
vt && ("ontouchstart" in mt.documentElement || ya.maxTouchPoints > 0);
vt && Boolean(Re.PointerEvent || Re.MSPointerEvent);
vt && "IntersectionObserver" in Re && "IntersectionObserverEntry" in Re && "intersectionRatio" in Re.IntersectionObserverEntry.prototype;
const _e = Jl ? Element.prototype : void 0, Yl = (_e == null ? void 0 : _e.matches) || (_e == null ? void 0 : _e.msMatchesSelector) || (_e == null ? void 0 : _e.webkitMatchesSelector), Oe = (e) => !!(e && e.nodeType === Node.ELEMENT_NODE), Zl = (e) => Oe(e) ? e.getBoundingClientRect() : null, Ql = (e = []) => {
  const { activeElement: t } = document;
  return t && !e.some((a) => a === t) ? t : null;
}, eo = (e) => Oe(e) && e === Ql(), to = (e, t = {}) => {
  try {
    e.focus(t);
  } catch (a) {
    console.error(a);
  }
  return eo(e);
}, ao = (e, t) => t && Oe(e) && e.getAttribute(t) || null, lo = (e) => {
  if (ao(e, "display") === "none")
    return !1;
  const t = Zl(e);
  return !!(t && t.height > 0 && t.width > 0);
}, we = (e, t) => !e || e(t).filter((a) => a.type !== $l).length < 1, $a = (e, t) => (Oe(t) ? t : mt).querySelector(e) || null, oo = (e, t) => Array.from([(Oe(t) ? t : mt).querySelectorAll(e)]), Nt = (e, t) => t && Oe(e) ? e.getAttribute(t) : null, no = (e) => mt.getElementById(/^#/.test(e) ? e.slice(1) : e) || null, so = (e, t, a) => {
  t && Oe(e) && e.setAttribute(t, a);
}, ro = (e, t) => {
  t && Oe(e) && e.removeAttribute(t);
}, io = (e, t) => Vt(e).toLowerCase() === Vt(t).toLowerCase(), at = ba ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || ((e) => setTimeout(e, 16)) : (e) => setTimeout(e, 0), ka = (e, t) => Oe(e) ? Yl.call(e, t) : !1, uo = (_e == null ? void 0 : _e.closest) || function(e) {
  let t = this;
  if (!t)
    return null;
  do {
    if (ka(t, e))
      return t;
    t = t.parentElement || t.parentNode;
  } while (t !== null && t.nodeType === Node.ELEMENT_NODE);
  return null;
}, Ut = (e, t, a = !1) => {
  if (!Oe(t))
    return null;
  const l = uo.call(t, e);
  return a ? l : l === t ? null : l;
}, bt = (e, t, a) => t.concat(["sm", "md", "lg", "xl", "xxl"]).reduce((l, n) => (l[e ? `${e}${n.charAt(0).toUpperCase() + n.slice(1)}` : n] = a, l), /* @__PURE__ */ Object.create(null)), Ca = (e, t, a, l = a) => Object.keys(t).reduce((n, u) => (e[u] && n.push(
  [l, u.replace(a, ""), e[u]].filter((f) => f && typeof f != "boolean").join("-").toLowerCase()
), n), []), ze = (e = "") => `__BVID__${Math.random().toString().slice(2, 8)}___BV_${e}__`, pt = (e, t) => e === !0 || e === "true" || e === "" ? "true" : e === "grammar" || e === "spelling" ? e : t === !1 ? "true" : e === !1 || e === "false" ? "false" : void 0, Ct = (e) => !!e && typeof e == "object" && e.constructor === Object, _t = (e, t, a = !0) => {
  const l = e instanceof Date && typeof e.getMonth == "function" ? new Date(e.getTime()) : Object.assign({}, e);
  return Ct(e) && Ct(t) && Object.keys(t).forEach((n) => {
    Ct(t[n]) ? n in e ? l[n] = _t(e[n], t[n], a) : Object.assign(l, { [n]: t[n] }) : Array.isArray(t[n]) && Array.isArray(e[n]) ? Object.assign(l, {
      [n]: a ? e[n].concat(
        t[n].filter((u) => !e[n].includes(u))
      ) : t[n]
    }) : Object.assign(l, { [n]: t[n] });
  }), l;
}, xe = (e, t = {}, a = {}) => {
  const l = [e];
  let n;
  for (let u = 0; u < l.length && !n; u++) {
    const f = l[u];
    n = a[f];
  }
  return n && typeof n == "function" ? n(t) : n;
}, Ue = (e, t = NaN) => Number.isInteger(e) ? e : t, Ye = (e, t = NaN) => {
  const a = Number.parseInt(e, 10);
  return Number.isNaN(a) ? t : a;
}, Sa = (e, t = NaN) => {
  const a = Number.parseFloat(e.toString());
  return Number.isNaN(a) ? t : a;
}, Wt = (e, t) => t + (e ? Gl(e) : ""), Et = (e, t) => (Array.isArray(t) ? t.slice() : Object.keys(t)).reduce(
  (a, l) => (a[l] = e[l], a),
  {}
), co = (e) => typeof e == "boolean" ? e : e === "" ? !0 : e === "true", Qe = (e) => !!(e.href || e.to);
function r(e) {
  return Nl(() => e.value === void 0 ? void 0 : co(e.value));
}
const wa = Symbol(), Ta = {
  items: Le([]),
  reset() {
    this.items = Le([]);
  }
}, fo = (e) => {
  e.provide(wa, Ta);
}, vo = () => {
  const e = Ne(wa);
  return e || Ta;
}, be = (e, t, a) => {
  Be(() => {
    var l;
    (l = e == null ? void 0 : e.value) == null || l.addEventListener(t, a);
  }), Ot(() => {
    var l;
    (l = e == null ? void 0 : e.value) == null || l.removeEventListener(t, a);
  });
}, Va = (e) => i(() => ({
  "form-check": !e.plain && !e.button,
  "form-check-inline": e.inline === !0,
  "form-switch": e.switch === !0,
  [`form-control-${e.size}`]: e.size !== void 0 && e.size !== "md"
})), _a = (e) => i(() => ({
  "form-check-input": !e.plain && !e.button,
  "is-valid": e.state === !0,
  "is-invalid": e.state === !1,
  "btn-check": e.button === !0
})), Aa = (e) => i(() => ({
  "form-check-label": !e.plain && !e.button,
  btn: e.button === !0,
  [`btn-${e.buttonVariant}`]: e.button === !0 && e.buttonVariant !== void 0,
  [`btn-${e.size}`]: e.button && e.size && e.size !== "md"
})), xa = (e) => i(() => ({
  "aria-invalid": pt(e.ariaInvalid, e.state),
  "aria-required": e.required === !0 ? !0 : void 0
})), Ia = (e) => i(() => ({
  "was-validated": e.validated === !0,
  "btn-group": e.buttons === !0 && !e.stacked,
  "btn-group-vertical": e.stacked === !0,
  [`btn-group-${e.size}`]: e.size !== void 0
})), ut = (e, t, a) => e.reduce(
  (l, n) => n.type.toString() === "Symbol(Fragment)" ? l.concat(n.children) : l.concat([n]),
  []
).filter((l) => (l.type.__name || l.type.name) === t).map((l) => {
  const n = (l.children.default ? l.children.default() : []).find(
    (u) => u.type.toString() === "Symbol(Text)"
  );
  return {
    props: {
      disabled: a,
      ...l.props
    },
    text: n ? n.children : ""
  };
}), Fa = (e, t) => typeof e == "string" ? {
  props: {
    value: e,
    disabled: t.disabled
  },
  text: e
} : {
  props: {
    value: e[t.valueField],
    disabled: t.disabled || e[t.disabledField],
    ...e.props
  },
  text: e[t.textField],
  html: e[t.htmlField]
}, Pa = (e, t, a, l, n) => ({
  ...e,
  props: {
    "button-variant": a.buttonVariant,
    form: a.form,
    name: l.value,
    id: `${n.value}_option_${t}`,
    button: a.buttons,
    state: a.state,
    plain: a.plain,
    size: a.size,
    inline: !a.stacked,
    required: a.required,
    ...e.props
  }
}), ye = (e, t) => i(() => (e == null ? void 0 : e.value) || ze(t)), Oa = {
  ariaInvalid: {
    type: [Boolean, String],
    default: void 0
  },
  autocomplete: { type: String, required: !1 },
  autofocus: { type: Boolean, default: !1 },
  disabled: { type: Boolean, default: !1 },
  form: { type: String, required: !1 },
  formatter: { type: Function, required: !1 },
  id: { type: String, required: !1 },
  lazy: { type: Boolean, default: !1 },
  lazyFormatter: { type: Boolean, default: !1 },
  list: { type: String, required: !1 },
  modelValue: { type: [String, Number], default: "" },
  name: { type: String, required: !1 },
  number: { type: Boolean, default: !1 },
  placeholder: { type: String, required: !1 },
  plaintext: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  required: { type: Boolean, default: !1 },
  size: { type: String, required: !1 },
  state: { type: Boolean, default: null },
  trim: { type: Boolean, default: !1 }
}, za = (e, t) => {
  const a = U();
  let l = null, n = !0;
  const u = ye(s(e, "id"), "input"), f = (b, k, y = !1) => (b = String(b), typeof e.formatter == "function" && (!e.lazyFormatter || y) ? (n = !1, e.formatter(b, k)) : b), c = (b) => e.trim ? b.trim() : e.number ? Number.parseFloat(b) : b, v = () => {
    Ee(() => {
      var b;
      e.autofocus && ((b = a.value) == null || b.focus());
    });
  };
  Be(v), Be(() => {
    a.value && (a.value.value = e.modelValue);
  }), zt(v);
  const h = i(
    () => {
      var b;
      return pt(e.ariaInvalid, (b = e.state) != null ? b : void 0);
    }
  ), p = (b) => {
    const { value: k } = b.target, y = f(k, b);
    if (y === !1 || b.defaultPrevented) {
      b.preventDefault();
      return;
    }
    if (e.lazy)
      return;
    const S = c(y);
    e.modelValue !== S && (l = k, t("update:modelValue", S)), t("input", y);
  }, B = (b) => {
    const { value: k } = b.target, y = f(k, b);
    if (y === !1 || b.defaultPrevented) {
      b.preventDefault();
      return;
    }
    if (!e.lazy)
      return;
    l = k, t("update:modelValue", y);
    const S = c(y);
    e.modelValue !== S && t("change", y);
  }, C = (b) => {
    if (t("blur", b), !e.lazy && !e.lazyFormatter)
      return;
    const { value: k } = b.target, y = f(k, b, !0);
    l = k, t("update:modelValue", y);
  }, _ = () => {
    var b;
    e.disabled || (b = a.value) == null || b.focus();
  }, A = () => {
    var b;
    e.disabled || (b = a.value) == null || b.blur();
  };
  return ne(
    () => e.modelValue,
    (b) => {
      !a.value || (a.value.value = l && n ? l : b, l = null, n = !0);
    }
  ), {
    input: a,
    computedId: u,
    computedAriaInvalid: h,
    onInput: p,
    onChange: B,
    onBlur: C,
    focus: _,
    blur: A
  };
}, Ge = (e, t) => {
  if (!e)
    return e;
  if (t in e)
    return e[t];
  const a = t.split(".");
  return Ge(e[a[0]], a.splice(1).join("."));
}, St = (e, t = null, a, l) => {
  if (Object.prototype.toString.call(e) === "[object Object]") {
    const n = Ge(e, l.valueField), u = Ge(e, l.textField), f = Ge(e, l.htmlField), c = Ge(e, l.disabledField), v = e[l.optionsField] || null;
    return v !== null ? {
      label: String(Ge(e, l.labelField) || u),
      options: Ht(v, a, l)
    } : {
      value: typeof n > "u" ? t || u : n,
      text: String(typeof u > "u" ? t : u),
      html: f,
      disabled: Boolean(c)
    };
  }
  return {
    value: t || e,
    text: String(e),
    disabled: !1
  };
}, Ht = (e, t, a) => Array.isArray(e) ? e.map((l) => St(l, null, t, a)) : Object.prototype.toString.call(e) === "[object Object]" ? (console.warn(
  `[BootstrapVue warn]: ${t} - Setting prop "options" to an object is deprecated. Use the array format instead.`
), Object.keys(e).map((l) => {
  const n = e[l];
  switch (typeof n) {
    case "object":
      return St(n.text, String(n.value), t, a);
    default:
      return St(n, String(l), t, a);
  }
})) : [], mo = ["id"], La = Symbol(), bo = /* @__PURE__ */ x({
  __name: "BAccordion",
  props: {
    flush: { default: !1 },
    free: { default: !1 },
    id: null
  },
  setup(e) {
    const t = e, a = ye(s(t, "id"), "accordion"), l = r(s(t, "flush")), n = r(s(t, "free")), u = i(() => ({
      "accordion-flush": l.value
    }));
    return n.value || We(La, a.value), (f, c) => (d(), m("div", {
      id: o(a),
      class: I(["accordion", o(u)])
    }, [
      g(f.$slots, "default")
    ], 10, mo));
  }
}), Na = /* @__PURE__ */ x({
  __name: "BCollapse",
  props: {
    accordion: null,
    id: { default: ze() },
    modelValue: { default: !1 },
    tag: { default: "div" },
    toggle: { default: !1 },
    visible: { default: !1 },
    isNav: { default: !1 }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "modelValue")), n = r(s(a, "toggle")), u = r(s(a, "visible")), f = r(s(a, "isNav")), c = U(), v = U(), h = i(() => ({
      show: l.value,
      "navbar-collapse": f.value
    })), p = () => t("update:modelValue", !1);
    return ne(
      () => l.value,
      (B) => {
        var C, _;
        B ? (C = v.value) == null || C.show() : (_ = v.value) == null || _.hide();
      }
    ), ne(
      () => u.value,
      (B) => {
        var C, _;
        B ? (t("update:modelValue", !!B), (C = v.value) == null || C.show()) : (t("update:modelValue", !!B), (_ = v.value) == null || _.hide());
      }
    ), be(c, "show.bs.collapse", () => {
      t("show"), t("update:modelValue", !0);
    }), be(c, "hide.bs.collapse", () => {
      t("hide"), t("update:modelValue", !1);
    }), be(c, "shown.bs.collapse", () => t("shown")), be(c, "hidden.bs.collapse", () => t("hidden")), Be(() => {
      var B;
      v.value = new Fl(c.value, {
        parent: a.accordion ? `#${a.accordion}` : void 0,
        toggle: n.value
      }), (u.value || l.value) && (t("update:modelValue", !0), (B = v.value) == null || B.show());
    }), (B, C) => (d(), P(X(e.tag), {
      id: e.id,
      ref_key: "element",
      ref: c,
      class: I(["collapse", o(h)]),
      "data-bs-parent": e.accordion || null,
      "is-nav": o(f)
    }, {
      default: O(() => [
        g(B.$slots, "default", {
          visible: o(l),
          close: p
        })
      ]),
      _: 3
    }, 8, ["id", "class", "data-bs-parent", "is-nav"]));
  }
}), po = {
  mounted(e, t) {
    let a = t.value;
    Object.keys(t.modifiers).length > 0 && ([a] = Object.keys(t.modifiers)), e.setAttribute("data-bs-toggle", "modal"), e.setAttribute("data-bs-target", `#${a}`);
  }
}, go = {
  mounted(e, t) {
    let a = "right";
    const l = [];
    t.modifiers.left ? a = "left" : t.modifiers.right ? a = "right" : t.modifiers.bottom ? a = "bottom" : t.modifiers.top && (a = "top"), t.modifiers.manual ? l.push("manual") : (t.modifiers.click && l.push("click"), t.modifiers.hover && l.push("hover"), t.modifiers.focus && l.push("focus")), e.setAttribute("data-bs-toggle", "popover"), new wt(e, {
      trigger: l.length === 0 ? "click" : l.join(" "),
      placement: a,
      content: t.value
    });
  },
  unmounted(e) {
    const t = wt.getInstance(e);
    t == null || t.dispose();
  }
}, ho = (e) => {
  if (e.classList.contains("offcanvas"))
    return "offcanvas";
  if (e.classList.contains("collapse"))
    return "collapse";
  throw Error("Couldn't resolve toggle type");
}, yo = (e, t) => {
  const { modifiers: a, arg: l, value: n } = e, u = Object.keys(a || {}), f = typeof n == "string" ? n.split(ot) : n;
  if (io(t.tagName, "a")) {
    const c = Nt(t, "href") || "";
    Ml.test(c) && u.push(c.replace(ql, ""));
  }
  return Array.prototype.concat.apply([], [l, f]).forEach((c) => typeof c == "string" && u.push(c)), u.filter((c, v, h) => c && h.indexOf(c) === v);
}, Dt = {
  mounted(e, t) {
    const a = yo(t, e), l = [];
    let n = "data-bs-target";
    e.tagName === "a" && (n = "href");
    for (let u = 0; u < a.length; u++) {
      const f = a[u], c = document.getElementById(f);
      c && (e.setAttribute("data-bs-toggle", ho(c)), l.push(`#${f}`));
    }
    l.length > 0 && e.setAttribute(n, l.join(","));
  }
}, Bo = (e, t) => {
  if (t != null && t.trigger)
    return t.trigger;
  if (e.manual)
    return "manual";
  const a = [];
  return e.click && a.push("click"), e.hover && a.push("hover"), e.focus && a.push("focus"), a.length > 0 ? a.join(" ") : "hover focus";
}, $o = (e, t) => t != null && t.placement ? t.placement : e.left ? "left" : e.right ? "right" : e.bottom ? "bottom" : "top", ko = (e) => e != null && e.delay ? e.delay : 0, Xt = (e) => typeof e == "object" ? e == null ? void 0 : e.title : e, Co = {
  beforeMount(e, t) {
    e.setAttribute("data-bs-toggle", "tooltip"), e.getAttribute("title") || e.setAttribute("title", Xt(t.value).toString());
    const a = /<("[^"]*"|'[^']*'|[^'">])*>/.test(e.title), l = Bo(t.modifiers, t.value), n = $o(t.modifiers, t.value), u = ko(t.value), f = e.getAttribute("title");
    new $t(e, {
      trigger: l,
      placement: n,
      delay: u,
      html: a
    }), f && e.setAttribute("data-bs-original-title", f);
  },
  updated(e, t) {
    e.getAttribute("title") || e.setAttribute("title", Xt(t.value).toString());
    const a = e.getAttribute("title"), l = e.getAttribute("data-bs-original-title"), n = $t.getInstance(e);
    e.removeAttribute("title"), a && a !== l && (n == null || n.setContent({ ".tooltip-inner": a }), e.setAttribute("data-bs-original-title", a));
  },
  unmounted(e) {
    const t = $t.getInstance(e);
    t == null || t.dispose();
  }
}, nt = /* @__PURE__ */ new Map(), Ea = (e) => {
  if (nt.has(e)) {
    const t = nt.get(e);
    t && t.stop && t.stop(), nt.delete(e);
  }
}, Kt = (e, t) => {
  const a = {
    margin: "0px",
    once: !1,
    callback: t.value
  };
  Object.keys(t.modifiers).forEach((n) => {
    Number.isInteger(n) ? a.margin = `${n}px` : n.toLowerCase() === "once" && (a.once = !0);
  }), Ea(e);
  const l = new wo(
    e,
    a.margin,
    a.once,
    a.callback,
    t.instance
  );
  nt.set(e, l);
}, So = {
  beforeMount(e, t) {
    Kt(e, t);
  },
  updated(e, t) {
    Kt(e, t);
  },
  unmounted(e) {
    Ea(e);
  }
};
class wo {
  constructor(t, a, l, n, u) {
    ue(this, "element");
    ue(this, "margin");
    ue(this, "once");
    ue(this, "callback");
    ue(this, "instance");
    ue(this, "observer");
    ue(this, "doneOnce");
    ue(this, "visible");
    this.element = t, this.margin = a, this.once = l, this.callback = n, this.instance = u, this.createObserver();
  }
  createObserver() {
    if (this.observer && this.stop(), !(this.doneOnce || typeof this.callback != "function")) {
      try {
        this.observer = new IntersectionObserver(this.handler.bind(this), {
          root: null,
          rootMargin: this.margin,
          threshold: 0
        });
      } catch {
        console.error("Intersection Observer not supported"), this.doneOnce = !0, this.observer = void 0, this.callback(null);
        return;
      }
      this.instance.$nextTick(() => {
        this.observer && this.observer.observe(this.element);
      });
    }
  }
  handler(t) {
    const [a] = t, l = Boolean(a.isIntersecting || a.intersectionRatio > 0);
    l !== this.visible && (this.visible = l, this.callback(l), this.once && this.visible && (this.doneOnce = !0, this.stop()));
  }
  stop() {
    this.observer && this.observer.disconnect(), this.observer = null;
  }
}
const To = {
  mounted(e, t) {
    t.value !== !1 && e.focus();
  }
}, Vo = {
  BModal: po,
  BPopover: go,
  BToggle: Dt,
  BTooltip: Co,
  BVisible: So,
  focus: To
}, _o = { class: "accordion-item" }, Ao = ["id"], xo = ["aria-expanded", "aria-controls"], Io = { class: "accordion-body" }, Fo = /* @__PURE__ */ x({
  __name: "BAccordionItem",
  props: {
    id: null,
    title: null,
    visible: { default: !1 }
  },
  setup(e) {
    const t = e, a = Ne(La, ""), l = ye(s(t, "id"), "accordion_item"), n = r(s(t, "visible"));
    return (u, f) => (d(), m("div", _o, [
      E("h2", {
        id: `${o(l)}heading`,
        class: "accordion-header"
      }, [
        Xe((d(), m("button", {
          class: I(["accordion-button", { collapsed: !o(n) }]),
          type: "button",
          "aria-expanded": o(n) ? "true" : "false",
          "aria-controls": o(l)
        }, [
          g(u.$slots, "title", {}, () => [
            J(j(e.title), 1)
          ])
        ], 10, xo)), [
          [o(Dt), void 0, o(l)]
        ])
      ], 8, Ao),
      se(Na, {
        id: o(l),
        class: "accordion-collapse",
        visible: e.visible,
        accordion: o(a),
        "aria-labelledby": `heading${o(l)}`
      }, {
        default: O(() => [
          E("div", Io, [
            g(u.$slots, "default")
          ])
        ]),
        _: 3
      }, 8, ["id", "visible", "accordion", "aria-labelledby"])
    ]));
  }
}), Po = ["type", "disabled", "aria-label"], Ke = /* @__PURE__ */ x({
  __name: "BCloseButton",
  props: {
    ariaLabel: { default: "Close" },
    disabled: { default: !1 },
    white: { default: !1 },
    type: { default: "button" }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "disabled")), n = r(s(a, "white")), u = i(() => ({
      "btn-close-white": n.value
    }));
    return (f, c) => (d(), m("button", {
      type: e.type,
      class: I(["btn-close", o(u)]),
      disabled: o(l),
      "aria-label": e.ariaLabel,
      onClick: c[0] || (c[0] = (v) => t("click", v))
    }, null, 10, Po));
  }
}), Oo = /* @__PURE__ */ x({
  __name: "BAlert",
  props: {
    dismissLabel: { default: "Close" },
    dismissible: { default: !1 },
    fade: { default: !1 },
    modelValue: { type: [Boolean, Number], default: !1 },
    show: { default: !1 },
    variant: { default: "info" }
  },
  emits: ["closed", "close-count-down", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "dismissible"));
    r(s(a, "fade"));
    const n = r(s(a, "show")), u = $e();
    let f;
    const c = U(null), v = U(), h = i(() => !we(u.close)), p = i(() => !!a.modelValue || n.value), B = i(() => [
      [`alert-${a.variant}`],
      {
        show: !!a.modelValue,
        "alert-dismissible": l.value,
        fade: !!a.modelValue
      }
    ]), C = (S) => {
      if (typeof S == "boolean")
        return 0;
      const H = Ue(S, 0);
      return H > 0 ? H : 0;
    }, _ = U(C(a.modelValue)), A = i(() => a.modelValue === !0 ? !0 : a.modelValue === !1 || Ue(a.modelValue, 0) < 1 ? !1 : !!a.modelValue), b = () => {
      f !== void 0 && (clearTimeout(f), f = void 0);
    }, k = () => {
      _.value = C(a.modelValue), (A.value || n.value) && !v.value && (v.value = new Pl(c.value));
    }, y = () => {
      typeof a.modelValue == "boolean" ? t("update:modelValue", !1) : t("update:modelValue", 0), t("closed");
    };
    return ne(() => a.modelValue, k), ne(() => n.value, k), ne(_, (S) => {
      b(), typeof a.modelValue != "boolean" && (t("close-count-down", S), S === 0 && a.modelValue > 0 && t("closed"), a.modelValue !== S && t("update:modelValue", S), S > 0 && (f = setTimeout(() => {
        _.value--;
      }, 1e3)));
    }), Ot(() => {
      var S;
      b(), (S = v.value) == null || S.dispose(), v.value = void 0;
    }), (S, H) => o(p) ? (d(), m("div", {
      key: 0,
      ref_key: "element",
      ref: c,
      class: I(["alert", o(B)]),
      role: "alert"
    }, [
      g(S.$slots, "default"),
      o(l) ? (d(), m(Z, { key: 0 }, [
        o(h) ? (d(), m("button", {
          key: 0,
          type: "button",
          "data-bs-dismiss": "alert",
          onClick: y
        }, [
          g(S.$slots, "close")
        ])) : (d(), P(Ke, {
          key: 1,
          "aria-label": e.dismissLabel,
          "data-bs-dismiss": "alert",
          onClick: y
        }, null, 8, ["aria-label"]))
      ], 64)) : M("", !0)
    ], 2)) : M("", !0);
  }
}), Ha = Symbol(), zo = /* @__PURE__ */ x({
  __name: "BAvatarGroup",
  props: {
    overlap: { default: 0.3 },
    rounded: { type: [Boolean, String], default: !1 },
    size: null,
    square: { default: !1 },
    tag: { default: "div" },
    variant: null
  },
  setup(e) {
    const t = e, a = r(s(t, "square")), l = i(() => At(t.size)), n = i(
      () => Math.min(Math.max(f(t.overlap), 0), 1) / 2
    ), u = i(() => {
      const c = l.value ? `calc(${l.value} * ${n.value})` : null;
      return c ? { paddingLeft: c, paddingRight: c } : {};
    }), f = (c) => typeof c == "string" && fa(c) ? Sa(c, 0) : c || 0;
    return We(Ha, {
      overlapScale: n,
      size: t.size,
      square: a.value,
      rounded: t.rounded,
      variant: t.variant
    }), (c, v) => (d(), P(X(e.tag), {
      class: "b-avatar-group",
      role: "group"
    }, {
      default: O(() => [
        E("div", {
          class: "b-avatar-group-inner",
          style: Ie(o(u))
        }, [
          g(c.$slots, "default")
        ], 4)
      ]),
      _: 3
    }));
  }
}), Lo = {
  key: 0,
  class: "b-avatar-custom"
}, No = {
  key: 1,
  class: "b-avatar-img"
}, Eo = ["src", "alt"], At = (e) => {
  const t = typeof e == "string" && fa(e) ? Sa(e, 0) : e;
  return typeof t == "number" ? `${t}px` : t || null;
}, Ho = /* @__PURE__ */ x({
  __name: "BAvatar",
  props: {
    alt: { default: "avatar" },
    ariaLabel: null,
    badge: { type: [Boolean, String], default: !1 },
    badgeLeft: { default: !1 },
    badgeOffset: null,
    badgeTop: { default: !1 },
    badgeVariant: { default: "primary" },
    button: { default: !1 },
    buttonType: { default: "button" },
    disabled: { default: !1 },
    icon: null,
    rounded: { type: [Boolean, String], default: "circle" },
    size: null,
    square: { default: !1 },
    src: null,
    text: null,
    textVariant: null,
    variant: { default: "secondary" }
  },
  emits: ["click", "img-error"],
  setup(e, { emit: t }) {
    const a = e, l = $e(), n = Ne(Ha, null), u = ["sm", null, "lg"], f = 0.4, c = f * 0.7, v = r(s(a, "badgeLeft")), h = r(s(a, "badgeTop")), p = r(s(a, "button")), B = r(s(a, "disabled")), C = r(s(a, "square")), _ = i(() => !we(l.default)), A = i(() => !we(l.badge)), b = i(() => !!a.badge || a.badge === "" || A.value), k = i(
      () => n != null && n.size ? n.size : At(a.size)
    ), y = i(
      () => n != null && n.variant ? n.variant : a.variant
    ), S = i(
      () => n != null && n.rounded ? n.rounded : a.rounded
    ), H = i(() => ({
      type: p.value ? a.buttonType : void 0,
      "aria-label": a.ariaLabel || null,
      disabled: B.value || null
    })), T = i(() => [`bg-${a.badgeVariant}`]), F = i(() => a.badge === !0 ? "" : a.badge), L = i(() => [[`text-${G(a.badgeVariant)}`]]), z = i(() => ({
      [`b-avatar-${a.size}`]: !!a.size && u.indexOf(At(a.size)) !== -1,
      [`bg-${y.value}`]: !!y.value,
      badge: !p.value && y.value && _.value,
      rounded: S.value === "" || S.value === !0,
      ["rounded-circle"]: !C.value && S.value === "circle",
      ["rounded-0"]: C.value || S.value === "0",
      ["rounded-1"]: !C.value && S.value === "sm",
      ["rounded-3"]: !C.value && S.value === "lg",
      ["rounded-top"]: !C.value && S.value === "top",
      ["rounded-bottom"]: !C.value && S.value === "bottom",
      ["rounded-start"]: !C.value && S.value === "left",
      ["rounded-end"]: !C.value && S.value === "right",
      btn: p.value,
      [`btn-${y.value}`]: p.value ? !!y.value : !1
    })), $ = i(() => [
      [`text-${a.textVariant || G(y.value)}`]
    ]), V = i(() => {
      const Q = a.badgeOffset || "0px";
      return {
        fontSize: (u.indexOf(k.value || null) === -1 ? `calc(${k.value} * ${c})` : "") || "",
        top: h.value ? Q : "",
        bottom: h.value ? "" : Q,
        left: v.value ? Q : "",
        right: v.value ? "" : Q
      };
    }), D = i(() => {
      const Q = u.indexOf(k.value || null) === -1 ? `calc(${k.value} * ${f})` : null;
      return Q ? { fontSize: Q } : {};
    }), q = i(() => {
      var pe;
      const Q = ((pe = n == null ? void 0 : n.overlapScale) == null ? void 0 : pe.value) || 0, he = k.value && Q ? `calc(${k.value} * -${Q})` : null;
      return he ? { marginLeft: he, marginRight: he } : {};
    }), ee = i(() => p.value ? "button" : "span"), Y = i(() => ({
      ...q.value,
      width: k.value,
      height: k.value
    })), G = (Q) => Q === "light" || Q === "warning" ? "dark" : "light", ie = (Q) => {
      !B.value && p.value && t("click", Q);
    }, ce = (Q) => t("img-error", Q);
    return (Q, he) => (d(), P(X(o(ee)), W({
      class: ["b-avatar", o(z)],
      style: o(Y)
    }, o(H), { onClick: ie }), {
      default: O(() => [
        o(_) ? (d(), m("span", Lo, [
          g(Q.$slots, "default")
        ])) : e.src ? (d(), m("span", No, [
          E("img", {
            src: e.src,
            alt: e.alt,
            onError: ce
          }, null, 40, Eo)
        ])) : e.text ? (d(), m("span", {
          key: 2,
          class: I(["b-avatar-text", o($)]),
          style: Ie(o(D))
        }, j(e.text), 7)) : M("", !0),
        o(b) ? (d(), m("span", {
          key: 3,
          class: I(["b-avatar-badge", o(T)]),
          style: Ie(o(V))
        }, [
          o(A) ? g(Q.$slots, "badge", { key: 0 }) : (d(), m("span", {
            key: 1,
            class: I(o(L))
          }, j(o(F)), 3))
        ], 6)) : M("", !0)
      ]),
      _: 3
    }, 16, ["class", "style"]));
  }
}), je = {
  active: { type: [Boolean, String], default: !1 },
  activeClass: { type: String, default: "router-link-active" },
  append: { type: [Boolean, String], default: !1 },
  disabled: { type: [Boolean, String], default: !1 },
  event: { type: [String, Array], default: "click" },
  exact: { type: [Boolean, String], default: !1 },
  exactActiveClass: { type: String, default: "router-link-exact-active" },
  href: { type: String },
  rel: { type: String, default: null },
  replace: { type: [Boolean, String], default: !1 },
  routerComponentName: { type: String, default: "router-link" },
  routerTag: { type: String, default: "a" },
  target: { type: String, default: "_self" },
  to: { type: [String, Object], default: null }
}, Do = x({
  props: je,
  emits: ["click"],
  setup(e, { emit: t, attrs: a }) {
    const l = r(s(e, "active")), n = r(s(e, "append")), u = r(s(e, "disabled")), f = r(s(e, "exact")), c = r(s(e, "replace")), v = kl(), h = U(null), p = i(() => {
      const b = e.routerComponentName.split("-").map((y) => y.charAt(0).toUpperCase() + y.slice(1)).join("");
      return !((v == null ? void 0 : v.appContext.app.component(b)) !== void 0) || u.value || !e.to ? "a" : e.routerComponentName;
    }), B = i(() => {
      const b = "#";
      if (e.href)
        return e.href;
      if (typeof e.to == "string")
        return e.to || b;
      const k = e.to;
      if (Object.prototype.toString.call(k) === "[object Object]" && (k.path || k.query || k.hash)) {
        const y = k.path || "", S = k.query ? `?${Object.keys(k.query).map((T) => `${T}=${k.query[T]}`).join("=")}` : "", H = !k.hash || k.hash.charAt(0) === "#" ? k.hash || "" : `#${k.hash}`;
        return `${y}${S}${H}` || b;
      }
      return b;
    }), C = i(() => ({
      to: e.to,
      href: B.value,
      target: e.target,
      rel: e.target === "_blank" && e.rel === null ? "noopener" : e.rel || null,
      tabindex: u.value ? "-1" : typeof a.tabindex > "u" ? null : a.tabindex,
      "aria-disabled": u.value ? "true" : null
    }));
    return {
      computedLinkClasses: i(() => ({
        active: l.value,
        disabled: u.value
      })),
      tag: p,
      routerAttr: C,
      link: h,
      clicked: (b) => {
        if (u.value) {
          b.preventDefault(), b.stopImmediatePropagation();
          return;
        }
        t("click", b);
      },
      activeBoolean: l,
      appendBoolean: n,
      disabledBoolean: u,
      replaceBoolean: c,
      exactBoolean: f
    };
  }
}), Ve = (e, t) => {
  const a = e.__vccOpts || e;
  for (const [l, n] of t)
    a[l] = n;
  return a;
};
function Ro(e, t, a, l, n, u) {
  return e.tag === "router-link" ? (d(), P(X(e.tag), W({ key: 0 }, e.routerAttr, { custom: "" }), {
    default: O(({ href: f, navigate: c, isActive: v, isExactActive: h }) => [
      (d(), P(X(e.routerTag), W({
        ref: "link",
        href: f,
        class: [
          (v || e.activeBoolean) && e.activeClass,
          (h || e.exactBoolean) && e.exactActiveClass
        ]
      }, e.$attrs, { onClick: c }), {
        default: O(() => [
          g(e.$slots, "default")
        ]),
        _: 2
      }, 1040, ["href", "class", "onClick"]))
    ]),
    _: 3
  }, 16)) : (d(), P(X(e.tag), W({
    key: 1,
    ref: "link",
    class: e.computedLinkClasses
  }, e.routerAttr, { onClick: e.clicked }), {
    default: O(() => [
      g(e.$slots, "default")
    ]),
    _: 3
  }, 16, ["class", "onClick"]));
}
const Te = /* @__PURE__ */ Ve(Do, [["render", Ro]]), Jt = ct(je, ["event", "routerTag"]), jo = x({
  components: { BLink: Te },
  props: {
    pill: { type: [Boolean, String], default: !1 },
    tag: { type: String, default: "span" },
    variant: { type: String, default: "secondary" },
    textIndicator: { type: [Boolean, String], default: !1 },
    dotIndicator: { type: [Boolean, String], default: !1 },
    ...Jt
  },
  setup(e) {
    const t = r(s(e, "pill")), a = r(s(e, "textIndicator")), l = r(s(e, "dotIndicator")), n = r(s(e, "active")), u = r(s(e, "disabled")), f = i(() => Qe(e)), c = i(
      () => f.value ? Te : e.tag
    ), v = i(() => [
      [`bg-${e.variant}`],
      {
        active: n.value,
        disabled: u.value,
        "text-dark": ["warning", "info", "light"].includes(e.variant),
        "rounded-pill": t.value,
        "position-absolute top-0 start-100 translate-middle": a.value || l.value,
        "p-2 border border-light rounded-circle": l.value,
        "text-decoration-none": f.value
      }
    ]), h = i(
      () => f.value ? Et(e, Jt) : {}
    );
    return {
      computedClasses: v,
      computedLinkProps: h,
      computedTag: c
    };
  }
});
function qo(e, t, a, l, n, u) {
  return d(), P(X(e.computedTag), W({
    class: ["badge", e.computedClasses]
  }, e.computedLinkProps), {
    default: O(() => [
      g(e.$slots, "default")
    ]),
    _: 3
  }, 16, ["class"]);
}
const Mo = /* @__PURE__ */ Ve(jo, [["render", qo]]), Yt = ct(je, ["event", "routerTag"]), Go = x({
  components: { BLink: Te },
  props: {
    ...Yt,
    active: { type: [Boolean, String], default: !1 },
    ariaCurrent: { type: String, default: "location" },
    disabled: { type: [Boolean, String], default: !1 },
    text: { type: String, required: !1 }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = r(s(e, "active")), l = r(s(e, "disabled")), n = i(() => ({
      active: a.value
    })), u = i(
      () => a.value ? "span" : Te
    ), f = i(
      () => a.value ? e.ariaCurrent : void 0
    );
    return {
      computedLinkProps: i(
        () => u.value !== "span" ? Et(e, Yt) : {}
      ),
      computedClasses: n,
      computedTag: u,
      computedAriaCurrent: f,
      clicked: (h) => {
        if (l.value || a.value) {
          h.preventDefault(), h.stopImmediatePropagation();
          return;
        }
        l.value || t("click", h);
      }
    };
  }
});
function Uo(e, t, a, l, n, u) {
  return d(), m("li", {
    class: I(["breadcrumb-item", e.computedClasses])
  }, [
    (d(), P(X(e.computedTag), W({ "aria-current": e.computedAriaCurrent }, e.computedLinkProps, { onClick: e.clicked }), {
      default: O(() => [
        g(e.$slots, "default", {}, () => [
          J(j(e.text), 1)
        ])
      ]),
      _: 3
    }, 16, ["aria-current", "onClick"]))
  ], 2);
}
const Da = /* @__PURE__ */ Ve(Go, [["render", Uo]]), Wo = { "aria-label": "breadcrumb" }, Xo = { class: "breadcrumb" }, Ko = /* @__PURE__ */ x({
  __name: "BBreadcrumb",
  props: {
    items: null
  },
  setup(e) {
    const t = e, a = vo(), l = i(() => {
      const n = t.items || (a == null ? void 0 : a.items) || [];
      let u = !1;
      return n.map((c, v) => (typeof c == "string" && (c = { text: c }, v < n.length - 1 && (c.href = "#")), c.active && (u = !0), !c.active && !u && (c.active = v + 1 === n.length), c));
    });
    return (n, u) => (d(), m("nav", Wo, [
      E("ol", Xo, [
        g(n.$slots, "prepend"),
        (d(!0), m(Z, null, re(o(l), (f, c) => (d(), P(Da, W({ key: c }, f), {
          default: O(() => [
            J(j(f.text), 1)
          ]),
          _: 2
        }, 1040))), 128)),
        g(n.$slots, "default"),
        g(n.$slots, "append")
      ])
    ]));
  }
}), Jo = {
  key: 0,
  class: "visually-hidden"
}, gt = /* @__PURE__ */ x({
  __name: "BSpinner",
  props: {
    label: null,
    role: { default: "status" },
    small: { default: !1 },
    tag: { default: "span" },
    type: { default: "border" },
    variant: null
  },
  setup(e) {
    const t = e, a = $e(), l = r(s(t, "small")), n = i(() => ({
      "spinner-border": t.type === "border",
      "spinner-border-sm": t.type === "border" && l.value,
      "spinner-grow": t.type === "grow",
      "spinner-grow-sm": t.type === "grow" && l.value,
      [`text-${t.variant}`]: t.variant !== void 0
    })), u = i(() => !we(a.label));
    return (f, c) => (d(), P(X(e.tag), {
      class: I(o(n)),
      role: e.label || o(u) ? e.role : null,
      "aria-hidden": e.label || o(u) ? null : !0
    }, {
      default: O(() => [
        e.label || o(u) ? (d(), m("span", Jo, [
          g(f.$slots, "label", {}, () => [
            J(j(e.label), 1)
          ])
        ])) : M("", !0)
      ]),
      _: 3
    }, 8, ["class", "role", "aria-hidden"]));
  }
}), Yo = x({
  components: { BLink: Te, BSpinner: gt },
  props: {
    ...je,
    active: { type: [Boolean, String], default: !1 },
    disabled: { type: [Boolean, String], default: !1 },
    href: { type: String, required: !1 },
    pill: { type: [Boolean, String], default: !1 },
    pressed: { type: [Boolean, String], default: !1 },
    rel: { type: String, default: void 0 },
    size: { type: String, default: "md" },
    squared: { type: [Boolean, String], default: !1 },
    tag: { type: String, default: "button" },
    target: { type: String, default: "_self" },
    type: { type: String, default: "button" },
    variant: { type: String, default: "secondary" },
    loading: { type: [Boolean, String], default: !1 },
    loadingMode: { type: String, default: "inline" }
  },
  emits: ["click", "update:pressed"],
  setup(e, { emit: t }) {
    const a = r(s(e, "active")), l = r(s(e, "disabled")), n = r(s(e, "pill")), u = r(s(e, "pressed")), f = r(s(e, "squared")), c = r(s(e, "loading")), v = i(() => u.value === !0), h = i(
      () => e.tag === "button" && e.href === void 0 && e.to === null
    ), p = i(() => Qe(e)), B = i(() => e.to !== null), C = i(
      () => e.href !== void 0 ? !1 : !h.value
    ), _ = i(() => [
      [`btn-${e.variant}`],
      [`btn-${e.size}`],
      {
        active: a.value || u.value,
        "rounded-pill": n.value,
        "rounded-0": f.value,
        disabled: l.value
      }
    ]), A = i(() => ({
      "aria-disabled": C.value ? l.value : null,
      "aria-pressed": v.value ? u.value : null,
      autocomplete: v.value ? "off" : null,
      disabled: h.value ? l.value : null,
      href: e.href,
      rel: p.value ? e.rel : null,
      role: C.value || p.value ? "button" : null,
      target: p.value ? e.target : null,
      type: h.value ? e.type : null,
      to: h.value ? null : e.to,
      append: p.value ? e.append : null,
      activeClass: B.value ? e.activeClass : null,
      event: B.value ? e.event : null,
      exact: B.value ? e.exact : null,
      exactActiveClass: B.value ? e.exactActiveClass : null,
      replace: B.value ? e.replace : null,
      routerComponentName: B.value ? e.routerComponentName : null,
      routerTag: B.value ? e.routerTag : null
    })), b = i(
      () => B.value ? Te : e.href ? "a" : e.tag
    );
    return {
      computedClasses: _,
      computedAttrs: A,
      computedTag: b,
      clicked: (y) => {
        if (l.value) {
          y.preventDefault(), y.stopPropagation();
          return;
        }
        t("click", y), v.value && t("update:pressed", !u.value);
      },
      loadingBoolean: c
    };
  }
});
function Zo(e, t, a, l, n, u) {
  const f = ua("b-spinner");
  return d(), P(X(e.computedTag), W({
    class: ["btn", e.computedClasses]
  }, e.computedAttrs, { onClick: e.clicked }), {
    default: O(() => [
      e.loadingBoolean ? (d(), m("div", {
        key: 0,
        class: I(["btn-loading", { "mode-fill": e.loadingMode === "fill", "mode-inline": e.loadingMode === "inline" }])
      }, [
        g(e.$slots, "loading", {}, () => [
          se(f, {
            class: "btn-spinner",
            small: e.size !== "lg"
          }, null, 8, ["small"])
        ])
      ], 2)) : M("", !0),
      E("div", {
        class: I(["btn-content", { "btn-loading-fill": e.loadingBoolean && e.loadingMode === "fill" }])
      }, [
        g(e.$slots, "default")
      ], 2)
    ]),
    _: 3
  }, 16, ["class", "onClick"]);
}
const et = /* @__PURE__ */ Ve(Yo, [["render", Zo]]), Qo = /* @__PURE__ */ x({
  __name: "BButtonGroup",
  props: {
    ariaLabel: { default: "Group" },
    size: null,
    tag: { default: "div" },
    vertical: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(s(t, "vertical")), l = i(() => ({
      "btn-group": !a.value && t.size === void 0,
      [`btn-group-${t.size}`]: t.size !== void 0,
      "btn-group-vertical": a.value
    }));
    return (n, u) => (d(), P(X(e.tag), {
      class: I(o(l)),
      role: "group",
      "aria-label": e.ariaLabel
    }, {
      default: O(() => [
        g(n.$slots, "default")
      ]),
      _: 3
    }, 8, ["class", "aria-label"]));
  }
}), en = ["role", "aria-label"], tn = /* @__PURE__ */ x({
  __name: "BButtonToolbar",
  props: {
    ariaLabel: { default: "Group" },
    justify: { default: !1 },
    role: { default: "toolbar" }
  },
  setup(e) {
    const a = r(s(e, "justify")), l = i(() => ({
      "justify-content-between": a.value
    }));
    return (n, u) => (d(), m("div", {
      class: I([o(l), "btn-toolbar"]),
      role: e.role,
      "aria-label": e.ariaLabel
    }, [
      g(n.$slots, "default")
    ], 10, en));
  }
}), Rt = /* @__PURE__ */ x({
  __name: "BImg",
  props: {
    alt: null,
    blank: { default: !1 },
    blankColor: { default: "transparent" },
    block: { default: !1 },
    center: { default: !1 },
    fluid: { default: !1 },
    lazy: { default: !1 },
    fluidGrow: { default: !1 },
    height: null,
    left: { default: !1 },
    start: { default: !1 },
    right: { default: !1 },
    end: { default: !1 },
    rounded: { type: [Boolean, String], default: !1 },
    sizes: null,
    src: null,
    srcset: null,
    thumbnail: { default: !1 },
    width: null
  },
  emits: ["load"],
  setup(e, { emit: t }) {
    const a = e, l = '<svg width="%{w}" height="%{h}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 %{w} %{h}" preserveAspectRatio="none"><rect width="100%" height="100%" style="fill:%{f};"></rect></svg>', n = r(s(a, "lazy")), u = r(s(a, "blank")), f = r(s(a, "block")), c = r(s(a, "center")), v = r(s(a, "fluid")), h = r(s(a, "fluidGrow")), p = r(s(a, "left")), B = r(s(a, "start")), C = r(s(a, "right")), _ = r(s(a, "end")), A = r(s(a, "thumbnail")), b = i(
      () => typeof a.srcset == "string" ? a.srcset.split(",").filter((z) => z).join(",") : Array.isArray(a.srcset) ? a.srcset.filter((z) => z).join(",") : void 0
    ), k = i(
      () => typeof a.sizes == "string" ? a.sizes.split(",").filter((z) => z).join(",") : Array.isArray(a.sizes) ? a.sizes.filter((z) => z).join(",") : void 0
    ), y = i(() => {
      const z = (D) => D === void 0 ? void 0 : typeof D == "number" ? D : Number.parseInt(D, 10) || void 0, $ = z(a.width), V = z(a.height);
      if (u.value) {
        if ($ !== void 0 && V === void 0)
          return { height: $, width: $ };
        if ($ === void 0 && V !== void 0)
          return { height: V, width: V };
        if ($ === void 0 && V === void 0)
          return { height: 1, width: 1 };
      }
      return {
        width: $,
        height: V
      };
    }), S = i(
      () => L(y.value.width, y.value.height, a.blankColor)
    ), H = i(() => ({
      src: u.value ? S.value : a.src,
      alt: a.alt,
      width: y.value.width || void 0,
      height: y.value.height || void 0,
      srcset: u.value ? void 0 : b.value,
      sizes: u.value ? void 0 : k.value,
      loading: n.value ? "lazy" : "eager"
    })), T = i(
      () => p.value || B.value ? "float-start" : C.value || _.value ? "float-end" : c.value ? "mx-auto" : void 0
    ), F = i(() => ({
      "img-thumbnail": A.value,
      "img-fluid": v.value || h.value,
      "w-100": h.value,
      rounded: a.rounded === "" || a.rounded === !0,
      [`rounded-${a.rounded}`]: typeof a.rounded == "string" && a.rounded !== "",
      [`${T.value}`]: T.value !== void 0,
      "d-block": f.value || c.value
    })), L = (z, $, V) => `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(
      l.replace("%{w}", String(z)).replace("%{h}", String($)).replace("%{f}", V)
    )}`;
    return (z, $) => (d(), m("img", W({ class: o(F) }, o(H), {
      onLoad: $[0] || ($[0] = (V) => t("load", V))
    }), null, 16));
  }
}), dt = /* @__PURE__ */ x({
  __name: "BCardImg",
  props: {
    alt: null,
    blank: { default: !1 },
    blankColor: null,
    bottom: { default: !1 },
    lazy: { default: !1 },
    height: null,
    left: { default: !1 },
    start: { default: !1 },
    right: { default: !1 },
    end: { default: !1 },
    sizes: null,
    src: null,
    srcset: null,
    top: { default: !1 },
    width: null
  },
  emits: ["load"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "bottom")), n = r(s(a, "end")), u = r(s(a, "left")), f = r(s(a, "right")), c = r(s(a, "start")), v = r(s(a, "top")), h = i(
      () => v.value ? "card-img-top" : f.value || n.value ? "card-img-right" : l.value ? "card-img-bottom" : u.value || c.value ? "card-img-left" : "card-img"
    ), p = i(() => ({
      alt: a.alt,
      height: a.height,
      src: a.src,
      lazy: a.lazy,
      width: a.width,
      blank: a.blank,
      blankColor: a.blankColor,
      sizes: a.sizes,
      srcset: a.srcset
    }));
    return (B, C) => (d(), P(Rt, W({ class: o(h) }, o(p), {
      onLoad: C[0] || (C[0] = (_) => t("load", _))
    }), null, 16, ["class"]));
  }
}), an = ["innerHTML"], Ra = /* @__PURE__ */ x({
  __name: "BCardHeadFoot",
  props: {
    text: null,
    bgVariant: null,
    borderVariant: null,
    html: null,
    tag: { default: "div" },
    textVariant: null
  },
  setup(e) {
    const t = e, a = i(() => ({
      [`text-${t.textVariant}`]: t.textVariant !== void 0,
      [`bg-${t.bgVariant}`]: t.bgVariant !== void 0,
      [`border-${t.borderVariant}`]: t.borderVariant !== void 0
    }));
    return (l, n) => (d(), P(X(e.tag), {
      class: I(o(a))
    }, {
      default: O(() => [
        e.html ? (d(), m("div", {
          key: 0,
          innerHTML: e.html
        }, null, 8, an)) : g(l.$slots, "default", { key: 1 }, () => [
          J(j(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), ja = /* @__PURE__ */ x({
  __name: "BCardHeader",
  props: {
    text: null,
    bgVariant: null,
    borderVariant: null,
    html: null,
    tag: { default: "div" },
    textVariant: null
  },
  setup(e) {
    const t = e;
    return (a, l) => (d(), P(Ra, W({ class: "card-header" }, t), {
      default: O(() => [
        g(a.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), qa = /* @__PURE__ */ x({
  __name: "BCardTitle",
  props: {
    text: null,
    tag: { default: "h4" }
  },
  setup(e) {
    return (t, a) => (d(), P(X(e.tag), { class: "card-title" }, {
      default: O(() => [
        g(t.$slots, "default", {}, () => [
          J(j(e.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), Ma = /* @__PURE__ */ x({
  __name: "BCardSubtitle",
  props: {
    text: null,
    tag: { default: "h6" },
    textVariant: { default: "muted" }
  },
  setup(e) {
    const t = e, a = i(() => [`text-${t.textVariant}`]);
    return (l, n) => (d(), P(X(e.tag), {
      class: I(["card-subtitle mb-2", o(a)])
    }, {
      default: O(() => [
        g(l.$slots, "default", {}, () => [
          J(j(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Ga = /* @__PURE__ */ x({
  __name: "BCardBody",
  props: {
    bodyBgVariant: null,
    bodyTag: { default: "div" },
    bodyTextVariant: null,
    overlay: { default: !1 },
    subtitle: null,
    subtitleTag: { default: "h4" },
    subtitleTextVariant: null,
    title: null,
    titleTag: { default: "h4" },
    text: null
  },
  setup(e) {
    const t = e, a = $e(), l = r(s(t, "overlay")), n = i(() => !we(a.title)), u = i(() => !we(a.subtitle)), f = i(() => ({
      "card-img-overlay": l.value,
      [`text-${t.bodyTextVariant}`]: t.bodyTextVariant !== void 0,
      [`bg-${t.bodyBgVariant}`]: t.bodyBgVariant !== void 0
    }));
    return (c, v) => (d(), P(X(e.bodyTag), {
      class: I(["card-body", o(f)])
    }, {
      default: O(() => [
        !!e.title || o(n) ? (d(), P(qa, {
          key: 0,
          tag: e.titleTag
        }, {
          default: O(() => [
            g(c.$slots, "title", {}, () => [
              J(j(e.title), 1)
            ])
          ]),
          _: 3
        }, 8, ["tag"])) : M("", !0),
        !!e.subtitle || o(u) ? (d(), P(Ma, {
          key: 1,
          tag: e.subtitleTag,
          "text-variant": e.subtitleTextVariant
        }, {
          default: O(() => [
            g(c.$slots, "subtitle", {}, () => [
              J(j(e.subtitle), 1)
            ])
          ]),
          _: 3
        }, 8, ["tag", "text-variant"])) : M("", !0),
        g(c.$slots, "default", {}, () => [
          J(j(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Ua = /* @__PURE__ */ x({
  __name: "BCardFooter",
  props: {
    text: null,
    bgVariant: null,
    borderVariant: null,
    html: null,
    tag: { default: "div" },
    textVariant: null
  },
  setup(e) {
    const t = e;
    return (a, l) => (d(), P(Ra, W({ class: "card-footer" }, t), {
      default: O(() => [
        g(a.$slots, "default", {}, () => [
          J(j(e.text), 1)
        ])
      ]),
      _: 3
    }, 16));
  }
}), Wa = /* @__PURE__ */ x({
  __name: "BCard",
  props: {
    align: null,
    bgVariant: null,
    bodyBgVariant: null,
    bodyClass: null,
    bodyTag: { default: "div" },
    bodyTextVariant: null,
    borderVariant: null,
    footer: null,
    footerBgVariant: null,
    footerBorderVariant: null,
    footerClass: null,
    footerHtml: { default: "" },
    footerTag: { default: "div" },
    footerTextVariant: null,
    header: null,
    headerBgVariant: null,
    headerBorderVariant: null,
    headerClass: null,
    headerHtml: { default: "" },
    headerTag: { default: "div" },
    headerTextVariant: null,
    imgAlt: null,
    imgBottom: { default: !1 },
    imgEnd: { default: !1 },
    imgHeight: null,
    imgLeft: { default: !1 },
    imgRight: { default: !1 },
    imgSrc: null,
    imgStart: { default: !1 },
    imgTop: { default: !1 },
    imgWidth: null,
    noBody: { default: !1 },
    overlay: { default: !1 },
    subtitle: null,
    subtitleTag: { default: "h6" },
    subtitleTextVariant: { default: "muted" },
    tag: { default: "div" },
    textVariant: null,
    title: null,
    titleTag: { default: "h4" },
    bodyText: { default: "" }
  },
  setup(e) {
    const t = e, a = $e(), l = r(s(t, "imgBottom")), n = r(s(t, "imgEnd")), u = r(s(t, "imgLeft")), f = r(s(t, "imgRight")), c = r(s(t, "imgStart")), v = r(s(t, "noBody")), h = i(() => !we(a.header)), p = i(() => !we(a.footer)), B = i(() => ({
      [`text-${t.align}`]: t.align !== void 0,
      [`text-${t.textVariant}`]: t.textVariant !== void 0,
      [`bg-${t.bgVariant}`]: t.bgVariant !== void 0,
      [`border-${t.borderVariant}`]: t.borderVariant !== void 0,
      "flex-row": u.value || c.value,
      "flex-row-reverse": n.value || f.value
    })), C = i(() => ({
      bgVariant: t.headerBgVariant,
      borderVariant: t.headerBorderVariant,
      html: t.headerHtml,
      tag: t.headerTag,
      textVariant: t.headerTextVariant
    })), _ = i(() => ({
      overlay: t.overlay,
      bodyBgVariant: t.bodyBgVariant,
      bodyTag: t.bodyTag,
      bodyTextVariant: t.bodyTextVariant,
      subtitle: t.subtitle,
      subtitleTag: t.subtitleTag,
      subtitleTextVariant: t.subtitleTextVariant,
      title: t.title,
      titleTag: t.titleTag
    })), A = i(() => ({
      bgVariant: t.footerBgVariant,
      borderVariant: t.footerBorderVariant,
      html: t.footerHtml,
      tag: t.footerTag,
      textVariant: t.footerTextVariant
    })), b = i(() => ({
      src: t.imgSrc,
      alt: t.imgAlt,
      height: t.imgHeight,
      width: t.imgWidth,
      bottom: t.imgBottom,
      end: t.imgEnd,
      left: t.imgLeft,
      right: t.imgRight,
      start: t.imgStart,
      top: t.imgTop
    }));
    return (k, y) => (d(), P(X(e.tag), {
      class: I(["card", o(B)])
    }, {
      default: O(() => [
        o(l) ? M("", !0) : g(k.$slots, "img", { key: 0 }, () => [
          e.imgSrc ? (d(), P(dt, ve(W({ key: 0 }, o(b))), null, 16)) : M("", !0)
        ]),
        e.header || o(h) || e.headerHtml ? (d(), P(ja, W({ key: 1 }, o(C), { class: e.headerClass }), {
          default: O(() => [
            g(k.$slots, "header", {}, () => [
              J(j(e.header), 1)
            ])
          ]),
          _: 3
        }, 16, ["class"])) : M("", !0),
        o(v) ? g(k.$slots, "default", { key: 3 }, () => [
          J(j(e.bodyText), 1)
        ]) : (d(), P(Ga, W({ key: 2 }, o(_), { class: e.bodyClass }), {
          default: O(() => [
            g(k.$slots, "default", {}, () => [
              J(j(e.bodyText), 1)
            ])
          ]),
          _: 3
        }, 16, ["class"])),
        e.footer || o(p) || e.footerHtml ? (d(), P(Ua, W({ key: 4 }, o(A), { class: e.footerClass }), {
          default: O(() => [
            g(k.$slots, "footer", {}, () => [
              J(j(e.footer), 1)
            ])
          ]),
          _: 3
        }, 16, ["class"])) : M("", !0),
        o(l) ? g(k.$slots, "img", { key: 5 }, () => [
          e.imgSrc ? (d(), P(dt, ve(W({ key: 0 }, o(b))), null, 16)) : M("", !0)
        ]) : M("", !0)
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), ln = /* @__PURE__ */ x({
  __name: "BCardGroup",
  props: {
    columns: { default: !1 },
    deck: { default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = r(s(t, "columns")), l = r(s(t, "deck")), n = i(
      () => l.value ? "card-deck" : a.value ? "card-columns" : "card-group"
    ), u = i(() => [n.value]);
    return (f, c) => (d(), P(X(e.tag), {
      class: I(o(u))
    }, {
      default: O(() => [
        g(f.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), on = /* @__PURE__ */ x({
  __name: "BCardText",
  props: {
    text: null,
    tag: { default: "p" }
  },
  setup(e) {
    return (t, a) => (d(), P(X(e.tag), { class: "card-text" }, {
      default: O(() => [
        g(t.$slots, "default", {}, () => [
          J(j(e.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), nn = ["id"], sn = {
  key: 0,
  class: "carousel-indicators"
}, rn = ["data-bs-target", "data-bs-slide-to", "aria-label"], un = { class: "carousel-inner" }, dn = ["data-bs-target"], cn = /* @__PURE__ */ E("span", {
  class: "carousel-control-prev-icon",
  "aria-hidden": "true"
}, null, -1), fn = { class: "visually-hidden" }, vn = ["data-bs-target"], mn = /* @__PURE__ */ E("span", {
  class: "carousel-control-next-icon",
  "aria-hidden": "true"
}, null, -1), bn = { class: "visually-hidden" }, Xa = Symbol(), pn = /* @__PURE__ */ x({
  __name: "BCarousel",
  props: {
    startingSlide: { default: 0 },
    id: null,
    imgHeight: null,
    imgWidth: null,
    background: null,
    modelValue: { default: 0 },
    controls: { default: !1 },
    indicators: { default: !1 },
    interval: { default: 5e3 },
    noTouch: { default: !1 },
    noWrap: { default: !1 },
    controlsPrevText: { default: "Previous" },
    controlsNextText: { default: "Next" },
    indicatorsButtonLabel: { default: "Slide" }
  },
  emits: ["sliding-start", "sliding-end"],
  setup(e, { emit: t }) {
    const a = e, l = $e(), n = ye(s(a, "id"), "carousel"), u = r(s(a, "controls")), f = r(s(a, "indicators")), c = r(s(a, "noTouch"));
    r(s(a, "noWrap"));
    const v = U(), h = U(), p = U([]);
    return be(v, "slide.bs.carousel", (B) => t("sliding-start", B)), be(v, "slid.bs.carousel", (B) => t("sliding-end", B)), Be(() => {
      h.value = new Ol(v.value, {
        wrap: !c.value,
        interval: a.interval,
        touch: !c.value
      }), l.default && (p.value = l.default().filter((B) => {
        var C;
        return ((C = B.type) == null ? void 0 : C.__name) === "BCarouselSlide";
      }));
    }), We(Xa, {
      background: a.background,
      width: a.imgWidth,
      height: a.imgHeight
    }), (B, C) => (d(), m("div", {
      id: o(n),
      ref_key: "element",
      ref: v,
      class: "carousel slide",
      "data-bs-ride": "carousel"
    }, [
      o(f) ? (d(), m("div", sn, [
        (d(!0), m(Z, null, re(p.value, (_, A) => (d(), m("button", {
          key: A,
          type: "button",
          "data-bs-target": `#${o(n)}`,
          "data-bs-slide-to": A,
          class: I(A === e.startingSlide ? "active" : ""),
          "aria-current": "true",
          "aria-label": `${e.indicatorsButtonLabel} ${A}`
        }, null, 10, rn))), 128))
      ])) : M("", !0),
      E("div", un, [
        g(B.$slots, "default")
      ]),
      o(u) ? (d(), m(Z, { key: 1 }, [
        E("button", {
          class: "carousel-control-prev",
          type: "button",
          "data-bs-target": `#${o(n)}`,
          "data-bs-slide": "prev"
        }, [
          cn,
          E("span", fn, j(e.controlsPrevText), 1)
        ], 8, dn),
        E("button", {
          class: "carousel-control-next",
          type: "button",
          "data-bs-target": `#${o(n)}`,
          "data-bs-slide": "next"
        }, [
          mn,
          E("span", bn, j(e.controlsNextText), 1)
        ], 8, vn)
      ], 64)) : M("", !0)
    ], 8, nn));
  }
}), gn = ["data-bs-interval"], hn = ["innerHTML"], yn = { key: 1 }, Bn = ["innerHTML"], $n = { key: 1 }, kn = /* @__PURE__ */ x({
  __name: "BCarouselSlide",
  props: {
    imgSrc: null,
    imgHeight: null,
    imgWidth: null,
    interval: null,
    active: { default: !1 },
    background: null,
    caption: null,
    captionHtml: null,
    captionTag: { default: "h3" },
    contentTag: { default: "div" },
    contentVisibleUp: null,
    id: null,
    imgAlt: null,
    imgBlank: { default: !1 },
    imgBlankColor: { default: "transparent" },
    text: null,
    textHtml: null,
    textTag: { default: "p" }
  },
  setup(e) {
    const t = e, a = $e(), l = Ne(Xa, {}), n = r(s(t, "active")), u = i(() => !we(a.default)), f = i(() => ({
      background: `${t.background || l.background || "rgb(171, 171, 171)"} none repeat scroll 0% 0%`
    })), c = i(() => ({
      "d-none": t.contentVisibleUp !== void 0,
      [`d-${t.contentVisibleUp}-block`]: t.contentVisibleUp !== void 0
    })), v = i(() => l.width), h = i(() => l.height);
    return (p, B) => (d(), m("div", {
      class: I(["carousel-item", { active: o(n) }]),
      "data-bs-interval": e.interval,
      style: Ie(o(f))
    }, [
      g(p.$slots, "img", {}, () => [
        se(Rt, {
          class: "d-block w-100",
          alt: e.imgAlt,
          src: e.imgSrc,
          width: e.imgWidth || o(v),
          height: e.imgHeight || o(h),
          blank: e.imgBlank,
          "blank-color": e.imgBlankColor
        }, null, 8, ["alt", "src", "width", "height", "blank", "blank-color"])
      ]),
      e.caption || e.captionHtml || e.text || e.textHtml || o(u) ? (d(), P(X(e.contentTag), {
        key: 0,
        class: I(["carousel-caption", o(c)])
      }, {
        default: O(() => [
          e.caption || e.captionHtml ? (d(), P(X(e.captionTag), { key: 0 }, {
            default: O(() => [
              e.captionHtml ? (d(), m("span", {
                key: 0,
                innerHTML: e.captionHtml
              }, null, 8, hn)) : (d(), m("span", yn, j(e.caption), 1))
            ]),
            _: 1
          })) : M("", !0),
          e.text || e.textHtml ? (d(), P(X(e.textTag), { key: 1 }, {
            default: O(() => [
              e.textHtml ? (d(), m("span", {
                key: 0,
                innerHTML: e.textHtml
              }, null, 8, Bn)) : (d(), m("span", $n, j(e.text), 1))
            ]),
            _: 1
          })) : M("", !0),
          g(p.$slots, "default")
        ]),
        _: 3
      }, 8, ["class"])) : M("", !0)
    ], 14, gn));
  }
}), Zt = bt("", [], { type: [Boolean, String, Number], default: !1 }), Qt = bt("offset", [""], { type: [String, Number], default: null }), ea = bt("order", [""], { type: [String, Number], default: null }), Cn = x({
  name: "BCol",
  props: {
    col: { type: [Boolean, String], default: !1 },
    cols: { type: [String, Number], default: null },
    ...Zt,
    offset: { type: [String, Number], default: null },
    ...Qt,
    order: { type: [String, Number], default: null },
    ...ea,
    alignSelf: { type: String, default: null },
    tag: { type: String, default: "div" }
  },
  setup(e) {
    const t = [
      { content: Zt, propPrefix: "cols", classPrefix: "col" },
      { content: Qt, propPrefix: "offset" },
      { content: ea, propPrefix: "order" }
    ], a = r(s(e, "col")), l = i(
      () => t.flatMap((u) => Ca(e, u.content, u.propPrefix, u.classPrefix))
    );
    return {
      computedClasses: i(() => [
        l.value,
        {
          col: a.value || !l.value.some((u) => /^col-/.test(u)) && !e.cols,
          [`col-${e.cols}`]: !!e.cols,
          [`offset-${e.offset}`]: !!e.offset,
          [`order-${e.order}`]: !!e.order,
          [`align-self-${e.alignSelf}`]: !!e.alignSelf
        }
      ])
    };
  }
});
function Sn(e, t, a, l, n, u) {
  return d(), P(X(e.tag), {
    class: I(e.computedClasses)
  }, {
    default: O(() => [
      g(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["class"]);
}
const Ze = /* @__PURE__ */ Ve(Cn, [["render", Sn]]), wn = /* @__PURE__ */ x({
  __name: "BContainer",
  props: {
    gutterX: null,
    gutterY: null,
    fluid: { type: [Boolean, String], default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = U(), l = i(() => ({
      container: t.fluid === !1,
      ["container-fluid"]: t.fluid === !0,
      [`container-${t.fluid}`]: typeof t.fluid == "string",
      [`gx-${t.gutterX}`]: t.gutterX !== void 0,
      [`gy-${t.gutterY}`]: t.gutterY !== void 0
    }));
    return (n, u) => (d(), P(X(e.tag), {
      ref_key: "container",
      ref: a,
      class: I(o(l))
    }, {
      default: O(() => [
        g(n.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Tn = { class: "visually-hidden" }, Vn = ["aria-labelledby", "role"], Ka = /* @__PURE__ */ x({
  __name: "BDropdown",
  props: {
    id: null,
    menuClass: null,
    size: null,
    splitClass: null,
    splitVariant: null,
    text: null,
    toggleClass: null,
    autoClose: { type: [Boolean, String], default: !0 },
    block: { default: !1 },
    boundary: { default: "clippingParents" },
    dark: { default: !1 },
    disabled: { default: !1 },
    isNav: { default: !1 },
    dropup: { default: !1 },
    dropright: { default: !1 },
    dropleft: { default: !1 },
    noFlip: { default: !1 },
    offset: { default: 0 },
    popperOpts: { default: () => ({}) },
    right: { default: !1 },
    role: { default: "menu" },
    split: { default: !1 },
    splitButtonType: { default: "button" },
    splitHref: { default: void 0 },
    noCaret: { default: !1 },
    toggleText: { default: "Toggle dropdown" },
    variant: { default: "secondary" }
  },
  emits: ["show", "shown", "hide", "hidden", "click", "toggle"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = ye(s(l, "id"), "dropdown"), u = r(s(l, "block")), f = r(s(l, "dark")), c = r(s(l, "dropup")), v = r(s(l, "dropright")), h = r(s(l, "isNav")), p = r(s(l, "dropleft")), B = r(s(l, "right")), C = r(s(l, "split")), _ = r(s(l, "noCaret")), A = U(), b = U(), k = U(), y = i(() => ({
      "d-grid": u.value,
      "d-flex": u.value && C.value
    })), S = i(() => [
      C.value ? l.splitClass : l.toggleClass,
      {
        "nav-link": h.value,
        "dropdown-toggle": !C.value,
        "dropdown-toggle-no-caret": _.value && !C.value,
        "w-100": C.value && u.value
      }
    ]), H = i(() => [
      l.menuClass,
      {
        "dropdown-menu-dark": f.value,
        "dropdown-menu-end": B.value
      }
    ]), T = i(() => ({
      "data-bs-toggle": C.value ? void 0 : "dropdown",
      "aria-expanded": C.value ? void 0 : !1,
      ref: C.value ? void 0 : b,
      href: C.value ? l.splitHref : void 0
    })), F = i(() => ({
      ref: C.value ? b : void 0
    })), L = () => {
      var $;
      ($ = k.value) == null || $.hide();
    }, z = ($) => {
      C.value && a("click", $);
    };
    return be(A, "show.bs.dropdown", () => a("show")), be(A, "shown.bs.dropdown", () => a("shown")), be(A, "hide.bs.dropdown", () => a("hide")), be(A, "hidden.bs.dropdown", () => a("hidden")), Be(() => {
      var $;
      k.value = new zl(($ = b.value) == null ? void 0 : $.$el, {
        autoClose: l.autoClose,
        boundary: l.boundary,
        offset: l.offset ? l.offset.toString() : "",
        reference: l.offset || C.value ? "parent" : "toggle",
        popperConfig: (V) => {
          const D = {
            placement: "bottom-start",
            modifiers: l.noFlip ? [
              {
                name: "flip",
                options: {
                  fallbackPlacements: []
                }
              }
            ] : []
          };
          return c.value ? D.placement = B.value ? "top-end" : "top-start" : v.value ? D.placement = "right-start" : p.value ? D.placement = "left-start" : B.value && (D.placement = "bottom-end"), _t(V, _t(D, l.popperOpts));
        }
      });
    }), t({
      hide: L
    }), ($, V) => (d(), m("div", {
      ref_key: "parent",
      ref: A,
      class: I([o(y), "btn-group"])
    }, [
      se(et, W({
        id: o(n),
        variant: e.splitVariant || e.variant,
        size: e.size,
        class: o(S),
        disabled: e.disabled,
        type: e.splitButtonType
      }, o(T), { onClick: z }), {
        default: O(() => [
          g($.$slots, "button-content", {}, () => [
            J(j(e.text), 1)
          ])
        ]),
        _: 3
      }, 16, ["id", "variant", "size", "class", "disabled", "type"]),
      o(C) ? (d(), P(et, W({
        key: 0,
        variant: e.variant,
        size: e.size,
        disabled: e.disabled
      }, o(F), {
        class: [e.toggleClass, "dropdown-toggle-split dropdown-toggle"],
        "data-bs-toggle": "dropdown",
        "aria-expanded": "false",
        onClick: V[0] || (V[0] = (D) => a("toggle"))
      }), {
        default: O(() => [
          E("span", Tn, [
            g($.$slots, "toggle-text", {}, () => [
              J(j(e.toggleText), 1)
            ])
          ])
        ]),
        _: 3
      }, 16, ["variant", "size", "disabled", "class"])) : M("", !0),
      E("ul", {
        class: I(["dropdown-menu", o(H)]),
        "aria-labelledby": o(n),
        role: e.role
      }, [
        g($.$slots, "default")
      ], 10, Vn)
    ], 2));
  }
}), _n = { role: "presentation" }, An = /* @__PURE__ */ x({
  __name: "BDropdownDivider",
  props: {
    tag: { default: "hr" }
  },
  setup(e) {
    return (t, a) => (d(), m("li", _n, [
      (d(), P(X(e.tag), {
        class: "dropdown-divider",
        role: "separator",
        "aria-orientation": "horizontal"
      }))
    ]));
  }
}), xn = {}, In = { role: "presentation" }, Fn = { class: "px-4 py-3" };
function Pn(e, t) {
  return d(), m("li", In, [
    E("form", Fn, [
      g(e.$slots, "default")
    ])
  ]);
}
const On = /* @__PURE__ */ Ve(xn, [["render", Pn]]), zn = { role: "presentation" }, Ln = ["id", "aria-describedby"], Nn = {
  inheritAttrs: !1
}, En = /* @__PURE__ */ x({
  ...Nn,
  __name: "BDropdownGroup",
  props: {
    id: null,
    ariaDescribedby: null,
    header: null,
    headerClass: null,
    headerTag: { default: "header" },
    headerVariant: null
  },
  setup(e) {
    const t = e, a = i(
      () => t.id ? `${t.id}_group_dd_header` : void 0
    ), l = i(
      () => t.headerTag === "header" ? void 0 : "heading"
    ), n = i(() => [
      t.headerClass,
      {
        [`text-${t.headerVariant}`]: t.headerVariant !== void 0
      }
    ]);
    return (u, f) => (d(), m("li", zn, [
      (d(), P(X(e.headerTag), {
        id: o(a),
        class: I(["dropdown-header", o(n)]),
        role: o(l)
      }, {
        default: O(() => [
          g(u.$slots, "header", {}, () => [
            J(j(e.header), 1)
          ])
        ]),
        _: 3
      }, 8, ["id", "class", "role"])),
      E("ul", W({
        id: e.id,
        role: "group",
        class: "list-unstyled"
      }, u.$attrs, {
        "aria-describedby": e.ariaDescribedby || o(a)
      }), [
        g(u.$slots, "default")
      ], 16, Ln)
    ]));
  }
}), Hn = {}, Dn = { class: "dropdown-header" };
function Rn(e, t) {
  return d(), m("li", null, [
    E("h6", Dn, [
      g(e.$slots, "default")
    ])
  ]);
}
const jn = /* @__PURE__ */ Ve(Hn, [["render", Rn]]), qn = {
  inheritAttrs: !1
}, Mn = /* @__PURE__ */ x({
  ...qn,
  __name: "BDropdownItem",
  props: {
    href: null,
    linkClass: null,
    active: { default: !1 },
    disabled: { default: !1 },
    rel: { default: void 0 },
    target: { default: "_self" },
    variant: null
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "active")), n = r(s(a, "disabled")), u = da(), f = i(() => [
      a.linkClass,
      {
        active: l.value,
        disabled: n.value,
        [`text-${a.variant}`]: a.variant !== void 0
      }
    ]), c = i(
      () => a.href ? "a" : u.to ? Te : "button"
    ), v = i(() => ({
      disabled: n.value,
      "aria-current": l.value ? "true" : null,
      href: c.value === "a" ? a.href : null,
      rel: a.rel,
      type: c.value === "button" ? "button" : null,
      target: a.target,
      ...u.to ? { activeClass: "active", ...u } : {}
    })), h = (p) => t("click", p);
    return (p, B) => (d(), m("li", {
      role: "presentation",
      class: I(p.$attrs.class)
    }, [
      (d(), P(X(o(c)), W({
        class: ["dropdown-item", o(f)]
      }, o(v), { onClick: h }), {
        default: O(() => [
          g(p.$slots, "default")
        ]),
        _: 3
      }, 16, ["class"]))
    ], 2));
  }
}), Gn = ["disabled"], Un = {
  inheritAttrs: !1
}, Wn = /* @__PURE__ */ x({
  ...Un,
  __name: "BDropdownItemButton",
  props: {
    buttonClass: null,
    active: { default: !1 },
    activeClass: { default: "active" },
    disabled: { default: !1 },
    variant: null
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "active")), n = r(s(a, "disabled")), u = i(() => [
      a.buttonClass,
      {
        [a.activeClass]: l.value,
        disabled: n.value,
        [`text-${a.variant}`]: a.variant !== void 0
      }
    ]), f = (c) => t("click", c);
    return (c, v) => (d(), m("li", {
      role: "presentation",
      class: I(c.$attrs.class)
    }, [
      E("button", {
        role: "menu",
        type: "button",
        class: I(["dropdown-item", o(u)]),
        disabled: o(n),
        onClick: f
      }, [
        g(c.$slots, "default")
      ], 10, Gn)
    ], 2));
  }
}), Xn = { role: "presentation" }, Kn = { class: "px-4 py-1 mb-0 text-muted" }, Jn = /* @__PURE__ */ x({
  __name: "BDropdownText",
  props: {
    text: { default: "" }
  },
  setup(e) {
    return (t, a) => (d(), m("li", Xn, [
      E("p", Kn, [
        g(t.$slots, "default", {}, () => [
          J(j(e.text), 1)
        ])
      ])
    ]));
  }
}), Yn = ["id", "novalidate", "onSubmit"], Ja = /* @__PURE__ */ x({
  __name: "BForm",
  props: {
    id: null,
    floating: { default: !1 },
    novalidate: { default: !1 },
    validated: { default: !1 }
  },
  emits: ["submit"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "floating")), n = r(s(a, "novalidate")), u = r(s(a, "validated")), f = i(() => ({
      "form-floating": l.value,
      "was-validated": u.value
    })), c = (v) => t("submit", v);
    return (v, h) => (d(), m("form", {
      id: e.id,
      novalidate: o(n),
      class: I(o(f)),
      onSubmit: Lt(c, ["prevent"])
    }, [
      g(v.$slots, "default")
    ], 42, Yn));
  }
}), Zn = { class: "form-floating" }, Qn = ["for"], es = /* @__PURE__ */ x({
  __name: "BFormFloatingLabel",
  props: {
    labelFor: null,
    label: null,
    text: null
  },
  setup(e) {
    return (t, a) => (d(), m("div", Zn, [
      g(t.$slots, "default", {}, () => [
        J(j(e.text), 1)
      ]),
      E("label", { for: e.labelFor }, [
        g(t.$slots, "label", {}, () => [
          J(j(e.label), 1)
        ])
      ], 8, Qn)
    ]));
  }
}), xt = /* @__PURE__ */ x({
  __name: "BFormInvalidFeedback",
  props: {
    ariaLive: null,
    forceShow: { default: !1 },
    id: null,
    text: null,
    role: null,
    state: { default: void 0 },
    tag: { default: "div" },
    tooltip: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(s(t, "forceShow")), l = r(s(t, "state")), n = r(s(t, "tooltip")), u = i(
      () => a.value === !0 || l.value === !1
    ), f = i(() => ({
      "d-block": u.value,
      "invalid-feedback": !n.value,
      "invalid-tooltip": n.value
    })), c = i(() => ({
      id: t.id,
      role: t.role,
      "aria-live": t.ariaLive,
      "aria-atomic": t.ariaLive ? "true" : void 0
    }));
    return (v, h) => (d(), P(X(e.tag), W({ class: o(f) }, o(c)), {
      default: O(() => [
        g(v.$slots, "default", {}, () => [
          J(j(e.text), 1)
        ])
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), st = /* @__PURE__ */ x({
  __name: "BFormRow",
  props: {
    tag: { default: "div" }
  },
  setup(e) {
    return (t, a) => (d(), P(X(e.tag), { class: "row d-flex flex-wrap" }, {
      default: O(() => [
        g(t.$slots, "default")
      ]),
      _: 3
    }));
  }
}), It = /* @__PURE__ */ x({
  __name: "BFormText",
  props: {
    id: null,
    inline: { default: !1 },
    tag: { default: "small" },
    text: null,
    textVariant: { default: "muted" }
  },
  setup(e) {
    const t = e, a = r(s(t, "inline")), l = i(() => [
      [`text-${t.textVariant}`],
      {
        "form-text": !a.value
      }
    ]);
    return (n, u) => (d(), P(X(e.tag), {
      id: e.id,
      class: I(o(l))
    }, {
      default: O(() => [
        g(n.$slots, "default", {}, () => [
          J(j(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Ft = /* @__PURE__ */ x({
  __name: "BFormValidFeedback",
  props: {
    ariaLive: null,
    forceShow: { default: !1 },
    id: null,
    role: null,
    text: null,
    state: { default: void 0 },
    tag: { default: "div" },
    tooltip: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(s(t, "forceShow")), l = r(s(t, "state")), n = r(s(t, "tooltip")), u = i(
      () => a.value === !0 || l.value === !0
    ), f = i(() => ({
      "d-block": u.value,
      "valid-feedback": !n.value,
      "valid-tooltip": n.value
    })), c = i(() => t.ariaLive ? "true" : void 0);
    return (v, h) => (d(), P(X(e.tag), {
      id: e.id,
      role: e.role,
      "aria-live": e.ariaLive,
      "aria-atomic": o(c),
      class: I(o(f))
    }, {
      default: O(() => [
        g(v.$slots, "default", {}, () => [
          J(j(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["id", "role", "aria-live", "aria-atomic", "class"]));
  }
}), ts = ["id", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "aria-required", "value", "indeterminate"], as = ["for"], ls = {
  inheritAttrs: !1
}, Ya = /* @__PURE__ */ x({
  ...ls,
  __name: "BFormCheckbox",
  props: {
    ariaLabel: null,
    ariaLabelledBy: null,
    form: null,
    indeterminate: null,
    name: null,
    id: { default: void 0 },
    autofocus: { default: !1 },
    plain: { default: !1 },
    button: { default: !1 },
    switch: { default: !1 },
    disabled: { default: !1 },
    buttonVariant: { default: "secondary" },
    inline: { default: !1 },
    required: { default: void 0 },
    size: { default: "md" },
    state: { default: void 0 },
    uncheckedValue: { type: [Array, Set, Boolean, String, Object, Number], default: !1 },
    value: { type: [Array, Set, Boolean, String, Object, Number], default: !0 },
    modelValue: { type: [Array, Set, Boolean, String, Object, Number], default: void 0 }
  },
  emits: ["update:modelValue", "input", "change"],
  setup(e, { emit: t }) {
    const a = e, l = $e(), n = ye(s(a, "id"), "form-check"), u = r(
      s(a, "indeterminate")
    ), f = r(s(a, "autofocus")), c = r(s(a, "plain")), v = r(s(a, "button")), h = r(s(a, "switch")), p = r(s(a, "disabled")), B = r(s(a, "inline")), C = r(s(a, "required")), _ = r(s(a, "state")), A = U(null), b = U(!1), k = i(() => !we(l.default)), y = i({
      get: () => a.uncheckedValue ? Array.isArray(a.modelValue) ? a.modelValue.indexOf(a.value) > -1 : a.modelValue === a.value : a.modelValue,
      set: (z) => {
        let $ = z;
        Array.isArray(a.modelValue) ? a.uncheckedValue && ($ = a.modelValue, z ? ($.indexOf(a.uncheckedValue) > -1 && $.splice($.indexOf(a.uncheckedValue), 1), $.push(a.value)) : ($.indexOf(a.value) > -1 && $.splice($.indexOf(a.value), 1), $.push(a.uncheckedValue))) : $ = z ? a.value : a.uncheckedValue, t("input", $), t("update:modelValue", $), t("change", $);
      }
    }), S = i(() => Array.isArray(a.modelValue) ? a.modelValue.indexOf(a.value) > -1 : JSON.stringify(a.modelValue) === JSON.stringify(a.value)), H = Le({
      plain: s(c, "value"),
      button: s(v, "value"),
      inline: s(B, "value"),
      switch: s(h, "value"),
      size: s(a, "size"),
      state: s(_, "value"),
      buttonVariant: s(a, "buttonVariant")
    }), T = Va(H), F = _a(H), L = Aa(H);
    return Be(() => {
      f.value && A.value.focus();
    }), (z, $) => (d(), m("div", {
      class: I(o(T))
    }, [
      Xe(E("input", W({ id: o(n) }, z.$attrs, {
        ref_key: "input",
        ref: A,
        "onUpdate:modelValue": $[0] || ($[0] = (V) => tt(y) ? y.value = V : null),
        class: o(F),
        type: "checkbox",
        disabled: o(p),
        required: !!e.name && !!o(C),
        name: e.name,
        form: e.form,
        "aria-label": e.ariaLabel,
        "aria-labelledby": e.ariaLabelledBy,
        "aria-required": e.name && o(C) ? "true" : void 0,
        value: e.value,
        indeterminate: o(u),
        onFocus: $[1] || ($[1] = (V) => b.value = !0),
        onBlur: $[2] || ($[2] = (V) => b.value = !1)
      }), null, 16, ts), [
        [Cl, o(y)]
      ]),
      o(k) || !o(c) ? (d(), m("label", {
        key: 0,
        for: o(n),
        class: I([o(L), { active: o(S), focus: b.value }])
      }, [
        g(z.$slots, "default")
      ], 10, as)) : M("", !0)
    ], 2));
  }
}), os = ["id"], ns = ["innerHTML"], ss = ["textContent"], rs = /* @__PURE__ */ x({
  __name: "BFormCheckboxGroup",
  props: {
    id: null,
    form: null,
    modelValue: { default: () => [] },
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    name: null,
    options: { default: () => [] },
    plain: { default: !1 },
    required: { default: !1 },
    size: null,
    stacked: { default: !1 },
    state: { default: void 0 },
    switches: { default: !1 },
    textField: { default: "text" },
    validated: { default: !1 },
    valueField: { default: "value" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = e, l = $e(), n = "BFormCheckbox", u = ye(s(a, "id"), "checkbox"), f = ye(s(a, "name"), "checkbox");
    r(s(a, "autofocus"));
    const c = r(s(a, "buttons")), v = r(s(a, "disabled"));
    r(s(a, "plain"));
    const h = r(s(a, "required")), p = r(s(a, "stacked")), B = r(s(a, "state")), C = r(s(a, "switches")), _ = r(s(a, "validated")), A = i({
      get: () => a.modelValue,
      set: (H) => {
        if (JSON.stringify(H) === JSON.stringify(a.modelValue))
          return;
        const T = a.options.filter(
          (F) => H.map((L) => JSON.stringify(L)).includes(JSON.stringify(typeof F == "string" ? F : F[a.valueField]))
        ).map((F) => typeof F == "string" ? F : F[a.valueField]);
        t("input", T), t("update:modelValue", T), t("change", T);
      }
    }), b = i(
      () => (l.first ? ut(l.first(), n, v.value) : []).concat(a.options.map((H) => Fa(H, a))).concat(l.default ? ut(l.default(), n, v.value) : []).map((H, T) => Pa(H, T, a, f, u)).map((H) => ({
        ...H,
        props: {
          switch: C.value,
          ...H.props
        }
      }))
    ), k = Le({
      required: s(h, "value"),
      ariaInvalid: s(a, "ariaInvalid"),
      state: s(B, "value"),
      validated: s(_, "value"),
      buttons: s(c, "value"),
      stacked: s(p, "value"),
      size: s(a, "size")
    }), y = xa(k), S = Ia(k);
    return (H, T) => (d(), m("div", W(o(y), {
      id: o(u),
      role: "group",
      class: [o(S), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      (d(!0), m(Z, null, re(o(b), (F, L) => (d(), P(Ya, W({
        key: L,
        modelValue: o(A),
        "onUpdate:modelValue": T[0] || (T[0] = (z) => tt(A) ? A.value = z : null)
      }, F.props), {
        default: O(() => [
          F.html ? (d(), m("span", {
            key: 0,
            innerHTML: F.html
          }, null, 8, ns)) : (d(), m("span", {
            key: 1,
            textContent: j(F.text)
          }, null, 8, ss))
        ]),
        _: 2
      }, 1040, ["modelValue"]))), 128))
    ], 16, os));
  }
}), Za = ["input", "select", "textarea"], is = Za.map((e) => `${e}:not([disabled])`).join(), us = [...Za, "a", "button", "label"], ds = "label", cs = "invalid-feedback", fs = "valid-feedback", vs = "description", ms = "default", bs = x({
  components: { BCol: Ze, BFormInvalidFeedback: xt, BFormRow: st, BFormText: It, BFormValidFeedback: Ft },
  props: {
    contentCols: { type: [Boolean, String, Number], required: !1 },
    contentColsLg: { type: [Boolean, String, Number], required: !1 },
    contentColsMd: { type: [Boolean, String, Number], required: !1 },
    contentColsSm: { type: [Boolean, String, Number], required: !1 },
    contentColsXl: { type: [Boolean, String, Number], required: !1 },
    description: { type: [String], required: !1 },
    disabled: { type: [Boolean, String], default: !1 },
    feedbackAriaLive: { type: String, default: "assertive" },
    id: { type: String, required: !1 },
    invalidFeedback: { type: String, required: !1 },
    label: { type: String, required: !1 },
    labelAlign: { type: [Boolean, String, Number], required: !1 },
    labelAlignLg: { type: [Boolean, String, Number], required: !1 },
    labelAlignMd: { type: [Boolean, String, Number], required: !1 },
    labelAlignSm: { type: [Boolean, String, Number], required: !1 },
    labelAlignXl: { type: [Boolean, String, Number], required: !1 },
    labelClass: { type: [Array, Object, String], required: !1 },
    labelCols: { type: [Boolean, String, Number], required: !1 },
    labelColsLg: { type: [Boolean, String, Number], required: !1 },
    labelColsMd: { type: [Boolean, String, Number], required: !1 },
    labelColsSm: { type: [Boolean, String, Number], required: !1 },
    labelColsXl: { type: [Boolean, String, Number], required: !1 },
    labelFor: { type: String, required: !1 },
    labelSize: { type: String, required: !1 },
    labelSrOnly: { type: [Boolean, String], default: !1 },
    state: { type: [Boolean, String], default: null },
    tooltip: { type: [Boolean, String], default: !1 },
    validFeedback: { type: String, required: !1 },
    validated: { type: [Boolean, String], default: !1 },
    floating: { type: [Boolean, String], default: !1 }
  },
  setup(e, { attrs: t }) {
    const a = r(s(e, "disabled")), l = r(s(e, "labelSrOnly")), n = r(s(e, "state")), u = r(s(e, "tooltip")), f = r(s(e, "validated")), c = r(s(e, "floating")), v = null, h = ["xs", "sm", "md", "lg", "xl"], p = (L, z) => h.reduce(($, V) => {
      const D = Wt(V === "xs" ? "" : V, `${z}Align`), q = L[D] || null;
      return q && (V === "xs" ? $.push(`text-${q}`) : $.push(`text-${V}-${q}`)), $;
    }, []), B = (L, z) => h.reduce(($, V) => {
      const D = Wt(V === "xs" ? "" : V, `${z}Cols`);
      let q = L[D];
      return q = q === "" ? !0 : q || !1, typeof q != "boolean" && q !== "auto" && (q = Ye(q, 0), q = q > 0 ? q : !1), q && (V === "xs" ? $.cols = q : $[V || (typeof q == "boolean" ? "col" : "cols")] = q), $;
    }, {}), C = U(), _ = (L, z = null) => {
      if (Kl && e.labelFor) {
        const $ = $a(`#${Ul(e.labelFor)}`, C);
        if ($) {
          const V = "aria-describedby", D = (L || "").split(ot), q = (z || "").split(ot), ee = (Nt($, V) || "").split(ot).filter((Y) => !q.includes(Y)).concat(D).filter((Y, G, ie) => ie.indexOf(Y) === G).filter((Y) => Y).join(" ").trim();
          ee ? so($, V, ee) : ro($, V);
        }
      }
    }, A = i(() => B(e, "content")), b = i(() => p(e, "label")), k = i(() => B(e, "label")), y = i(
      () => Object.keys(A.value).length > 0 || Object.keys(k.value).length > 0
    ), S = i(
      () => typeof n.value == "boolean" ? n.value : null
    ), H = i(() => {
      const L = S.value;
      return L === !0 ? "is-valid" : L === !1 ? "is-invalid" : null;
    }), T = i(
      () => pt(t.ariaInvalid, n.value)
    );
    return ne(
      () => v,
      (L, z) => {
        L !== z && _(L, z);
      }
    ), Be(() => {
      Ee(() => {
        _(v);
      });
    }), {
      disabledBoolean: a,
      labelSrOnlyBoolean: l,
      stateBoolean: n,
      tooltipBoolean: u,
      validatedBoolean: f,
      floatingBoolean: c,
      ariaDescribedby: v,
      computedAriaInvalid: T,
      contentColProps: A,
      isHorizontal: y,
      labelAlignClasses: b,
      labelColProps: k,
      onLegendClick: (L) => {
        if (e.labelFor)
          return;
        const { target: z } = L, $ = z ? z.tagName : "";
        if (us.indexOf($) !== -1)
          return;
        const V = oo(is, C).filter(lo);
        V.length === 1 && to(V[0]);
      },
      stateClass: H
    };
  },
  render() {
    const e = this.$props, t = this.$slots, a = ye(), l = !e.labelFor;
    let n = null;
    const u = xe(ds, {}, t) || e.label, f = u ? ze("_BV_label_") : null;
    if (u || this.isHorizontal) {
      const T = l ? "legend" : "label";
      if (this.labelSrOnlyBoolean)
        u && (n = le(
          T,
          {
            class: "visually-hidden",
            id: f,
            for: e.labelFor || null
          },
          u
        )), this.isHorizontal ? n = le(Ze, this.labelColProps, { default: () => n }) : n = le("div", {}, [n]);
      else {
        const F = {
          onClick: l ? this.onLegendClick : null,
          ...this.isHorizontal ? this.labelColProps : {},
          tag: this.isHorizontal ? T : null,
          id: f,
          for: e.labelFor || null,
          tabIndex: l ? "-1" : null,
          class: [
            this.isHorizontal ? "col-form-label" : "form-label",
            {
              "bv-no-focus-ring": l,
              "col-form-label": this.isHorizontal || l,
              "pt-0": !this.isHorizontal && l,
              "d-block": !this.isHorizontal && !l,
              [`col-form-label-${e.labelSize}`]: !!e.labelSize
            },
            this.labelAlignClasses,
            e.labelClass
          ]
        };
        this.isHorizontal ? n = le(Ze, F, { default: () => u }) : n = le(T, F, u);
      }
    }
    let c = null;
    const v = xe(cs, {}, t) || this.invalidFeedback, h = v ? ze("_BV_feedback_invalid_") : void 0;
    v && (c = le(
      xt,
      {
        ariaLive: e.feedbackAriaLive,
        id: h,
        state: this.stateBoolean,
        tooltip: this.tooltipBoolean
      },
      { default: () => v }
    ));
    let p = null;
    const B = xe(fs, {}, t) || this.validFeedback, C = B ? ze("_BV_feedback_valid_") : void 0;
    B && (p = le(
      Ft,
      {
        ariaLive: e.feedbackAriaLive,
        id: C,
        state: this.stateBoolean,
        tooltip: this.tooltipBoolean
      },
      { default: () => B }
    ));
    let _ = null;
    const A = xe(vs, {}, t) || this.description, b = A ? ze("_BV_description_") : void 0;
    A && (_ = le(
      It,
      {
        id: b
      },
      { default: () => A }
    ));
    const k = this.ariaDescribedby = [
      b,
      this.stateBoolean === !1 ? h : null,
      this.stateBoolean === !0 ? C : null
    ].filter((T) => T).join(" ") || null, y = [
      xe(ms, { ariaDescribedby: k, descriptionId: b, id: a, labelId: f }, t) || "",
      c,
      p,
      _
    ];
    !this.isHorizontal && this.floatingBoolean && y.push(n);
    let S = le(
      "div",
      {
        ref: "content",
        class: [
          {
            "form-floating": !this.isHorizontal && this.floatingBoolean
          }
        ]
      },
      y
    );
    this.isHorizontal && (S = le(Ze, { ref: "content", ...this.contentColProps }, { default: () => y }));
    const H = {
      class: [
        "mb-3",
        this.stateClass,
        {
          "was-validated": this.validatedBoolean
        }
      ],
      id: ye(s(e, "id")).value,
      disabled: l ? this.disabledBoolean : null,
      role: l ? null : "group",
      "aria-invalid": this.computedAriaInvalid,
      "aria-labelledby": l && this.isHorizontal ? f : null
    };
    return this.isHorizontal && !l ? le(st, H, { default: () => [n, S] }) : le(
      l ? "fieldset" : "div",
      H,
      this.isHorizontal && l ? [le(st, {}, { default: () => [n, S] })] : this.isHorizontal || !this.floatingBoolean ? [n, S] : [S]
    );
  }
}), ta = [
  "text",
  "number",
  "email",
  "password",
  "search",
  "url",
  "tel",
  "date",
  "time",
  "range",
  "color"
], ps = x({
  props: {
    ...Oa,
    max: { type: [String, Number], required: !1 },
    min: { type: [String, Number], required: !1 },
    step: { type: [String, Number], required: !1 },
    type: {
      type: String,
      default: "text",
      validator: (e) => ta.includes(e)
    }
  },
  emits: ["update:modelValue", "change", "blur", "input"],
  setup(e, { emit: t }) {
    const { input: a, computedId: l, computedAriaInvalid: n, onInput: u, onChange: f, onBlur: c, focus: v, blur: h } = za(e, t), p = U(!1), B = i(() => {
      const A = e.type === "range", b = e.type === "color";
      return {
        "form-control-highlighted": p.value,
        "form-range": A,
        "form-control": b || !e.plaintext && !A,
        "form-control-color": b,
        "form-control-plaintext": e.plaintext && !A && !b,
        [`form-control-${e.size}`]: !!e.size,
        "is-valid": e.state === !0,
        "is-invalid": e.state === !1
      };
    }), C = i(
      () => ta.includes(e.type) ? e.type : "text"
    );
    return {
      computedClasses: B,
      localType: C,
      input: a,
      computedId: l,
      computedAriaInvalid: n,
      onInput: u,
      onChange: f,
      onBlur: c,
      focus: v,
      blur: h,
      highlight: () => {
        p.value !== !0 && (p.value = !0, setTimeout(() => {
          p.value = !1;
        }, 2e3));
      }
    };
  }
}), gs = ["id", "name", "form", "type", "disabled", "placeholder", "required", "autocomplete", "readonly", "min", "max", "step", "list", "aria-required", "aria-invalid"];
function hs(e, t, a, l, n, u) {
  return d(), m("input", W({
    id: e.computedId,
    ref: "input",
    class: e.computedClasses,
    name: e.name || void 0,
    form: e.form || void 0,
    type: e.localType,
    disabled: e.disabled,
    placeholder: e.placeholder,
    required: e.required,
    autocomplete: e.autocomplete || void 0,
    readonly: e.readonly || e.plaintext,
    min: e.min,
    max: e.max,
    step: e.step,
    list: e.type !== "password" ? e.list : void 0,
    "aria-required": e.required ? "true" : void 0,
    "aria-invalid": e.computedAriaInvalid
  }, e.$attrs, {
    onInput: t[0] || (t[0] = (f) => e.onInput(f)),
    onChange: t[1] || (t[1] = (f) => e.onChange(f)),
    onBlur: t[2] || (t[2] = (f) => e.onBlur(f))
  }), null, 16, gs);
}
const ys = /* @__PURE__ */ Ve(ps, [["render", hs]]), Bs = ["id", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "value", "aria-required"], $s = ["for"], Qa = /* @__PURE__ */ x({
  __name: "BFormRadio",
  props: {
    ariaLabel: null,
    ariaLabelledBy: null,
    form: null,
    id: null,
    name: null,
    size: null,
    autofocus: { default: !1 },
    modelValue: { type: [Boolean, String, Array, Object, Number], default: void 0 },
    plain: { default: !1 },
    button: { default: !1 },
    switch: { default: !1 },
    disabled: { default: !1 },
    buttonVariant: { default: "secondary" },
    inline: { default: !1 },
    required: { default: !1 },
    state: { default: void 0 },
    value: { type: [String, Boolean, Object, Number], default: !0 }
  },
  emits: ["input", "change", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, l = $e(), n = ye(s(a, "id"), "form-check"), u = r(s(a, "autofocus")), f = r(s(a, "plain")), c = r(s(a, "button")), v = r(s(a, "switch")), h = r(s(a, "disabled")), p = r(s(a, "inline")), B = r(s(a, "required")), C = r(s(a, "state")), _ = U(null), A = U(!1), b = i({
      get: () => Array.isArray(a.modelValue) ? a.modelValue[0] : a.modelValue,
      set: (L) => {
        const z = L ? a.value : !1, $ = Array.isArray(a.modelValue) ? [z] : z;
        t("input", $), t("change", $), t("update:modelValue", $);
      }
    }), k = i(() => Array.isArray(a.modelValue) ? (a.modelValue || []).find((L) => L === a.value) : JSON.stringify(a.modelValue) === JSON.stringify(a.value)), y = i(() => !we(l.default)), S = Le({
      plain: s(f, "value"),
      button: s(c, "value"),
      inline: s(p, "value"),
      switch: s(v, "value"),
      size: s(a, "size"),
      state: s(C, "value"),
      buttonVariant: s(a, "buttonVariant")
    }), H = Va(S), T = _a(S), F = Aa(S);
    return Be(() => {
      u.value && _.value !== null && _.value.focus();
    }), (L, z) => (d(), m("div", {
      class: I(o(H))
    }, [
      Xe(E("input", W({ id: o(n) }, L.$attrs, {
        ref_key: "input",
        ref: _,
        "onUpdate:modelValue": z[0] || (z[0] = ($) => tt(b) ? b.value = $ : null),
        class: o(T),
        type: "radio",
        disabled: o(h),
        required: !!e.name && !!o(B),
        name: e.name,
        form: e.form,
        "aria-label": e.ariaLabel,
        "aria-labelledby": e.ariaLabelledBy,
        value: e.value,
        "aria-required": e.name && o(B) ? !0 : void 0,
        onFocus: z[1] || (z[1] = ($) => A.value = !0),
        onBlur: z[2] || (z[2] = ($) => A.value = !1)
      }), null, 16, Bs), [
        [Sl, o(b)]
      ]),
      o(y) || !o(f) ? (d(), m("label", {
        key: 0,
        for: o(n),
        class: I([o(F), { active: o(k), focus: A.value }])
      }, [
        g(L.$slots, "default")
      ], 10, $s)) : M("", !0)
    ], 2));
  }
}), ks = ["id"], Cs = ["innerHTML"], Ss = ["textContent"], ws = /* @__PURE__ */ x({
  __name: "BFormRadioGroup",
  props: {
    size: null,
    form: null,
    id: null,
    name: null,
    modelValue: { type: [String, Boolean, Array, Object, Number], default: "" },
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    options: { default: () => [] },
    plain: { default: !1 },
    required: { default: !1 },
    stacked: { default: !1 },
    state: { default: void 0 },
    textField: { default: "text" },
    validated: { default: !1 },
    valueField: { default: "value" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = e, l = $e(), n = "BFormRadio", u = ye(s(a, "id"), "radio"), f = ye(s(a, "name"), "checkbox");
    r(s(a, "autofocus"));
    const c = r(s(a, "buttons")), v = r(s(a, "disabled"));
    r(s(a, "plain"));
    const h = r(s(a, "required")), p = r(s(a, "stacked")), B = r(s(a, "state")), C = r(s(a, "validated")), _ = i({
      get: () => a.modelValue,
      set: (S) => {
        t("input", S), t("update:modelValue", S), t("change", S);
      }
    }), A = i(
      () => (l.first ? ut(l.first(), n, v.value) : []).concat(a.options.map((S) => Fa(S, a))).concat(l.default ? ut(l.default(), n, v.value) : []).map((S, H) => Pa(S, H, a, f, u)).map((S) => ({
        ...S
      }))
    ), b = Le({
      required: s(h, "value"),
      ariaInvalid: s(a, "ariaInvalid"),
      state: s(B, "value"),
      validated: s(C, "value"),
      buttons: s(c, "value"),
      stacked: s(p, "value"),
      size: s(a, "size")
    }), k = xa(b), y = Ia(b);
    return (S, H) => (d(), m("div", W(o(k), {
      id: o(u),
      role: "radiogroup",
      class: [o(y), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      (d(!0), m(Z, null, re(o(A), (T, F) => (d(), P(Qa, W({
        key: F,
        modelValue: o(_),
        "onUpdate:modelValue": H[0] || (H[0] = (L) => tt(_) ? _.value = L : null)
      }, T.props), {
        default: O(() => [
          T.html ? (d(), m("span", {
            key: 0,
            innerHTML: T.html
          }, null, 8, Cs)) : (d(), m("span", {
            key: 1,
            textContent: j(T.text)
          }, null, 8, Ss))
        ]),
        _: 2
      }, 1040, ["modelValue"]))), 128))
    ], 16, ks));
  }
}), Ts = ["value", "disabled"], jt = /* @__PURE__ */ x({
  __name: "BFormSelectOption",
  props: {
    value: null,
    disabled: { default: !1 }
  },
  setup(e) {
    const a = r(s(e, "disabled"));
    return (l, n) => (d(), m("option", {
      value: e.value,
      disabled: o(a)
    }, [
      g(l.$slots, "default")
    ], 8, Ts));
  }
}), Vs = ["label"], el = /* @__PURE__ */ x({
  __name: "BFormSelectOptionGroup",
  props: {
    label: null,
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    options: { default: () => [] },
    textField: { default: "text" },
    valueField: { default: "value" }
  },
  setup(e) {
    const t = e, a = i(
      () => Ht(t.options, "BFormSelectOptionGroup", t)
    );
    return (l, n) => (d(), m("optgroup", { label: e.label }, [
      g(l.$slots, "first"),
      (d(!0), m(Z, null, re(o(a), (u, f) => (d(), P(jt, W({
        key: f,
        value: u.value,
        disabled: u.disabled
      }, l.$attrs, {
        innerHTML: u.html || u.text
      }), null, 16, ["value", "disabled", "innerHTML"]))), 128)),
      g(l.$slots, "default")
    ], 8, Vs));
  }
}), _s = ["id", "name", "form", "multiple", "size", "disabled", "required", "aria-required", "aria-invalid"], As = /* @__PURE__ */ x({
  __name: "BFormSelect",
  props: {
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    form: null,
    htmlField: { default: "html" },
    id: null,
    labelField: { default: "label" },
    multiple: { default: !1 },
    name: null,
    options: { default: () => [] },
    optionsField: { default: "options" },
    plain: { default: !1 },
    required: { default: !1 },
    selectSize: { default: 0 },
    size: null,
    state: { default: void 0 },
    textField: { default: "text" },
    valueField: { default: "value" },
    modelValue: { default: "" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = ye(s(l, "id"), "input"), u = r(s(l, "autofocus")), f = r(s(l, "disabled")), c = r(s(l, "multiple")), v = r(s(l, "plain")), h = r(s(l, "required")), p = r(s(l, "state")), B = U(), C = i(() => ({
      "form-control": v.value,
      [`form-control-${l.size}`]: l.size && v.value,
      "form-select": !v.value,
      [`form-select-${l.size}`]: l.size && !v.value,
      "is-valid": p.value === !0,
      "is-invalid": p.value === !1
    })), _ = i(() => {
      if (l.selectSize || v.value)
        return l.selectSize;
    }), A = i(
      () => pt(l.ariaInvalid, p.value)
    ), b = i(
      () => Ht(l.options, "BFormSelect", l)
    ), k = i({
      get() {
        return l.modelValue;
      },
      set(T) {
        a("change", T), a("update:modelValue", T), a("input", T);
      }
    }), y = () => {
      var T;
      f.value || (T = B.value) == null || T.focus();
    }, S = () => {
      var T;
      f.value || (T = B.value) == null || T.blur();
    }, H = () => {
      Ee(() => {
        var T;
        u.value && ((T = B.value) == null || T.focus());
      });
    };
    return Be(H), zt(H), t({
      blur: S,
      focus: y
    }), (T, F) => Xe((d(), m("select", W({
      id: o(n),
      ref_key: "input",
      ref: B
    }, T.$attrs, {
      "onUpdate:modelValue": F[0] || (F[0] = (L) => tt(k) ? k.value = L : null),
      class: o(C),
      name: e.name,
      form: e.form || void 0,
      multiple: o(c) || void 0,
      size: o(_),
      disabled: o(f),
      required: o(h),
      "aria-required": o(h) ? !0 : void 0,
      "aria-invalid": o(A)
    }), [
      g(T.$slots, "first"),
      (d(!0), m(Z, null, re(o(b), (L, z) => (d(), m(Z, { key: z }, [
        Array.isArray(L.options) ? (d(), P(el, {
          key: 0,
          label: L.label,
          options: L.options
        }, null, 8, ["label", "options"])) : (d(), P(jt, {
          key: 1,
          value: L.value,
          disabled: L.disabled,
          innerHTML: L.html || L.text
        }, null, 8, ["value", "disabled", "innerHTML"]))
      ], 64))), 128)),
      g(T.$slots, "default")
    ], 16, _s)), [
      [wl, o(k)]
    ]);
  }
}), xs = ["id"], tl = /* @__PURE__ */ x({
  __name: "BFormTag",
  props: {
    id: null,
    title: null,
    disabled: { default: !1 },
    noRemove: { default: !1 },
    pill: { default: !1 },
    removeLabel: { default: "Remove tag" },
    tag: { default: "span" },
    variant: { default: "secondary" }
  },
  emits: ["remove"],
  setup(e, { emit: t }) {
    const a = e, l = $e(), n = ye(s(a, "id")), u = r(s(a, "disabled")), f = r(s(a, "noRemove")), c = r(s(a, "pill")), v = i(
      () => {
        var B, C, _;
        return (_ = ((C = (B = l.default) == null ? void 0 : B.call(l)[0].children) == null ? void 0 : C.toString()) || a.title) != null ? _ : "";
      }
    ), h = i(() => `${n.value}taglabel__`), p = i(() => [
      `bg-${a.variant}`,
      {
        "text-dark": ["warning", "info", "light"].includes(a.variant),
        "rounded-pill": c.value,
        disabled: u.value
      }
    ]);
    return (B, C) => (d(), P(X(e.tag), {
      id: o(n),
      title: o(v),
      class: I(["badge b-form-tag d-inline-flex align-items-center mw-100", o(p)]),
      "aria-labelledby": o(h)
    }, {
      default: O(() => [
        E("span", {
          id: o(h),
          class: "b-form-tag-content flex-grow-1 text-truncate"
        }, [
          g(B.$slots, "default", {}, () => [
            J(j(o(v)), 1)
          ])
        ], 8, xs),
        !o(u) && !o(f) ? (d(), P(Ke, {
          key: 0,
          "aria-keyshortcuts": "Delete",
          "aria-label": e.removeLabel,
          class: "b-form-tag-remove",
          white: !["warning", "info", "light"].includes(e.variant),
          "aria-describedby": o(h),
          "aria-controls": e.id,
          onClick: C[0] || (C[0] = (_) => t("remove", o(v)))
        }, null, 8, ["aria-label", "white", "aria-describedby", "aria-controls"])) : M("", !0)
      ]),
      _: 3
    }, 8, ["id", "title", "class", "aria-labelledby"]));
  }
}), Is = ["id"], Fs = ["id", "for", "aria-live"], Ps = ["id", "aria-live"], Os = ["id"], zs = ["aria-controls"], Ls = {
  role: "group",
  class: "d-flex"
}, Ns = ["id", "disabled", "value", "type", "placeholder", "form", "required"], Es = ["disabled"], Hs = {
  "aria-live": "polite",
  "aria-atomic": "true"
}, Ds = {
  key: 0,
  class: "d-block invalid-feedback"
}, Rs = {
  key: 1,
  class: "form-text text-muted"
}, js = {
  key: 2,
  class: "form-text text-muted"
}, qs = ["name", "value"], Ms = /* @__PURE__ */ x({
  __name: "BFormTags",
  props: {
    addButtonText: { default: "Add" },
    addButtonVariant: { default: "outline-secondary" },
    addOnChange: { default: !1 },
    autofocus: { default: !1 },
    disabled: { default: !1 },
    duplicateTagText: { default: "Duplicate tag(s)" },
    inputAttrs: null,
    inputClass: null,
    inputId: null,
    inputType: { default: "text" },
    invalidTagText: { default: "Invalid tag(s)" },
    form: null,
    limit: null,
    limitTagsText: { default: "Tag limit reached" },
    modelValue: { default: () => [] },
    name: null,
    noAddOnEnter: { default: !1 },
    noOuterFocus: { default: !1 },
    noTagRemove: { default: !1 },
    placeholder: { default: "Add tag..." },
    removeOnDelete: { default: !1 },
    required: { default: !1 },
    separator: null,
    state: { default: void 0 },
    size: null,
    tagClass: null,
    tagPills: { default: !1 },
    tagRemoveLabel: null,
    tagRemovedLabel: { default: "Tag removed" },
    tagValidator: { type: Function, default: () => !0 },
    tagVariant: { default: "secondary" }
  },
  emits: ["update:modelValue", "input", "tag-state", "focus", "focusin", "focusout", "blur"],
  setup(e, { emit: t }) {
    const a = e, l = ye(), n = r(s(a, "addOnChange")), u = r(s(a, "autofocus")), f = r(s(a, "disabled")), c = r(s(a, "noAddOnEnter")), v = r(s(a, "noOuterFocus")), h = r(s(a, "noTagRemove")), p = r(s(a, "removeOnDelete")), B = r(s(a, "required")), C = r(s(a, "state")), _ = r(s(a, "tagPills")), A = U(null), b = i(() => a.inputId || `${l.value}input__`), k = U(a.modelValue), y = U(""), S = U(!1), H = U(!1), T = U(""), F = U([]), L = U([]), z = U([]), $ = i(() => ({
      [`form-control-${a.size}`]: a.size !== void 0,
      disabled: f.value,
      focus: H.value,
      "is-invalid": C.value === !1,
      "is-valid": C.value === !0
    })), V = i(() => k.value.includes(y.value)), D = i(
      () => y.value === "" ? !1 : !a.tagValidator(y.value)
    ), q = i(() => k.value.length === a.limit), ee = i(() => !D.value && !V.value), Y = i(() => ({
      addButtonText: a.addButtonText,
      addButtonVariant: a.addButtonVariant,
      addTag: me,
      disableAddButton: ee.value,
      disabled: f.value,
      duplicateTagText: a.duplicateTagText,
      duplicateTags: z.value,
      form: a.form,
      inputAttrs: {
        ...a.inputAttrs,
        disabled: f.value,
        form: a.form,
        id: b,
        value: y
      },
      inputHandlers: {
        input: he,
        keydown: ge,
        change: pe
      },
      inputId: b,
      inputType: a.inputType,
      invalidTagText: a.invalidTagText,
      invalidTags: L.value,
      isDuplicate: V.value,
      isInvalid: D.value,
      isLimitReached: q.value,
      limitTagsText: a.limitTagsText,
      limit: a.limit,
      noTagRemove: h.value,
      placeholder: a.placeholder,
      removeTag: Fe,
      required: B.value,
      separator: a.separator,
      size: a.size,
      state: C.value,
      tagClass: a.tagClass,
      tagPills: _.value,
      tagRemoveLabel: a.tagRemoveLabel,
      tagVariant: a.tagVariant,
      tags: k.value
    }));
    ne(
      () => a.modelValue,
      (K) => {
        k.value = K;
      }
    );
    const G = () => {
      var K;
      u.value && ((K = A.value) == null || K.focus());
    }, ie = (K) => {
      if (f.value) {
        K.target.blur();
        return;
      }
      t("focusin", K);
    }, ce = (K) => {
      f.value || v.value || (H.value = !0, t("focus", K));
    }, Q = (K) => {
      H.value = !1, t("blur", K);
    }, he = (K) => {
      var fe, de;
      const te = typeof K == "string" ? K : K.target.value;
      if (S.value = !1, ((fe = a.separator) == null ? void 0 : fe.includes(te.charAt(0))) && te.length > 0) {
        A.value && (A.value.value = "");
        return;
      }
      if (y.value = te, (de = a.separator) != null && de.includes(te.charAt(te.length - 1))) {
        me(te.slice(0, te.length - 1));
        return;
      }
      F.value = a.tagValidator(te) && !V.value ? [te] : [], L.value = a.tagValidator(te) ? [] : [te], z.value = V.value ? [te] : [], t("tag-state", F.value, L.value, z.value);
    }, pe = (K) => {
      n.value && (he(K), V.value || me(y.value));
    }, ge = (K) => {
      if (K.key === "Enter" && !c.value) {
        me(y.value);
        return;
      }
      (K.key === "Backspace" || K.key === "Delete") && p.value && y.value === "" && S.value && k.value.length > 0 ? Fe(k.value[k.value.length - 1]) : S.value = !0;
    }, me = (K) => {
      var fe;
      if (K = (K || y.value).trim(), K === "" || V.value || !a.tagValidator(K) || a.limit && q.value)
        return;
      const te = [...a.modelValue, K];
      y.value = "", S.value = !0, t("update:modelValue", te), t("input", te), (fe = A.value) == null || fe.focus();
    }, Fe = (K) => {
      var fe;
      const te = k.value.indexOf((fe = K == null ? void 0 : K.toString()) != null ? fe : "");
      T.value = k.value.splice(te, 1).toString(), t("update:modelValue", k.value);
    };
    return Be(() => {
      G(), a.modelValue.length > 0 && (S.value = !0);
    }), zt(() => G()), (K, te) => (d(), m("div", {
      id: o(l),
      class: I(["b-form-tags form-control h-auto", o($)]),
      role: "group",
      tabindex: "-1",
      onFocusin: ie,
      onFocusout: te[1] || (te[1] = (fe) => t("focusout", fe))
    }, [
      E("output", {
        id: `${o(l)}selected_tags__`,
        class: "visually-hidden",
        role: "status",
        for: o(b),
        "aria-live": H.value ? "polite" : "off",
        "aria-atomic": "true",
        "aria-relevant": "additions text"
      }, j(k.value.join(", ")), 9, Fs),
      E("div", {
        id: `${o(l)}removed_tags__`,
        role: "status",
        "aria-live": H.value ? "assertive" : "off",
        "aria-atomic": "true",
        class: "visually-hidden"
      }, " (" + j(e.tagRemovedLabel) + ") " + j(T.value), 9, Ps),
      g(K.$slots, "default", ve(Ce(o(Y))), () => [
        E("ul", {
          id: `${o(l)}tag_list__`,
          class: "b-form-tags-list list-unstyled mb-0 d-flex flex-wrap align-items-center"
        }, [
          (d(!0), m(Z, null, re(k.value, (fe, de) => g(K.$slots, "tag", ve(W({ key: de }, { tag: fe, tagClass: e.tagClass, tagVariant: e.tagVariant, tagPills: o(_), removeTag: Fe })), () => [
            se(tl, {
              class: I(e.tagClass),
              tag: "li",
              variant: e.tagVariant,
              pill: e.tagPills,
              onRemove: Fe
            }, {
              default: O(() => [
                J(j(fe), 1)
              ]),
              _: 2
            }, 1032, ["class", "variant", "pill"])
          ])), 128)),
          E("li", {
            role: "none",
            "aria-live": "off",
            class: "b-from-tags-field flex-grow-1",
            "aria-controls": `${o(l)}tag_list__`
          }, [
            E("div", Ls, [
              E("input", W({
                id: o(b),
                ref_key: "input",
                ref: A,
                disabled: o(f),
                value: y.value,
                type: e.inputType,
                placeholder: e.placeholder,
                class: "b-form-tags-input w-100 flex-grow-1 p-0 m-0 bg-transparent border-0",
                style: { outline: "currentcolor none 0px", "min-width": "5rem" }
              }, e.inputAttrs, {
                form: e.form,
                required: o(B),
                onInput: he,
                onChange: pe,
                onKeydown: ge,
                onFocus: ce,
                onBlur: Q
              }), null, 16, Ns),
              o(ee) ? (d(), m("button", {
                key: 0,
                type: "button",
                class: I(["btn b-form-tags-button py-0", [
                  `btn-${e.addButtonVariant}`,
                  {
                    "disabled invisible": y.value.length === 0
                  },
                  e.inputClass
                ]]),
                style: { "font-size": "90%" },
                disabled: o(f) || y.value.length === 0 || o(q),
                onClick: te[0] || (te[0] = (fe) => me(y.value))
              }, [
                g(K.$slots, "add-button-text", {}, () => [
                  J(j(e.addButtonText), 1)
                ])
              ], 10, Es)) : M("", !0)
            ])
          ], 8, zs)
        ], 8, Os),
        E("div", Hs, [
          o(D) ? (d(), m("div", Ds, j(e.invalidTagText) + ": " + j(y.value), 1)) : M("", !0),
          o(V) ? (d(), m("small", Rs, j(e.duplicateTagText) + ": " + j(y.value), 1)) : M("", !0),
          k.value.length === e.limit ? (d(), m("small", js, "Tag limit reached")) : M("", !0)
        ])
      ]),
      e.name ? (d(!0), m(Z, { key: 0 }, re(k.value, (fe, de) => (d(), m("input", {
        key: de,
        type: "hidden",
        name: e.name,
        value: fe
      }, null, 8, qs))), 128)) : M("", !0)
    ], 42, Is));
  }
}), Gs = x({
  props: {
    ...Oa,
    noResize: { type: [Boolean, String], default: !1 },
    rows: { type: [String, Number], required: !1, default: 2 },
    wrap: { type: String, default: "soft" }
  },
  emits: ["update:modelValue", "change", "blur", "input"],
  setup(e, { emit: t }) {
    const { input: a, computedId: l, computedAriaInvalid: n, onInput: u, onChange: f, onBlur: c, focus: v, blur: h } = za(e, t), p = r(s(e, "noResize")), B = i(() => ({
      "form-control": !e.plaintext,
      "form-control-plaintext": e.plaintext,
      [`form-control-${e.size}`]: !!e.size,
      "is-valid": e.state === !0,
      "is-invalid": e.state === !1
    })), C = i(
      () => p.value ? { resize: "none" } : void 0
    );
    return {
      input: a,
      computedId: l,
      computedAriaInvalid: n,
      onInput: u,
      onChange: f,
      onBlur: c,
      focus: v,
      blur: h,
      computedClasses: B,
      computedStyles: C
    };
  }
}), Us = ["id", "name", "form", "disabled", "placeholder", "required", "autocomplete", "readonly", "aria-required", "aria-invalid", "rows", "wrap"];
function Ws(e, t, a, l, n, u) {
  return d(), m("textarea", W({
    id: e.computedId,
    ref: "input",
    class: e.computedClasses,
    name: e.name || void 0,
    form: e.form || void 0,
    disabled: e.disabled,
    placeholder: e.placeholder,
    required: e.required,
    autocomplete: e.autocomplete || void 0,
    readonly: e.readonly || e.plaintext,
    "aria-required": e.required ? "true" : void 0,
    "aria-invalid": e.computedAriaInvalid,
    rows: e.rows,
    style: e.computedStyles,
    wrap: e.wrap || void 0
  }, e.$attrs, {
    onInput: t[0] || (t[0] = (f) => e.onInput(f)),
    onChange: t[1] || (t[1] = (f) => e.onChange(f)),
    onBlur: t[2] || (t[2] = (f) => e.onBlur(f))
  }), null, 16, Us);
}
const Xs = /* @__PURE__ */ Ve(Gs, [["render", Ws]]), Ks = {
  key: 0,
  class: "input-group-text"
}, Js = ["innerHTML"], Ys = { key: 1 }, Zs = {
  key: 0,
  class: "input-group-text"
}, Qs = ["innerHTML"], er = { key: 1 }, tr = /* @__PURE__ */ x({
  __name: "BInputGroup",
  props: {
    append: null,
    appendHtml: null,
    id: null,
    prepend: null,
    prependHtml: null,
    size: null,
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = i(() => ({
      "input-group-sm": t.size === "sm",
      "input-group-lg": t.size === "lg"
    })), l = i(() => !!t.append || !!t.appendHtml), n = i(() => !!t.prepend || !!t.prependHtml);
    return (u, f) => (d(), P(X(e.tag), {
      id: e.id,
      class: I(["input-group", o(a)]),
      role: "group"
    }, {
      default: O(() => [
        g(u.$slots, "prepend", {}, () => [
          o(n) ? (d(), m("span", Ks, [
            e.prependHtml ? (d(), m("span", {
              key: 0,
              innerHTML: e.prependHtml
            }, null, 8, Js)) : (d(), m("span", Ys, j(e.prepend), 1))
          ])) : M("", !0)
        ]),
        g(u.$slots, "default"),
        g(u.$slots, "append", {}, () => [
          o(l) ? (d(), m("span", Zs, [
            e.appendHtml ? (d(), m("span", {
              key: 0,
              innerHTML: e.appendHtml
            }, null, 8, Qs)) : (d(), m("span", er, j(e.append), 1))
          ])) : M("", !0)
        ])
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), al = /* @__PURE__ */ x({
  __name: "BInputGroupText",
  props: {
    tag: { default: "div" },
    text: null
  },
  setup(e) {
    return (t, a) => (d(), P(X(e.tag), { class: "input-group-text" }, {
      default: O(() => [
        g(t.$slots, "default", {}, () => [
          J(j(e.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), qt = /* @__PURE__ */ x({
  __name: "BInputGroupAddon",
  props: {
    isText: { default: !1 }
  },
  setup(e) {
    const a = r(s(e, "isText"));
    return (l, n) => o(a) ? (d(), P(al, { key: 0 }, {
      default: O(() => [
        g(l.$slots, "default")
      ]),
      _: 3
    })) : g(l.$slots, "default", { key: 1 });
  }
}), ar = /* @__PURE__ */ x({
  __name: "BInputGroupAppend",
  props: {
    isText: { default: !1 }
  },
  setup(e) {
    return (t, a) => (d(), P(qt, { "is-text": e.isText }, {
      default: O(() => [
        g(t.$slots, "default")
      ]),
      _: 3
    }, 8, ["is-text"]));
  }
}), lr = /* @__PURE__ */ x({
  __name: "BInputGroupPrepend",
  props: {
    isText: { default: !1 }
  },
  setup(e) {
    return (t, a) => (d(), P(qt, { "is-text": e.isText }, {
      default: O(() => [
        g(t.$slots, "default")
      ]),
      _: 3
    }, 8, ["is-text"]));
  }
}), ll = Symbol(), or = /* @__PURE__ */ x({
  __name: "BListGroup",
  props: {
    flush: { default: !1 },
    horizontal: { type: [Boolean, String], default: !1 },
    numbered: { default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = r(s(t, "flush")), l = r(s(t, "numbered")), n = i(() => {
      const f = a.value ? !1 : t.horizontal;
      return {
        "list-group-flush": a.value,
        "list-group-horizontal": f === !0,
        [`list-group-horizontal-${f}`]: typeof f == "string",
        "list-group-numbered": l.value
      };
    }), u = i(() => l.value === !0 ? "ol" : t.tag);
    return We(ll, {
      numbered: l.value
    }), (f, c) => (d(), P(X(o(u)), {
      class: I(["list-group", o(n)])
    }, {
      default: O(() => [
        g(f.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), nr = /* @__PURE__ */ x({
  __name: "BListGroupItem",
  props: {
    action: { default: !1 },
    active: { default: !1 },
    button: { default: !1 },
    disabled: { default: !1 },
    href: null,
    tag: { default: "div" },
    target: { default: "_self" },
    to: null,
    variant: null
  },
  setup(e) {
    const t = e, a = da(), l = Ne(ll, null), n = r(s(t, "action")), u = r(s(t, "active")), f = r(s(t, "button")), c = r(s(t, "disabled")), v = i(() => !f.value && (!!t.href || !!t.to)), h = i(
      () => l != null && l.numbered ? "li" : f.value ? "button" : v.value ? Te : t.tag
    ), p = i(
      () => n.value || v.value || f.value || ["a", "router-link", "button", "b-link"].includes(t.tag)
    ), B = i(() => ({
      [`list-group-item-${t.variant}`]: t.variant !== void 0,
      "list-group-item-action": p.value,
      active: u.value,
      disabled: c.value
    })), C = i(() => {
      const _ = {};
      return f.value && ((!a || !a.type) && (_.type = "button"), c.value && (_.disabled = !0)), _;
    });
    return (_, A) => (d(), P(X(o(h)), W({
      class: ["list-group-item", o(B)],
      "aria-current": o(u) ? !0 : void 0,
      "aria-disabled": o(c) ? !0 : void 0,
      target: o(v) ? e.target : void 0,
      href: o(f) ? void 0 : e.href,
      to: o(f) ? void 0 : e.to
    }, o(C)), {
      default: O(() => [
        g(_.$slots, "default")
      ]),
      _: 3
    }, 16, ["class", "aria-current", "aria-disabled", "target", "href", "to"]));
  }
}), ht = /* @__PURE__ */ x({
  __name: "BTransition",
  props: {
    appear: { default: !1 },
    mode: null,
    noFade: { default: !1 },
    transProps: null
  },
  setup(e) {
    const t = e, a = r(s(t, "appear")), l = r(s(t, "noFade")), n = i(() => {
      const c = {
        name: "",
        enterActiveClass: "",
        enterToClass: "",
        leaveActiveClass: "",
        leaveToClass: "showing",
        enterFromClass: "showing",
        leaveFromClass: ""
      }, v = {
        ...c,
        enterActiveClass: "fade showing",
        leaveActiveClass: "fade showing"
      };
      return l.value ? c : v;
    }), u = i(() => ({ mode: t.mode, css: !0, ...n.value })), f = i(
      () => t.transProps !== void 0 ? {
        ...u.value,
        ...t.transProps
      } : a.value ? {
        ...u.value,
        appear: !0,
        appearActiveClass: n.value.enterActiveClass,
        appearToClass: n.value.enterToClass
      } : u.value
    );
    return (c, v) => (d(), P(Tl, ve(Ce(o(f))), {
      default: O(() => [
        g(c.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), sr = ["id", "aria-labelledby", "aria-describedby", "onKeyup"], rr = ["id"], ir = {
  inheritAttrs: !1
}, ur = /* @__PURE__ */ x({
  ...ir,
  __name: "BModal",
  props: {
    bodyBgVariant: null,
    bodyClass: null,
    bodyTextVariant: null,
    busy: { default: !1 },
    lazy: { default: !1 },
    buttonSize: { default: "md" },
    cancelDisabled: { default: !1 },
    cancelTitle: { default: "Cancel" },
    cancelVariant: { default: "secondary" },
    centered: { default: !1 },
    contentClass: null,
    dialogClass: null,
    footerBgVariant: null,
    footerBorderVariant: null,
    footerClass: null,
    footerTextVariant: null,
    fullscreen: { type: [Boolean, String], default: !1 },
    headerBgVariant: null,
    headerBorderVariant: null,
    headerClass: null,
    headerCloseLabel: { default: "Close" },
    headerCloseWhite: { default: !1 },
    headerTextVariant: null,
    hideBackdrop: { default: !1 },
    hideFooter: { default: !1 },
    hideHeader: { default: !1 },
    hideHeaderClose: { default: !1 },
    id: null,
    modalClass: null,
    modelValue: { default: !1 },
    noCloseOnBackdrop: { default: !1 },
    noCloseOnEsc: { default: !1 },
    noFade: { default: !1 },
    noFocus: { default: !1 },
    okDisabled: { default: !1 },
    okOnly: { default: !1 },
    okTitle: { default: "Ok" },
    okVariant: { default: "primary" },
    scrollable: { default: !1 },
    show: { default: !1 },
    size: null,
    title: null,
    titleClass: null,
    titleSrOnly: { default: !1 },
    titleTag: { default: "h5" },
    static: { default: !1 }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden", "hide-prevented", "ok", "cancel"],
  setup(e, { emit: t }) {
    const a = e, l = $e(), n = ye(s(a, "id"), "modal"), u = r(s(a, "busy")), f = r(s(a, "lazy")), c = r(s(a, "cancelDisabled")), v = r(s(a, "centered")), h = r(s(a, "hideBackdrop")), p = r(s(a, "hideFooter")), B = r(s(a, "hideHeader")), C = r(s(a, "hideHeaderClose")), _ = r(s(a, "modelValue")), A = r(s(a, "noCloseOnBackdrop")), b = r(s(a, "noCloseOnEsc")), k = r(s(a, "noFade")), y = r(s(a, "noFocus")), S = r(s(a, "okDisabled")), H = r(s(a, "okOnly")), T = r(s(a, "scrollable")), F = r(s(a, "titleSrOnly")), L = r(s(a, "static")), z = U(!1), $ = U(null), V = U(!1), D = i(() => [
      a.modalClass,
      {
        fade: !k.value,
        show: z.value
      }
    ]), q = i(() => !we(l["header-close"])), ee = i(() => [
      a.dialogClass,
      {
        "modal-fullscreen": a.fullscreen === !0,
        [`modal-fullscreen-${a.fullscreen}-down`]: typeof a.fullscreen == "string",
        [`modal-${a.size}`]: a.size !== void 0,
        "modal-dialog-centered": v.value,
        "modal-dialog-scrollable": T.value
      }
    ]), Y = i(() => [
      a.bodyClass,
      {
        [`bg-${a.bodyBgVariant}`]: a.bodyBgVariant !== void 0,
        [`text-${a.bodyTextVariant}`]: a.bodyTextVariant !== void 0
      }
    ]), G = i(() => [
      a.headerClass,
      {
        [`bg-${a.headerBgVariant}`]: a.headerBgVariant !== void 0,
        [`border-${a.headerBorderVariant}`]: a.headerBorderVariant !== void 0,
        [`text-${a.headerTextVariant}`]: a.headerTextVariant !== void 0
      }
    ]), ie = i(() => [
      a.footerClass,
      {
        [`bg-${a.footerBgVariant}`]: a.footerBgVariant !== void 0,
        [`border-${a.footerBorderVariant}`]: a.footerBorderVariant !== void 0,
        [`text-${a.footerTextVariant}`]: a.footerTextVariant !== void 0
      }
    ]), ce = i(() => [
      a.titleClass,
      {
        ["visually-hidden"]: F.value
      }
    ]), Q = i(() => c.value || u.value), he = i(() => S.value || u.value), pe = () => t("update:modelValue", !1), ge = (de) => {
      !b.value && _.value && de.key === "Escape" && pe();
    }, me = () => t("show"), Fe = () => {
      z.value = !0, t("shown"), f.value === !0 && (V.value = !0);
    }, K = () => t("hide"), te = () => {
      z.value = !1;
    }, fe = () => {
      t("hidden"), f.value === !0 && (V.value = !1);
    };
    return ne(
      () => _.value,
      (de) => {
        de === !0 && !y.value && Ee(() => {
          $.value !== null && $.value.focus();
        });
      }
    ), (de, Se) => (d(), P(Vl, {
      to: "body",
      disabled: o(L)
    }, [
      se(ht, {
        "no-fade": !0,
        "trans-props": { enterToClass: "show" },
        onBeforeEnter: me,
        onAfterEnter: Fe,
        onBeforeLeave: K,
        onLeave: te,
        onAfterLeave: fe
      }, {
        default: O(() => [
          Xe(E("div", W({
            id: o(n),
            ref_key: "element",
            ref: $,
            class: ["modal", o(D)],
            role: "dialog",
            "aria-labelledby": `${o(n)}-label`,
            "aria-describedby": `${o(n)}-body`,
            tabindex: "-1"
          }, de.$attrs, {
            onKeyup: _l(ge, ["esc"])
          }), [
            E("div", {
              class: I(["modal-dialog", o(ee)])
            }, [
              !o(f) || o(f) && V.value || o(f) && o(_) === !0 ? (d(), m("div", {
                key: 0,
                class: I(["modal-content", e.contentClass])
              }, [
                o(B) ? M("", !0) : (d(), m("div", {
                  key: 0,
                  class: I(["modal-header", o(G)])
                }, [
                  g(de.$slots, "header", {}, () => [
                    (d(), P(X(e.titleTag), {
                      id: `${o(n)}-label`,
                      class: I(["modal-title", o(ce)])
                    }, {
                      default: O(() => [
                        g(de.$slots, "title", {}, () => [
                          J(j(e.title), 1)
                        ])
                      ]),
                      _: 3
                    }, 8, ["id", "class"])),
                    o(C) ? M("", !0) : (d(), m(Z, { key: 0 }, [
                      o(q) ? (d(), m("button", {
                        key: 0,
                        type: "button",
                        "data-bs-dismiss": "modal",
                        onClick: Se[0] || (Se[0] = (qe) => pe())
                      }, [
                        g(de.$slots, "header-close")
                      ])) : (d(), P(Ke, {
                        key: 1,
                        "aria-label": e.headerCloseLabel,
                        "data-bs-dismiss": "modal",
                        white: e.headerCloseWhite,
                        onClick: Se[1] || (Se[1] = (qe) => pe())
                      }, null, 8, ["aria-label", "white"]))
                    ], 64))
                  ])
                ], 2)),
                E("div", {
                  id: `${o(n)}-body`,
                  class: I(["modal-body", o(Y)])
                }, [
                  g(de.$slots, "default")
                ], 10, rr),
                o(p) ? M("", !0) : (d(), m("div", {
                  key: 1,
                  class: I(["modal-footer", o(ie)])
                }, [
                  g(de.$slots, "footer", {}, () => [
                    g(de.$slots, "cancel", {}, () => [
                      o(H) ? M("", !0) : (d(), P(et, {
                        key: 0,
                        type: "button",
                        class: "btn",
                        disabled: o(Q),
                        size: e.buttonSize,
                        variant: e.cancelVariant,
                        onClick: Se[2] || (Se[2] = (qe) => (pe(), t("cancel")))
                      }, {
                        default: O(() => [
                          J(j(e.cancelTitle), 1)
                        ]),
                        _: 1
                      }, 8, ["disabled", "size", "variant"]))
                    ]),
                    g(de.$slots, "ok", {}, () => [
                      se(et, {
                        type: "button",
                        class: "btn",
                        disabled: o(he),
                        size: e.buttonSize,
                        variant: e.okVariant,
                        onClick: Se[3] || (Se[3] = (qe) => (pe(), t("ok")))
                      }, {
                        default: O(() => [
                          J(j(e.okTitle), 1)
                        ]),
                        _: 1
                      }, 8, ["disabled", "size", "variant"])
                    ])
                  ])
                ], 2))
              ], 2)) : M("", !0)
            ], 2),
            o(h) ? M("", !0) : g(de.$slots, "backdrop", { key: 0 }, () => [
              E("div", {
                class: "modal-backdrop fade show",
                onClick: Se[4] || (Se[4] = (qe) => !o(A) && pe())
              })
            ])
          ], 16, sr), [
            [Al, o(_)]
          ])
        ]),
        _: 3
      })
    ], 8, ["disabled"]));
  }
}), dr = /* @__PURE__ */ x({
  __name: "BNav",
  props: {
    align: null,
    cardHeader: { default: !1 },
    fill: { default: !1 },
    justified: { default: !1 },
    pills: { default: !1 },
    small: { default: !1 },
    tabs: { default: !1 },
    tag: { default: "ul" },
    vertical: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(s(t, "cardHeader")), l = r(s(t, "fill")), n = r(s(t, "justified")), u = r(s(t, "pills")), f = r(s(t, "small")), c = r(s(t, "tabs")), v = r(s(t, "vertical")), h = i(() => ({
      "nav-tabs": c.value,
      "nav-pills": u.value && !c.value,
      "card-header-tabs": !v.value && a.value && c.value,
      "card-header-pills": !v.value && a.value && u.value && !c.value,
      "flex-column": v.value,
      "nav-fill": !v.value && l.value,
      "nav-justified": !v.value && n.value,
      [`justify-content-${t.align}`]: !v.value && t.align !== void 0,
      small: f.value
    }));
    return (p, B) => (d(), P(X(e.tag), {
      class: I(["nav", o(h)])
    }, {
      default: O(() => [
        g(p.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), cr = /* @__PURE__ */ x({
  __name: "BNavForm",
  props: {
    role: null,
    id: null,
    floating: { default: !1 },
    novalidate: { default: !1 },
    validated: { default: !1 }
  },
  emits: ["submit"],
  setup(e, { emit: t }) {
    const a = e, l = i(() => ({
      floating: a.floating,
      role: a.role,
      id: a.id,
      novalidate: a.novalidate,
      validated: a.validated
    })), n = (u) => t("submit", u);
    return (u, f) => (d(), P(Ja, W(o(l), {
      class: "d-flex",
      onSubmit: Lt(n, ["prevent"])
    }), {
      default: O(() => [
        g(u.$slots, "default")
      ]),
      _: 3
    }, 16, ["onSubmit"]));
  }
}), fr = x({
  components: { BLink: Te },
  props: {
    ...ct(je, ["event", "routerTag"])
  },
  setup(e) {
    return { disabledBoolean: r(s(e, "disabled")) };
  }
}), vr = { class: "nav-item" };
function mr(e, t, a, l, n, u) {
  const f = ua("b-link");
  return d(), m("li", vr, [
    se(f, W({ class: "nav-link" }, e.$props, {
      "active-class": "active",
      tabindex: e.disabledBoolean ? -1 : void 0,
      "aria-disabled": e.disabledBoolean ? !0 : void 0
    }), {
      default: O(() => [
        g(e.$slots, "default")
      ]),
      _: 3
    }, 16, ["tabindex", "aria-disabled"])
  ]);
}
const br = /* @__PURE__ */ Ve(fr, [["render", mr]]), pr = { class: "nav-item dropdown" }, gr = /* @__PURE__ */ x({
  __name: "BNavItemDropdown",
  props: {
    id: null,
    text: null,
    toggleClass: null,
    size: null,
    offset: null,
    autoClose: { type: [Boolean, String], default: !0 },
    dark: { type: Boolean, default: !1 },
    dropleft: { type: Boolean, default: !1 },
    dropright: { type: Boolean, default: !1 },
    dropup: { type: Boolean, default: !1 },
    right: { type: Boolean, default: !1 },
    left: { type: [Boolean, String], default: !1 },
    split: { type: Boolean, default: !1 },
    splitVariant: null,
    noCaret: { type: Boolean, default: !1 },
    variant: { default: "link" }
  },
  setup(e) {
    const t = e;
    return (a, l) => (d(), m("li", pr, [
      se(Ka, W(t, { "is-nav": "" }), ca({ _: 2 }, [
        re(a.$slots, (n, u, f) => ({
          name: u,
          fn: O((c) => [
            g(a.$slots, u, ve(Ce(c || {})))
          ])
        }))
      ]), 1040)
    ]));
  }
}), hr = { class: "navbar-text" }, yr = /* @__PURE__ */ x({
  __name: "BNavText",
  props: {
    text: null
  },
  setup(e) {
    return (t, a) => (d(), m("li", hr, [
      g(t.$slots, "default", {}, () => [
        J(j(e.text), 1)
      ])
    ]));
  }
}), Br = /* @__PURE__ */ x({
  __name: "BNavbar",
  props: {
    fixed: null,
    print: { default: !1 },
    sticky: null,
    tag: { default: "nav" },
    toggleable: { type: [Boolean, String], default: !1 },
    dark: { default: !1 },
    variant: null,
    container: { type: [String, Boolean], default: "fluid" }
  },
  setup(e) {
    const t = e, a = r(s(t, "print")), l = r(s(t, "dark")), n = i(
      () => t.tag === "nav" ? void 0 : "navigation"
    ), u = i(
      () => typeof t.toggleable == "string" ? `navbar-expand-${t.toggleable}` : t.toggleable === !1 ? "navbar-expand" : void 0
    ), f = i(
      () => t.container === !0 ? "container" : "container-fluid"
    ), c = i(() => ({
      "d-print": a.value,
      [`sticky-${t.sticky}`]: t.sticky !== void 0,
      "navbar-dark": l.value,
      [`bg-${t.variant}`]: t.variant !== void 0,
      [`fixed-${t.fixed}`]: t.fixed !== void 0,
      [`${u.value}`]: u.value !== void 0
    }));
    return (v, h) => (d(), P(X(e.tag), {
      class: I(["navbar", o(c)]),
      role: o(n)
    }, {
      default: O(() => [
        e.container !== !1 ? (d(), m("div", {
          key: 0,
          class: I(o(f))
        }, [
          g(v.$slots, "default")
        ], 2)) : g(v.$slots, "default", { key: 1 })
      ]),
      _: 3
    }, 8, ["class", "role"]));
  }
}), aa = ct(je, ["event", "routerTag"]), $r = x({
  components: {
    BLink: Te
  },
  props: {
    tag: { type: String, default: "div" },
    ...aa
  },
  setup(e) {
    const t = i(() => Qe(e)), a = i(
      () => t.value ? Te : e.tag
    );
    return {
      computedLinkProps: i(
        () => t.value ? Et(e, aa) : {}
      ),
      computedTag: a
    };
  }
});
function kr(e, t, a, l, n, u) {
  return d(), P(X(e.computedTag), W({ class: "navbar-brand" }, e.computedLinkProps), {
    default: O(() => [
      g(e.$slots, "default")
    ]),
    _: 3
  }, 16);
}
const Cr = /* @__PURE__ */ Ve($r, [["render", kr]]), Sr = /* @__PURE__ */ x({
  __name: "BNavbarNav",
  props: {
    align: null,
    fill: { default: !1 },
    justified: { default: !1 },
    small: { default: !1 },
    tag: { default: "ul" }
  },
  setup(e) {
    const t = e, a = r(s(t, "fill")), l = r(s(t, "justified")), n = r(s(t, "small")), u = i(() => ({
      "nav-fill": a.value,
      "nav-justified": l.value,
      [`justify-content-${t.align}`]: t.align !== void 0,
      small: n.value
    }));
    return (f, c) => (d(), m("ul", {
      class: I(["navbar-nav", o(u)])
    }, [
      g(f.$slots, "default")
    ], 2));
  }
}), wr = /* @__PURE__ */ E("span", { class: "navbar-toggler-icon" }, null, -1), Tr = /* @__PURE__ */ x({
  __name: "BNavbarToggle",
  props: {
    disabled: { default: !1 },
    label: { default: "Toggle navigation" },
    target: null
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "disabled")), n = i(() => ({
      disabled: l.value,
      "aria-label": a.label
    })), u = i(() => ({
      disabled: l.value
    })), f = (c) => {
      l.value || t("click", c);
    };
    return (c, v) => Xe((d(), m("button", W({
      class: ["navbar-toggler", o(u)],
      type: "button"
    }, o(n), { onClick: f }), [
      g(c.$slots, "default", {}, () => [
        wr
      ])
    ], 16)), [
      [o(Dt), o(l) ? void 0 : e.target]
    ]);
  }
}), Vr = ["data-bs-backdrop", "data-bs-scroll"], _r = {
  key: 0,
  class: "offcanvas-header"
}, Ar = {
  id: "offcanvasLabel",
  class: "offcanvas-title"
}, xr = { class: "offcanvas-body" }, Ir = { key: 1 }, Fr = /* @__PURE__ */ x({
  __name: "BOffcanvas",
  props: {
    dismissLabel: { default: "Close" },
    modelValue: { default: !1 },
    bodyScrolling: { default: !1 },
    backdrop: { default: !0 },
    placement: { default: "start" },
    title: null,
    noHeaderClose: { default: !1 },
    noHeader: { default: !1 }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "modelValue")), n = r(s(a, "bodyScrolling")), u = r(s(a, "backdrop")), f = r(s(a, "noHeaderClose")), c = r(s(a, "noHeader")), v = $e(), h = U(), p = U(), B = i(() => !we(v.footer)), C = i(() => [`offcanvas-${a.placement}`]), _ = () => {
      t("show"), t("update:modelValue", !0);
    }, A = () => {
      t("hide"), t("update:modelValue", !1);
    };
    return ne(
      () => l.value,
      (b) => {
        var k, y;
        b ? (k = p.value) == null || k.show(h.value) : (y = p.value) == null || y.hide();
      }
    ), be(h, "shown.bs.offcanvas", () => t("shown")), be(h, "hidden.bs.offcanvas", () => t("hidden")), be(h, "show.bs.offcanvas", () => {
      _();
    }), be(h, "hide.bs.offcanvas", () => {
      A();
    }), Be(() => {
      var b;
      p.value = new Ll(h.value), l.value && ((b = p.value) == null || b.show(h.value));
    }), (b, k) => (d(), m("div", {
      ref_key: "element",
      ref: h,
      class: I(["offcanvas", o(C)]),
      tabindex: "-1",
      "aria-labelledby": "offcanvasLabel",
      "data-bs-backdrop": o(u),
      "data-bs-scroll": o(n)
    }, [
      o(c) ? M("", !0) : (d(), m("div", _r, [
        g(b.$slots, "header", ve(Ce({ visible: o(l), placement: e.placement, hide: A })), () => [
          E("h5", Ar, [
            g(b.$slots, "title", {}, () => [
              J(j(e.title), 1)
            ])
          ]),
          o(f) ? M("", !0) : (d(), P(Ke, {
            key: 0,
            class: "text-reset",
            "data-bs-dismiss": "offcanvas",
            "aria-label": e.dismissLabel
          }, null, 8, ["aria-label"]))
        ])
      ])),
      E("div", xr, [
        g(b.$slots, "default")
      ]),
      o(B) ? (d(), m("div", Ir, [
        g(b.$slots, "footer", ve(Ce({ visible: o(l), placement: e.placement, hide: A })))
      ])) : M("", !0)
    ], 10, Vr));
  }
}), Pr = /* @__PURE__ */ x({
  __name: "BOverlay",
  props: {
    bgColor: null,
    blur: { default: "2px" },
    fixed: { default: !1 },
    noCenter: { default: !1 },
    noFade: { default: !1 },
    noWrap: { default: !1 },
    opacity: { default: 0.85 },
    overlayTag: { default: "div" },
    rounded: { type: [Boolean, String], default: !1 },
    show: { default: !1 },
    spinnerSmall: { default: !1 },
    spinnerType: { default: "border" },
    spinnerVariant: null,
    variant: { default: "light" },
    wrapTag: { default: "div" },
    zIndex: { default: 10 }
  },
  emits: ["click", "hidden", "shown"],
  setup(e, { emit: t }) {
    const a = e, l = { top: 0, left: 0, bottom: 0, right: 0 }, n = r(s(a, "fixed")), u = r(s(a, "noCenter")), f = r(s(a, "noWrap")), c = r(s(a, "show")), v = r(s(a, "spinnerSmall")), h = i(
      () => a.rounded === !0 || a.rounded === "" ? "rounded" : a.rounded === !1 ? "" : `rounded-${a.rounded}`
    ), p = i(
      () => a.variant && !a.bgColor ? `bg-${a.variant}` : ""
    ), B = i(() => c.value ? "true" : null), C = i(() => ({
      type: a.spinnerType || void 0,
      variant: a.spinnerVariant || void 0,
      small: v.value
    })), _ = i(() => ({
      ...l,
      zIndex: a.zIndex || 10
    })), A = i(() => [
      "b-overlay",
      {
        "position-absolute": !f.value || !n.value,
        "position-fixed": f.value && n.value
      }
    ]), b = i(() => [p.value, h.value]), k = i(() => ({
      ...l,
      opacity: a.opacity,
      backgroundColor: a.bgColor || void 0,
      backdropFilter: blur ? `blur(${blur})` : void 0
    })), y = i(
      () => u.value ? l : {
        top: "50%",
        left: "50%",
        transform: "translateX(-50%) translateY(-50%)"
      }
    );
    return (S, H) => (d(), P(X(e.wrapTag), {
      class: "b-overlay-wrap position-relative",
      "aria-busy": o(B)
    }, {
      default: O(() => [
        g(S.$slots, "default"),
        se(ht, {
          "no-fade": e.noFade,
          "trans-props": { enterToClass: "show" },
          name: "fade",
          onOnAfterEnter: H[1] || (H[1] = (T) => t("shown")),
          onOnAfterLeave: H[2] || (H[2] = (T) => t("hidden"))
        }, {
          default: O(() => [
            o(c) ? (d(), P(X(e.overlayTag), {
              key: 0,
              class: I(o(A)),
              style: Ie(o(_)),
              onClick: H[0] || (H[0] = (T) => t("click", T))
            }, {
              default: O(() => [
                E("div", {
                  class: I(["position-absolute", o(b)]),
                  style: Ie(o(k))
                }, null, 6),
                E("div", {
                  class: "position-absolute",
                  style: Ie(o(y))
                }, [
                  g(S.$slots, "overlay", ve(Ce(o(C))), () => [
                    se(gt, ve(Ce(o(C))), null, 16)
                  ])
                ], 4)
              ]),
              _: 3
            }, 8, ["class", "style"])) : M("", !0)
          ]),
          _: 3
        }, 8, ["no-fade"])
      ]),
      _: 3
    }, 8, ["aria-busy"]));
  }
}), Or = 5, ol = 20, nl = 0, Pe = 3, zr = "ellipsis-text", Lr = "first-text", Nr = "last-text", Er = "next-text", Hr = "page", Dr = "prev-text", la = (e) => Math.max(Ue(e) || ol, 1), oa = (e) => Math.max(Ue(e) || nl, 0), Rr = (e, t) => {
  const a = Ue(e) || 1;
  return a > t ? t : a < 1 ? 1 : a;
}, jr = x({
  name: "BPagination",
  props: {
    align: { type: String, default: "start" },
    ariaControls: { type: String, required: !1 },
    ariaLabel: { type: String, default: "Pagination" },
    disabled: { type: [Boolean, String], default: !1 },
    ellipsisClass: { type: [Array, String], default: () => [] },
    ellipsisText: { type: String, default: "\u2026" },
    firstClass: { type: [Array, String], default: () => [] },
    firstNumber: { type: [Boolean, String], default: !1 },
    firstText: { type: String, default: "\xAB" },
    hideEllipsis: { type: [Boolean, String], default: !1 },
    hideGotoEndButtons: { type: [Boolean, String], default: !1 },
    labelFirstPage: { type: String, default: "Go to first page" },
    labelLastPage: { type: String, default: "Go to last page" },
    labelNextPage: { type: String, default: "Go to next page" },
    labelPage: { type: String, default: "Go to page" },
    labelPrevPage: { type: String, default: "Go to previous page" },
    lastClass: { type: [Array, String], default: () => [] },
    lastNumber: { type: [Boolean, String], default: !1 },
    lastText: { type: String, default: "\xBB" },
    limit: { type: Number, default: Or },
    modelValue: { type: Number, default: 1 },
    nextClass: { type: [Array, String], default: () => [] },
    nextText: { type: String, default: "\u203A" },
    pageClass: { type: [Array, String], default: () => [] },
    perPage: { type: Number, default: ol },
    pills: { type: [Boolean, String], default: !1 },
    prevClass: { type: [Array, String], default: () => [] },
    prevText: { type: String, default: "\u2039" },
    size: { type: String, required: !1 },
    totalRows: { type: Number, default: nl }
  },
  emits: ["update:modelValue", "page-click"],
  setup(e, { emit: t, slots: a }) {
    const l = r(s(e, "disabled")), n = r(s(e, "firstNumber")), u = r(s(e, "hideEllipsis")), f = r(s(e, "hideGotoEndButtons")), c = r(s(e, "lastNumber")), v = r(s(e, "pills")), h = El(s(e, "align")), p = i(
      () => Math.ceil(oa(e.totalRows) / la(e.perPage))
    ), B = i(() => {
      let T;
      return p.value - e.modelValue + 2 < e.limit && e.limit > Pe ? T = p.value - _.value + 1 : T = e.modelValue - Math.floor(_.value / 2), T < 1 ? T = 1 : T > p.value - _.value && (T = p.value - _.value + 1), e.limit <= Pe && c.value && p.value === T + _.value - 1 && (T = Math.max(T - 1, 1)), T;
    }), C = i(() => {
      const T = p.value - e.modelValue;
      let F = !1;
      return T + 2 < e.limit && e.limit > Pe ? e.limit > Pe && (F = !0) : e.limit > Pe && (F = !!(!u.value || n.value)), B.value <= 1 && (F = !1), F && n.value && B.value < 4 && (F = !1), F;
    }), _ = i(() => {
      let T = e.limit;
      return p.value <= e.limit ? T = p.value : e.modelValue < e.limit - 1 && e.limit > Pe ? ((!u.value || c.value) && (T = e.limit - (n.value ? 0 : 1)), T = Math.min(T, e.limit)) : p.value - e.modelValue + 2 < e.limit && e.limit > Pe ? (!u.value || n.value) && (T = e.limit - (c.value ? 0 : 1)) : e.limit > Pe && (T = e.limit - (u.value ? 0 : 2)), T;
    }), A = i(() => {
      const T = p.value - _.value;
      let F = !1;
      e.modelValue < e.limit - 1 && e.limit > Pe ? (!u.value || c.value) && (F = !0) : e.limit > Pe && (F = !!(!u.value || c.value)), B.value > T && (F = !1);
      const L = B.value + _.value - 1;
      return F && c.value && L > p.value - 3 && (F = !1), F;
    }), b = Le({
      pageSize: la(e.perPage),
      totalRows: oa(e.totalRows),
      numberOfPages: p.value
    }), k = (T, F) => {
      if (F === e.modelValue)
        return;
      const { target: L } = T, z = new ft("page-click", {
        cancelable: !0,
        vueTarget: this,
        target: L
      });
      t("page-click", z, F), !z.defaultPrevented && t("update:modelValue", F);
    }, y = i(() => e.size ? `pagination-${e.size}` : ""), S = i(() => v.value ? "b-pagination-pills" : "");
    ne(
      () => e.modelValue,
      (T) => {
        const F = Rr(T, p.value);
        F !== e.modelValue && t("update:modelValue", F);
      }
    ), ne(b, (T, F) => {
      T != null && (F.pageSize !== T.pageSize && F.totalRows === T.totalRows || F.numberOfPages !== T.numberOfPages && e.modelValue > F.numberOfPages) && t("update:modelValue", 1);
    });
    const H = i(() => {
      const T = [];
      for (let F = 0; F < _.value; F++)
        T.push({ number: B.value + F, classes: null });
      return T;
    });
    return () => {
      const T = [], F = H.value.map((G) => G.number), L = (G) => G === e.modelValue, z = e.modelValue < 1, $ = e.align === "fill", V = (G, ie, ce, Q, he, pe) => {
        const ge = l.value || L(pe) || z || G < 1 || G > p.value, me = G < 1 ? 1 : G > p.value ? p.value : G, Fe = { disabled: ge, page: me, index: me - 1 }, K = xe(ce, Fe, a) || Q || "";
        return le(
          "li",
          {
            class: [
              "page-item",
              {
                disabled: ge,
                "flex-fill": $,
                "d-flex": $ && !ge
              },
              he
            ]
          },
          le(
            ge ? "span" : "button",
            {
              class: ["page-link", { "flex-grow-1": !ge && $ }],
              "aria-label": ie,
              "aria-controls": e.ariaControls || null,
              "aria-disabled": ge ? "true" : null,
              role: "menuitem",
              type: ge ? null : "button",
              tabindex: ge ? null : "-1",
              onClick: (te) => {
                ge || k(te, me);
              }
            },
            K
          )
        );
      }, D = (G) => le(
        "li",
        {
          class: [
            "page-item",
            "disabled",
            "bv-d-xs-down-none",
            $ ? "flex-fill" : "",
            e.ellipsisClass
          ],
          role: "separator",
          key: `ellipsis-${G ? "last" : "first"}`
        },
        [
          le(
            "span",
            { class: ["page-link"] },
            xe(zr, {}, a) || e.ellipsisText || "..."
          )
        ]
      ), q = (G, ie) => {
        const ce = L(G.number) && !z, Q = l.value ? null : ce || z && ie === 0 ? "0" : "-1", he = {
          active: ce,
          disabled: l.value,
          page: G.number,
          index: G.number - 1,
          content: G.number
        }, pe = xe(Hr, he, a) || G.number, ge = le(
          l.value ? "span" : "button",
          {
            class: ["page-link", { "flex-grow-1": !l.value && $ }],
            "aria-controls": e.ariaControls || null,
            "aria-disabled": l.value ? "true" : null,
            "aria-label": e.labelPage ? `${e.labelPage} ${G.number}` : null,
            role: "menuitemradio",
            type: l.value ? null : "button",
            tabindex: Q,
            onClick: (me) => {
              l.value || k(me, G.number);
            }
          },
          pe
        );
        return le(
          "li",
          {
            class: [
              "page-item",
              {
                disabled: l.value,
                active: ce,
                "flex-fill": $,
                "d-flex": $ && !l.value
              },
              e.pageClass
            ],
            role: "presentation",
            key: `page-${G.number}`
          },
          ge
        );
      };
      if (!f.value && !n.value) {
        const G = V(
          1,
          e.labelFirstPage,
          Lr,
          e.firstText,
          e.firstClass,
          1
        );
        T.push(G);
      }
      const ee = V(
        e.modelValue - 1,
        e.labelFirstPage,
        Dr,
        e.prevText,
        e.prevClass,
        1
      );
      T.push(ee), n.value && F[0] !== 1 && T.push(q({ number: 1 }, 0)), C.value && T.push(D(!1)), H.value.forEach((G, ie) => {
        const ce = C.value && n.value && F[0] !== 1 ? 1 : 0;
        T.push(q(G, ie + ce));
      }), A.value && T.push(D(!0)), c.value && F[F.length - 1] !== p.value && T.push(q({ number: p.value }, -1));
      const Y = V(
        e.modelValue + 1,
        e.labelNextPage,
        Er,
        e.nextText,
        e.nextClass,
        p.value
      );
      if (T.push(Y), !c.value && !f.value) {
        const G = V(
          p.value,
          e.labelLastPage,
          Nr,
          e.lastText,
          e.lastClass,
          p.value
        );
        T.push(G);
      }
      return le(
        "ul",
        {
          class: ["pagination", y.value, h.value, S.value],
          role: "menubar",
          "aria-disabled": l.value,
          "aria-label": e.ariaLabel || null
        },
        T
      );
    };
  }
}), Ae = /* @__PURE__ */ x({
  __name: "BPlaceholder",
  props: {
    tag: { default: "span" },
    width: null,
    cols: null,
    variant: null,
    size: null,
    animation: null
  },
  setup(e) {
    const t = e, a = i(
      () => t.width === void 0 ? void 0 : typeof t.width == "number" ? t.width.toString() : t.width.includes("%") ? t.width.replaceAll("%", "") : t.width
    ), l = i(
      () => t.cols === void 0 ? void 0 : typeof t.cols == "number" ? t.cols.toString() : t.cols
    ), n = i(() => ({
      [`col-${l.value}`]: l.value !== void 0 && a.value === void 0,
      [`bg-${t.variant}`]: t.variant !== void 0,
      [`placeholder-${t.size}`]: t.size !== void 0,
      [`placeholder-${t.animation}`]: t.animation !== void 0
    })), u = i(
      () => a.value === void 0 ? void 0 : `width: ${a.value}%;`
    );
    return (f, c) => (d(), P(X(e.tag), {
      class: I(["placeholder", o(n)]),
      style: Ie(o(u))
    }, null, 8, ["class", "style"]));
  }
}), sl = /* @__PURE__ */ x({
  __name: "BPlaceholderButton",
  props: {
    tag: { default: "div" },
    width: null,
    cols: null,
    variant: { default: "primary" },
    animation: null
  },
  setup(e) {
    const t = e, a = i(() => ["btn", `btn-${t.variant}`, "disabled"]), l = i(() => ({
      animation: t.animation,
      width: t.width,
      cols: t.cols,
      tag: t.tag
    }));
    return (n, u) => (d(), P(Ae, W({ class: o(a) }, o(l)), null, 16, ["class"]));
  }
}), qr = /* @__PURE__ */ x({
  __name: "BPlaceholderCard",
  props: {
    noHeader: { default: !1 },
    headerWidth: { default: 100 },
    headerVariant: null,
    headerAnimation: null,
    headerSize: null,
    noFooter: { default: !1 },
    footerWidth: { default: 100 },
    footerVariant: null,
    footerAnimation: null,
    footerSize: null,
    animation: null,
    size: null,
    variant: null,
    noButton: { default: !1 },
    imgBottom: { default: !1 },
    imgSrc: null,
    imgBlankColor: { default: "#868e96" },
    imgHeight: { default: 100 },
    noImg: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(s(t, "noButton")), l = r(s(t, "noHeader")), n = r(s(t, "noFooter")), u = r(s(t, "noImg")), f = i(() => ({
      width: t.headerWidth,
      variant: t.headerVariant,
      animation: t.headerAnimation,
      size: t.headerSize
    })), c = i(() => ({
      width: t.footerWidth,
      animation: t.footerAnimation,
      size: a.value ? t.footerSize : void 0,
      variant: t.footerVariant
    })), v = i(() => ({
      blank: !t.imgSrc,
      blankColor: t.imgBlankColor,
      height: t.imgSrc ? void 0 : t.imgHeight,
      src: t.imgSrc,
      top: !t.imgBottom,
      bottom: t.imgBottom
    }));
    return (h, p) => (d(), P(Wa, { "img-bottom": e.imgBottom }, ca({
      default: O(() => [
        g(h.$slots, "default", {}, () => [
          se(Ae, { cols: "7" }),
          se(Ae, { cols: "4" }),
          se(Ae, { cols: "4" }),
          se(Ae, { cols: "6" }),
          se(Ae, { cols: "8" })
        ])
      ]),
      _: 2
    }, [
      o(u) ? void 0 : {
        name: "img",
        fn: O(() => [
          g(h.$slots, "img", {}, () => [
            se(dt, ve(Ce(o(v))), null, 16)
          ])
        ]),
        key: "0"
      },
      o(l) ? void 0 : {
        name: "header",
        fn: O(() => [
          g(h.$slots, "header", {}, () => [
            se(Ae, ve(Ce(o(f))), null, 16)
          ])
        ]),
        key: "1"
      },
      o(n) ? void 0 : {
        name: "footer",
        fn: O(() => [
          g(h.$slots, "footer", {}, () => [
            o(a) ? (d(), P(Ae, ve(W({ key: 1 }, o(c))), null, 16)) : (d(), P(sl, ve(W({ key: 0 }, o(c))), null, 16))
          ])
        ]),
        key: "2"
      }
    ]), 1032, ["img-bottom"]));
  }
}), yt = /* @__PURE__ */ x({
  __name: "BTableSimple",
  props: {
    bordered: { default: !1 },
    borderless: { default: !1 },
    borderVariant: null,
    captionTop: { default: !1 },
    dark: { default: !1 },
    hover: { default: !1 },
    responsive: { type: [Boolean, String], default: !1 },
    stacked: { type: [Boolean, String], default: !1 },
    striped: { default: !1 },
    small: { default: !1 },
    tableClass: null,
    tableVariant: null,
    stickyHeader: { default: !1 }
  },
  setup(e) {
    const t = e, a = r(s(t, "captionTop")), l = r(s(t, "borderless")), n = r(s(t, "bordered")), u = r(s(t, "dark")), f = r(s(t, "hover")), c = r(s(t, "small")), v = r(s(t, "striped")), h = r(s(t, "stickyHeader")), p = i(() => [
      "table",
      "b-table",
      {
        "table-bordered": n.value,
        "table-borderless": l.value,
        [`border-${t.borderVariant}`]: t.borderVariant !== void 0,
        "caption-top": a.value,
        "table-dark": u.value,
        "table-hover": f.value,
        "b-table-stacked": typeof t.stacked == "boolean" && t.stacked,
        [`b-table-stacked-${t.stacked}`]: typeof t.stacked == "string",
        "table-striped": v.value,
        "table-sm": c.value,
        [`table-${t.tableVariant}`]: t.tableVariant !== void 0
      },
      t.tableClass
    ]), B = i(() => [
      {
        "table-responsive": t.responsive === !0,
        [`table-responsive-${t.responsive}`]: typeof t.responsive == "string",
        "b-table-sticky-header": h.value
      }
    ]);
    return (C, _) => e.responsive ? (d(), m("div", {
      key: 1,
      class: I(o(B))
    }, [
      E("table", {
        role: "table",
        class: I(o(p))
      }, [
        g(C.$slots, "default")
      ], 2)
    ], 2)) : (d(), m("table", {
      key: 0,
      role: "table",
      class: I(o(p))
    }, [
      g(C.$slots, "default")
    ], 2));
  }
}), Mr = /* @__PURE__ */ x({
  __name: "BPlaceholderTable",
  props: {
    rows: { default: 3 },
    columns: { default: 5 },
    cellWidth: { default: 100 },
    size: null,
    animation: null,
    variant: null,
    headerColumns: null,
    hideHeader: { default: !1 },
    headerCellWidth: { default: 100 },
    headerSize: null,
    headerAnimation: null,
    headerVariant: null,
    footerColumns: null,
    showFooter: { default: !1 },
    footerCellWidth: { default: 100 },
    footerSize: null,
    footerAnimation: null,
    footerVariant: null
  },
  setup(e) {
    const t = e, a = i(
      () => typeof t.columns == "string" ? Ye(t.columns, 5) : t.columns
    ), l = i(
      () => typeof t.rows == "string" ? Ye(t.rows, 3) : t.rows
    ), n = i(
      () => t.headerColumns === void 0 ? a.value : typeof t.headerColumns == "string" ? Ye(t.headerColumns, a.value) : t.headerColumns
    ), u = i(
      () => t.footerColumns === void 0 ? a.value : typeof t.footerColumns == "string" ? Ye(t.footerColumns, a.value) : t.footerColumns
    ), f = i(() => ({
      size: t.size,
      variant: t.variant,
      animation: t.animation,
      width: t.cellWidth
    })), c = i(() => ({
      size: t.headerSize,
      variant: t.headerVariant,
      animation: t.headerAnimation,
      width: t.headerCellWidth
    })), v = i(() => ({
      size: t.footerSize,
      variant: t.footerVariant,
      animation: t.footerAnimation,
      width: t.footerCellWidth
    })), h = r(s(t, "hideHeader")), p = r(s(t, "showFooter"));
    return (B, C) => (d(), P(yt, null, {
      default: O(() => [
        o(h) ? M("", !0) : g(B.$slots, "thead", { key: 0 }, () => [
          E("thead", null, [
            E("tr", null, [
              (d(!0), m(Z, null, re(o(n), (_, A) => (d(), m("th", { key: A }, [
                se(Ae, ve(Ce(o(c))), null, 16)
              ]))), 128))
            ])
          ])
        ]),
        g(B.$slots, "default", {}, () => [
          E("tbody", null, [
            (d(!0), m(Z, null, re(o(l), (_, A) => (d(), m("tr", { key: A }, [
              (d(!0), m(Z, null, re(o(a), (b, k) => (d(), m("td", { key: k }, [
                se(Ae, ve(Ce(o(f))), null, 16)
              ]))), 128))
            ]))), 128))
          ])
        ]),
        o(p) ? g(B.$slots, "tfoot", { key: 1 }, () => [
          E("tfoot", null, [
            E("tr", null, [
              (d(!0), m(Z, null, re(o(u), (_, A) => (d(), m("th", { key: A }, [
                se(Ae, ve(Ce(o(v))), null, 16)
              ]))), 128))
            ])
          ])
        ]) : M("", !0)
      ]),
      _: 3
    }));
  }
}), Gr = /* @__PURE__ */ x({
  __name: "BPlaceholderWrapper",
  props: {
    loading: { default: !1 }
  },
  setup(e) {
    const a = r(s(e, "loading"));
    return (l, n) => o(a) ? g(l.$slots, "loading", { key: 0 }) : g(l.$slots, "default", { key: 1 });
  }
}), Ur = x({
  props: {
    container: {
      type: [String, Object],
      default: "body"
    },
    content: { type: String },
    id: { type: String },
    customClass: { type: String, default: "" },
    noninteractive: { type: [Boolean, String], default: !1 },
    placement: { type: String, default: "right" },
    target: {
      type: [String, Object],
      default: void 0
    },
    title: { type: String },
    delay: { type: [Number, Object], default: 0 },
    triggers: { type: String, default: "click" },
    show: { type: [Boolean, String], default: !1 },
    variant: { type: String, default: void 0 },
    html: { type: [Boolean, String], default: !0 },
    sanitize: { type: [Boolean, String], default: !1 },
    offset: { type: String, default: "0" }
  },
  emits: ["show", "shown", "hide", "hidden", "inserted"],
  setup(e, { emit: t, slots: a }) {
    r(s(e, "noninteractive"));
    const l = r(s(e, "show")), n = r(s(e, "html")), u = r(s(e, "sanitize")), f = U(), c = U(), v = U(), h = U(), p = U(), B = i(() => ({
      [`b-popover-${e.variant}`]: e.variant !== void 0
    })), C = (b) => {
      if (typeof b == "string")
        return b;
      if (b instanceof HTMLElement)
        return b;
      if (typeof b < "u")
        return b.$el;
    }, _ = (b) => {
      if (!!b) {
        if (typeof b == "string") {
          const k = document.getElementById(b);
          return k || void 0;
        }
        return b;
      }
    }, A = (b) => {
      c.value = _(C(b)), c.value && (v.value = new wt(c.value, {
        customClass: e.customClass,
        container: C(e.container),
        trigger: e.triggers,
        placement: e.placement,
        title: e.title || a.title ? h.value : "",
        content: p.value,
        html: n.value,
        delay: e.delay,
        sanitize: u.value,
        offset: e.offset
      }));
    };
    return ne(
      () => e.target,
      (b) => {
        var k;
        (k = v.value) == null || k.dispose(), A(b);
      }
    ), ne(
      () => l.value,
      (b, k) => {
        var y, S;
        b !== k && (b ? (y = v.value) == null || y.show() : (S = v.value) == null || S.hide());
      }
    ), be(c, "show.bs.popover", () => t("show")), be(c, "shown.bs.popover", () => t("shown")), be(c, "hide.bs.popover", () => t("hide")), be(c, "hidden.bs.popover", () => t("hidden")), be(c, "inserted.bs.popover", () => t("inserted")), Be(() => {
      var b, k, y;
      Ee(() => {
        A(e.target);
      }), (k = (b = f.value) == null ? void 0 : b.parentNode) == null || k.removeChild(f.value), l.value && ((y = v.value) == null || y.show());
    }), Ot(() => {
      var b;
      (b = v.value) == null || b.dispose();
    }), {
      element: f,
      titleRef: h,
      contentRef: p,
      computedClasses: B
    };
  }
}), Wr = ["id"], Xr = { ref: "titleRef" }, Kr = { ref: "contentRef" };
function Jr(e, t, a, l, n, u) {
  return d(), m("div", {
    id: e.id,
    ref: "element",
    class: I(["popover b-popover", e.computedClasses]),
    role: "tooltip",
    tabindex: "-1"
  }, [
    E("div", Xr, [
      g(e.$slots, "title", {}, () => [
        J(j(e.title), 1)
      ])
    ], 512),
    E("div", Kr, [
      g(e.$slots, "default", {}, () => [
        J(j(e.content), 1)
      ])
    ], 512)
  ], 10, Wr);
}
const Yr = /* @__PURE__ */ Ve(Ur, [["render", Jr]]), Zr = ["aria-valuenow", "aria-valuemax"], rl = /* @__PURE__ */ x({
  __name: "BProgressBar",
  props: {
    animated: { default: !1 },
    label: null,
    labelHtml: null,
    max: null,
    precision: { default: 0 },
    showProgress: { default: !1 },
    showValue: { default: !1 },
    striped: { default: !1 },
    value: { default: 0 },
    variant: null
  },
  setup(e) {
    const t = e, a = Ne(il), l = r(s(t, "animated")), n = r(s(t, "showProgress")), u = r(s(t, "showValue")), f = r(s(t, "striped")), c = i(() => ({
      "progress-bar-animated": l.value || (a == null ? void 0 : a.animated),
      "progress-bar-striped": f.value || (a == null ? void 0 : a.striped) || l.value || (a == null ? void 0 : a.animated),
      [`bg-${t.variant}`]: t.variant !== void 0
    })), v = i(
      () => typeof t.precision == "number" ? t.precision : Number.parseFloat(t.precision)
    ), h = i(
      () => typeof t.value == "number" ? t.value : Number.parseFloat(t.value)
    ), p = i(
      () => typeof t.max == "number" ? t.max : t.max === void 0 ? void 0 : Number.parseFloat(t.max)
    ), B = i(
      () => t.labelHtml !== void 0 ? t.labelHtml : u.value || (a == null ? void 0 : a.showValue) ? h.value.toFixed(v.value) : n.value || (a == null ? void 0 : a.showProgress) ? (h.value * 100 / (p.value || 100)).toFixed(v.value) : t.label !== void 0 ? t.label : ""
    ), C = i(
      () => a != null && a.max ? `${h.value * 100 / (typeof a.max == "number" ? a.max : Number.parseInt(a.max))}%` : t.max ? `${h.value * 100 / (typeof t.max == "number" ? t.max : Number.parseInt(t.max))}%` : typeof t.value == "string" ? t.value : `${t.value}%`
    );
    return (_, A) => (d(), m("div", {
      class: I(["progress-bar", o(c)]),
      role: "progressbar",
      "aria-valuenow": e.value,
      "aria-valuemin": "0",
      "aria-valuemax": e.max,
      style: Ie({ width: o(C) })
    }, [
      g(_.$slots, "default", {}, () => [
        J(j(o(B)), 1)
      ])
    ], 14, Zr));
  }
}), il = Symbol(), Qr = /* @__PURE__ */ x({
  __name: "BProgress",
  props: {
    variant: null,
    max: null,
    height: null,
    animated: { default: !1 },
    precision: { default: 0 },
    showProgress: { default: !1 },
    showValue: { default: !1 },
    striped: { default: !1 },
    value: { default: 0 }
  },
  setup(e) {
    const t = e, a = r(s(t, "animated")), l = r(s(t, "showProgress")), n = r(s(t, "showValue")), u = r(s(t, "striped")), f = i(() => ({
      animated: t.animated,
      max: t.max,
      precision: t.precision,
      showProgress: t.showProgress,
      showValue: t.showValue,
      striped: t.striped,
      value: t.value,
      variant: t.variant
    }));
    return We(il, {
      animated: a.value,
      max: t.max,
      showProgress: l.value,
      showValue: n.value,
      striped: u.value
    }), (c, v) => (d(), m("div", {
      class: "progress",
      style: Ie({ height: e.height })
    }, [
      g(c.$slots, "default", {}, () => [
        se(rl, ve(Ce(o(f))), null, 16)
      ])
    ], 4));
  }
}), na = bt("cols", [""], { type: [String, Number], default: null }), ei = x({
  name: "BRow",
  props: {
    tag: { type: String, default: "div" },
    gutterX: { type: String, default: null },
    gutterY: { type: String, default: null },
    noGutters: { type: [Boolean, String], default: !1 },
    alignV: { type: String, default: null },
    alignH: { type: String, default: null },
    alignContent: { type: String, default: null },
    ...na
  },
  setup(e) {
    const t = r(s(e, "noGutters")), a = i(() => Ca(e, na, "cols", "row-cols"));
    return {
      computedClasses: i(() => [
        a.value,
        {
          [`gx-${e.gutterX}`]: e.gutterX !== null,
          [`gy-${e.gutterY}`]: e.gutterY !== null,
          "g-0": t.value,
          [`align-items-${e.alignV}`]: e.alignV !== null,
          [`justify-content-${e.alignH}`]: e.alignH !== null,
          [`align-content-${e.alignContent}`]: e.alignContent !== null
        }
      ])
    };
  }
});
function ti(e, t, a, l, n, u) {
  return d(), P(X(e.tag), {
    class: I(["row", e.computedClasses])
  }, {
    default: O(() => [
      g(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["class"]);
}
const ai = /* @__PURE__ */ Ve(ei, [["render", ti]]), rt = /* @__PURE__ */ x({
  __name: "BSkeleton",
  props: {
    height: null,
    width: null,
    size: null,
    animation: { default: "wave" },
    type: { default: "text" },
    variant: null
  },
  setup(e) {
    const t = e, a = i(() => [
      `b-skeleton-${t.type}`,
      {
        [`b-skeleton-animate-${t.animation}`]: typeof t.animation == "boolean" ? !1 : t.animation,
        [`bg-${t.variant}`]: t.variant !== void 0
      }
    ]), l = i(() => ({
      width: t.size || t.width,
      height: t.size || t.height
    }));
    return (n, u) => (d(), m("div", {
      class: I(["b-skeleton", o(a)]),
      style: Ie(o(l))
    }, null, 6));
  }
}), li = /* @__PURE__ */ x({
  __name: "BSkeletonIcon",
  props: {
    animation: { default: "wave" }
  },
  setup(e) {
    const t = e, a = i(() => [`b-skeleton-animate-${t.animation}`]);
    return (l, n) => (d(), m("div", {
      class: I(["b-skeleton-icon-wrapper position-relative d-inline-block overflow-hidden", o(a)])
    }, [
      g(l.$slots, "default")
    ], 2));
  }
}), oi = { key: 0 }, ni = { key: 1 }, si = /* @__PURE__ */ x({
  __name: "BSkeletonTable",
  props: {
    animation: { default: "wave" },
    columns: { default: 5 },
    hideHeader: { default: !1 },
    rows: { default: 3 },
    showFooter: { default: !1 },
    tableProps: null
  },
  setup(e) {
    const t = e, a = r(s(t, "hideHeader")), l = r(s(t, "showFooter"));
    return (n, u) => (d(), P(yt, ve(Ce(e.tableProps)), {
      default: O(() => [
        o(a) ? M("", !0) : (d(), m("thead", oi, [
          E("tr", null, [
            (d(!0), m(Z, null, re(e.columns, (f, c) => (d(), m("th", { key: c }, [
              se(rt)
            ]))), 128))
          ])
        ])),
        E("tbody", null, [
          (d(!0), m(Z, null, re(e.rows, (f, c) => (d(), m("tr", { key: c }, [
            (d(!0), m(Z, null, re(e.columns, (v, h) => (d(), m("td", { key: h }, [
              se(rt, { width: "75%" })
            ]))), 128))
          ]))), 128))
        ]),
        o(l) ? (d(), m("tfoot", ni, [
          E("tr", null, [
            (d(!0), m(Z, null, re(e.columns, (f, c) => (d(), m("th", { key: c }, [
              se(rt)
            ]))), 128))
          ])
        ])) : M("", !0)
      ]),
      _: 1
    }, 16));
  }
}), ri = /* @__PURE__ */ x({
  __name: "BSkeletonWrapper",
  props: {
    loading: { default: !1 }
  },
  setup(e) {
    const a = r(s(e, "loading"));
    return (l, n) => o(a) ? g(l.$slots, "loading", { key: 0 }) : g(l.$slots, "default", { key: 1 });
  }
}), ii = ["TD", "TH", "TR"], ui = [
  "a",
  "a *",
  "button",
  "button *",
  "input:not(.disabled):not([disabled])",
  "select:not(.disabled):not([disabled])",
  "textarea:not(.disabled):not([disabled])",
  '[role="link"]',
  '[role="link"] *',
  '[role="button"]',
  '[role="button"] *',
  "[tabindex]:not(.disabled):not([disabled])"
].join(","), lt = (e) => {
  if (!e || !e.target)
    return !1;
  const t = e.target;
  if ("disabled" in t && t.disabled || ii.indexOf(t.tagName) !== -1)
    return !1;
  if (Ut(".dropdown-menu", t))
    return !0;
  const a = t.tagName === "LABEL" ? t : Ut("label", t);
  if (a) {
    const l = Nt(a, "for"), n = l ? no(l) : $a("input, select, textarea", a);
    if (n && !n.disabled)
      return !0;
  }
  return ka(t, ui);
}, di = () => {
  const e = (v, h) => {
    const p = [];
    return !(v != null && v.length) && (h == null ? void 0 : h.length) ? (Object.keys(h[0]).forEach((B) => p.push({ key: B, label: Mt(B) })), p) : (Array.isArray(v) && v.forEach((B) => {
      typeof B == "string" ? p.push({ key: B, label: Mt(B) }) : Hl(B) && B.key && typeof B.key == "string" && p.push({ ...B });
    }), p);
  }, t = U([]), a = (v, h, p, B) => (t.value = it(h), "isFilterableTable" in B && B.isFilterableTable.value === !0 && p.filter && (t.value = u(t.value, p.filter, p.filterable)), "isSortable" in B && B.isSortable.value === !0 && (t.value = n(
    v,
    t.value,
    {
      key: p.sortBy,
      desc: B.sortDescBoolean.value
    },
    p.sortCompare
  )), t.value), l = U(void 0), n = (v, h, p, B) => {
    if (!p || !p.key)
      return h;
    const C = p.key;
    return h.sort((_, A) => {
      if (B !== void 0)
        return B(_, A, p.key, p.desc);
      const b = (S) => typeof S == "object" ? JSON.stringify(S) : S;
      return b(_[C]) > b(A[C]) ? p.desc ? -1 : 1 : b(A[C]) > b(_[C]) ? p.desc ? 1 : -1 : 0;
    });
  }, u = (v, h, p) => v.filter(
    (B) => Object.entries(B).filter((C) => {
      const [_, A] = C;
      return !A || _[0] === "_" || p.length > 0 && !p.includes(_) ? !1 : (typeof A == "object" ? JSON.stringify(Object.values(A)) : typeof A == "string" ? A : A.toString()).toLowerCase().includes(h.toLowerCase());
    }).length > 0
  );
  return {
    normaliseFields: e,
    mapItems: a,
    internalItems: t,
    updateInternalItems: async (v) => {
      try {
        return t.value = await Tt(v), t.value;
      } catch {
        return;
      }
    },
    filterEvent: l,
    notifyFilteredItems: () => {
      l.value && l.value(t.value);
    }
  };
}, ci = ["title", "abbr", "onClick"], fi = { class: "d-inline-flex flex-nowrap align-items-center gap-1" }, vi = { key: 1 }, mi = ["onClick", "onDblclick", "onMouseenter", "onMouseleave"], bi = {
  key: 0,
  class: "b-table-stacked-label"
}, pi = ["colspan"], gi = ["colspan"], hi = { class: "d-flex align-items-center justify-content-center gap-2" }, yi = /* @__PURE__ */ E("strong", null, "Loading...", -1), Bi = {
  key: 1,
  class: "b-table-empty-slot"
}, $i = ["colspan"], ki = { key: 0 }, Ci = ["title", "abbr", "onClick"], Si = { key: 1 }, wi = { key: 2 }, Ti = { key: 3 }, Vi = /* @__PURE__ */ x({
  __name: "BTable",
  props: {
    align: null,
    caption: null,
    captionTop: { default: !1 },
    borderless: { default: !1 },
    bordered: { default: !1 },
    borderVariant: null,
    dark: { default: !1 },
    fields: { default: () => [] },
    footClone: { default: !1 },
    hover: { default: !1 },
    items: { default: () => [] },
    provider: null,
    sortCompare: null,
    noProvider: null,
    noProviderPaging: null,
    noProviderSorting: null,
    noProviderFiltering: null,
    responsive: { type: [Boolean, String], default: !1 },
    small: { default: !1 },
    striped: { default: !1 },
    stacked: { type: [Boolean, String], default: !1 },
    labelStacked: { type: Boolean, default: !1 },
    variant: null,
    sortBy: null,
    sortDesc: { default: !1 },
    sortInternal: { default: !0 },
    selectable: { default: !1 },
    stickySelect: { default: !1 },
    selectHead: { type: [Boolean, String], default: !0 },
    selectMode: { default: "single" },
    selectionVariant: { default: "primary" },
    stickyHeader: { default: !1 },
    busy: { default: !1 },
    showEmpty: { default: !1 },
    perPage: null,
    currentPage: { default: 1 },
    filter: null,
    filterable: null,
    emptyText: { default: "There are no records to show" },
    emptyFilteredText: { default: "There are no records matching your request" }
  },
  emits: ["headClicked", "rowClicked", "rowDblClicked", "rowHovered", "rowUnhovered", "rowSelected", "rowUnselected", "selection", "update:busy", "update:sortBy", "update:sortDesc", "sorted", "filtered"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = $e(), u = di(), f = r(s(l, "footClone")), c = r(s(l, "sortDesc")), v = r(s(l, "sortInternal")), h = r(s(l, "selectable")), p = r(s(l, "stickySelect")), B = r(s(l, "labelStacked")), C = r(s(l, "busy")), _ = r(s(l, "showEmpty")), A = r(s(l, "noProviderPaging")), b = r(s(l, "noProviderSorting")), k = r(s(l, "noProviderFiltering")), y = U(C.value);
    u.filterEvent.value = async (w) => {
      if (V.value) {
        await K();
        return;
      }
      const R = await Tt(w);
      a("filtered", R);
    };
    const S = U(/* @__PURE__ */ new Set([])), H = i(() => S.value.size > 0), T = i(() => ({
      [`align-${l.align}`]: l.align !== void 0,
      "b-table-selectable": h.value,
      [`b-table-select-${l.selectMode}`]: h.value,
      "b-table-selecting user-select-none": h.value && H.value,
      "b-table-busy": y.value,
      "b-table-sortable": q.value,
      "b-table-sort-desc": q.value && c.value === !0,
      "b-table-sort-asc": q.value && c.value === !1
    })), F = i(() => ({
      bordered: l.bordered,
      borderless: l.borderless,
      borderVariant: l.borderVariant,
      captionTop: l.captionTop,
      dark: l.dark,
      hover: l.hover,
      responsive: l.responsive,
      striped: l.striped,
      stacked: l.stacked,
      small: l.small,
      tableClass: T.value,
      tableVariant: l.variant,
      stickyHeader: l.stickyHeader
    })), L = i(() => u.normaliseFields(l.fields, l.items)), z = i(
      () => L.value.length + (h.value ? 1 : 0)
    ), $ = i(() => l.filter !== void 0 && l.filter !== ""), V = i(() => l.provider !== void 0), D = i(
      () => h.value && (!!l.selectHead || n.selectHead !== void 0)
    ), q = i(
      () => l.fields.filter((w) => typeof w == "string" ? !1 : w.sortable).length > 0
    ), ee = i(() => q.value && v.value === !0), Y = i(() => {
      const w = V.value ? u.internalItems.value : ee.value ? u.mapItems(l.fields, l.items, l, {
        isSortable: q,
        isFilterableTable: $,
        sortDescBoolean: c
      }) : l.items;
      if (l.perPage !== void 0) {
        const R = (l.currentPage - 1) * l.perPage;
        return w.splice(R, l.perPage);
      }
      return w;
    }), G = (w) => typeof w == "string" ? Gt(w) : w.label !== void 0 ? w.label : typeof w.key == "string" ? Gt(w.key) : w.key, ie = (w, R, ae = !1) => {
      const N = typeof w == "string" ? w : w.key;
      a("headClicked", N, w, R, ae), ge(w);
    }, ce = (w, R, ae) => {
      a("rowClicked", w, R, ae), Fe(w, R, ae.shiftKey);
    }, Q = (w, R, ae) => a("rowDblClicked", w, R, ae), he = (w, R, ae) => a("rowHovered", w, R, ae), pe = (w, R, ae) => a("rowUnhovered", w, R, ae), ge = (w) => {
      if (!q.value)
        return;
      const R = typeof w == "string" ? w : w.key, ae = typeof w == "string" ? !1 : w.sortable;
      if (q.value === !0 && ae === !0) {
        const N = !c.value;
        R !== l.sortBy && a("update:sortBy", R), a("update:sortDesc", N), a("sorted", R, N);
      }
    }, me = () => {
      !h.value || a("selection", Array.from(S.value));
    }, Fe = (w, R, ae = !1) => {
      if (!!h.value) {
        if (S.value.has(w))
          S.value.delete(w), a("rowUnselected", w);
        else if (l.selectMode === "single" && S.value.size > 0 && (S.value.forEach((N) => a("rowUnselected", N)), S.value.clear()), l.selectMode === "range" && S.value.size > 0 && ae) {
          const N = Array.from(S.value).pop(), ke = Y.value.findIndex((He) => He === N), oe = Math.min(ke, R), Bt = Math.max(ke, R);
          Y.value.slice(oe, Bt + 1).forEach((He) => {
            S.value.has(He) || (S.value.add(He), a("rowSelected", He));
          });
        } else
          S.value.add(w), a("rowSelected", w);
        me();
      }
    }, K = async () => {
      if (!V.value || !l.provider || y.value)
        return;
      y.value = !0;
      const w = new Proxy(
        {
          currentPage: l.currentPage,
          filter: l.filter,
          sortBy: l.sortBy,
          sortDesc: l.sortDesc,
          perPage: l.perPage
        },
        {
          get(ae, N) {
            return N in ae ? ae[N] : void 0;
          },
          set() {
            return console.error("BTable provider context is a read-only object."), !0;
          }
        }
      ), R = l.provider(w, u.updateInternalItems);
      if (R !== void 0) {
        if (R instanceof Promise)
          try {
            const ae = await R;
            return Array.isArray(ae) ? await u.updateInternalItems(ae) : void 0;
          } finally {
            y.value && (y.value = !1);
          }
        try {
          return await u.updateInternalItems(R);
        } finally {
          y.value && (y.value = !1);
        }
      }
    }, te = (w) => {
      w._showDetails = !w._showDetails;
    }, fe = (w) => [
      w.class,
      w.thClass,
      w.variant ? `table-${w.variant}` : void 0,
      {
        "b-table-sortable-column": q.value && w.sortable,
        "b-table-sticky-column": w.stickyColumn
      }
    ], de = (w, R) => [
      w.class,
      w.tdClass,
      w.variant ? `table-${w.variant}` : void 0,
      (R == null ? void 0 : R._cellVariants) && (R == null ? void 0 : R._cellVariants[w.key]) ? `table-${R == null ? void 0 : R._cellVariants[w.key]}` : void 0,
      {
        "b-table-sticky-column": w.stickyColumn
      }
    ], Se = (w) => [
      w._rowVariant ? `table-${w._rowVariant}` : null,
      w._rowVariant ? `table-${w._rowVariant}` : null,
      h.value && S.value.has(w) ? `selected table-${l.selectionVariant}` : null
    ], qe = () => {
      if (!h.value)
        return;
      const w = S.value.size > 0 ? Array.from(S.value) : [];
      S.value = /* @__PURE__ */ new Set([...Y.value]), S.value.forEach((R) => {
        w.includes(R) || a("rowSelected", R);
      }), me();
    }, fl = () => {
      !h.value || (S.value.forEach((w) => {
        a("rowUnselected", w);
      }), S.value = /* @__PURE__ */ new Set([]), me());
    }, vl = (w) => {
      if (!h.value)
        return;
      const R = Y.value[w];
      !R || S.value.has(R) || (S.value.add(R), a("rowSelected", R), me());
    }, ml = (w) => {
      if (!h.value)
        return;
      const R = Y.value[w];
      !R || !S.value.has(R) || (S.value.delete(R), a("rowUnselected", R), me());
    }, Je = async (w, R, ae) => {
      if (R === ae)
        return;
      const N = (bl) => l.noProvider && l.noProvider.includes(bl), ke = !["currentPage", "perPage"].includes(w), oe = ["currentPage", "perPage"].includes(w) && (N("paging") || A.value === !0), Bt = ["filter"].includes(w) && (N("filtering") || k.value === !0), He = ["sortBy", "sortDesc"].includes(w) && (N("sorting") || b.value === !0);
      oe || Bt || He || (await K(), ke && u.notifyFilteredItems());
    };
    return ne(
      () => l.filter,
      (w, R) => {
        w === R || V.value || w || Tt(l.items).then((ae) => a("filtered", ae));
      }
    ), ne(
      () => y.value,
      () => y.value !== C.value && a("update:busy", y.value)
    ), ne(
      () => C.value,
      () => y.value !== C.value && (y.value = C.value)
    ), ne(
      () => l.filter,
      (w, R) => Je("filter", w, R)
    ), ne(
      () => l.currentPage,
      (w, R) => Je("currentPage", w, R)
    ), ne(
      () => l.perPage,
      (w, R) => Je("perPage", w, R)
    ), ne(
      () => l.sortBy,
      (w, R) => Je("sortBy", w, R)
    ), ne(
      () => l.sortDesc,
      (w, R) => Je("sortDesc", w, R)
    ), Be(() => {
      V.value && K();
    }), t({
      selectAllRows: qe,
      clearSelected: fl,
      selectRow: vl,
      unselectRow: ml
    }), (w, R) => (d(), P(yt, ve(Ce(o(F))), {
      default: O(() => {
        var ae;
        return [
          E("thead", null, [
            w.$slots["thead-top"] ? g(w.$slots, "thead-top", { key: 0 }) : M("", !0),
            E("tr", null, [
              o(D) ? (d(), m("th", {
                key: 0,
                class: I(["b-table-selection-column", {
                  "b-table-sticky-column": o(p)
                }])
              }, [
                g(w.$slots, "select-head", {}, () => [
                  J(j(typeof e.selectHead == "boolean" ? "Selected" : e.selectHead), 1)
                ])
              ], 2)) : M("", !0),
              (d(!0), m(Z, null, re(o(L), (N) => (d(), m("th", W({
                key: N.key,
                scope: "col",
                class: fe(N),
                title: N.headerTitle,
                abbr: N.headerAbbr,
                style: N.thStyle
              }, N.thAttr, {
                onClick: (ke) => ie(N, ke)
              }), [
                E("div", fi, [
                  g(w.$slots, "sort-icon", {
                    field: N,
                    sortBy: e.sortBy,
                    selected: N.key === e.sortBy,
                    isDesc: o(c),
                    direction: o(c) ? "desc" : "asc"
                  }, () => [
                    o(q) && N.sortable ? (d(), m("span", {
                      key: 0,
                      class: I(["b-table-sort-icon", {
                        sorted: N.key === e.sortBy,
                        [`sorted-${o(c) ? "desc" : "asc"}`]: N.key === e.sortBy
                      }])
                    }, null, 2)) : M("", !0)
                  ]),
                  E("div", null, [
                    w.$slots["head(" + N.key + ")"] || w.$slots["head()"] ? g(w.$slots, w.$slots["head(" + N.key + ")"] ? "head(" + N.key + ")" : "head()", {
                      key: 0,
                      label: N.label
                    }) : (d(), m(Z, { key: 1 }, [
                      J(j(G(N)), 1)
                    ], 64))
                  ])
                ])
              ], 16, ci))), 128))
            ]),
            w.$slots["thead-sub"] ? (d(), m("tr", vi, [
              (d(!0), m(Z, null, re(o(L), (N) => (d(), m("td", {
                key: N.key,
                scope: "col",
                class: I([N.class, N.thClass, N.variant ? `table-${N.variant}` : ""])
              }, [
                w.$slots["thead-sub"] ? g(w.$slots, "thead-sub", W({
                  key: 0,
                  items: o(L)
                }, N)) : (d(), m(Z, { key: 1 }, [
                  J(j(N.label), 1)
                ], 64))
              ], 2))), 128))
            ])) : M("", !0)
          ]),
          E("tbody", null, [
            (d(!0), m(Z, null, re(o(Y), (N, ke) => (d(), m(Z, { key: ke }, [
              E("tr", {
                class: I(Se(N)),
                onClick: (oe) => !o(lt)(oe) && ce(N, ke, oe),
                onDblclick: (oe) => !o(lt)(oe) && Q(N, ke, oe),
                onMouseenter: (oe) => !o(lt)(oe) && he(N, ke, oe),
                onMouseleave: (oe) => !o(lt)(oe) && pe(N, ke, oe)
              }, [
                o(D) ? (d(), m("td", {
                  key: 0,
                  class: I(["b-table-selection-column", {
                    "b-table-sticky-column": o(p)
                  }])
                }, [
                  g(w.$slots, "select-cell", {}, () => [
                    E("span", {
                      class: I(S.value.has(N) ? "text-primary" : "")
                    }, "\u{1F5F9}", 2)
                  ])
                ], 2)) : M("", !0),
                (d(!0), m(Z, null, re(o(L), (oe) => (d(), m("td", W({
                  key: oe.key
                }, oe.tdAttr, {
                  class: de(oe, N)
                }), [
                  e.stacked && o(B) ? (d(), m("label", bi, j(G(oe)), 1)) : M("", !0),
                  w.$slots["cell(" + oe.key + ")"] || w.$slots["cell()"] ? g(w.$slots, w.$slots["cell(" + oe.key + ")"] ? "cell(" + oe.key + ")" : "cell()", {
                    key: 1,
                    value: N[oe.key],
                    index: ke,
                    item: N,
                    field: oe,
                    items: e.items,
                    toggleDetails: () => te(N),
                    detailsShowing: N._showDetails
                  }) : (d(), m(Z, { key: 2 }, [
                    J(j(N[oe.key]), 1)
                  ], 64))
                ], 16))), 128))
              ], 42, mi),
              N._showDetails === !0 && w.$slots["row-details"] ? (d(), m("tr", {
                key: 0,
                class: I(Se(N))
              }, [
                E("td", { colspan: o(z) }, [
                  g(w.$slots, "row-details", {
                    item: N,
                    toggleDetails: () => te(N)
                  })
                ], 8, pi)
              ], 2)) : M("", !0)
            ], 64))), 128)),
            y.value ? (d(), m("tr", {
              key: 0,
              class: I(["b-table-busy-slot", { "b-table-static-busy": o(Y).length == 0 }])
            }, [
              E("td", { colspan: o(z) }, [
                g(w.$slots, "table-busy", {}, () => [
                  E("div", hi, [
                    se(gt, { class: "align-middle" }),
                    yi
                  ])
                ])
              ], 8, gi)
            ], 2)) : M("", !0),
            o(_) && o(Y).length === 0 ? (d(), m("tr", Bi, [
              E("td", { colspan: o(z) }, [
                g(w.$slots, "empty", {
                  items: o(Y),
                  filtered: o($)
                }, () => [
                  J(j(o($) ? e.emptyFilteredText : e.emptyText), 1)
                ])
              ], 8, $i)
            ])) : M("", !0)
          ]),
          o(f) ? (d(), m("tfoot", ki, [
            E("tr", null, [
              (d(!0), m(Z, null, re(o(L), (N) => (d(), m("th", W({
                key: N.key
              }, N.thAttr, {
                scope: "col",
                class: [N.class, N.thClass, N.variant ? `table-${N.variant}` : ""],
                title: N.headerTitle,
                abbr: N.headerAbbr,
                style: N.thStyle,
                onClick: (ke) => ie(N, ke, !0)
              }), j(N.label), 17, Ci))), 128))
            ])
          ])) : w.$slots["custom-foot"] ? (d(), m("tfoot", Si, [
            g(w.$slots, "custom-foot", {
              fields: o(L),
              items: e.items,
              columns: (ae = o(L)) == null ? void 0 : ae.length
            })
          ])) : M("", !0),
          w.$slots["table-caption"] ? (d(), m("caption", wi, [
            g(w.$slots, "table-caption")
          ])) : e.caption ? (d(), m("caption", Ti, j(e.caption), 1)) : M("", !0)
        ];
      }),
      _: 3
    }, 16));
  }
}), _i = /* @__PURE__ */ x({
  __name: "BTbody",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = i(() => ({
      [`thead-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (d(), m("tbody", {
      role: "rowgroup",
      class: I(o(a))
    }, [
      g(l.$slots, "default")
    ], 2));
  }
}), Ai = ["scope", "colspan", "rowspan", "data-label"], xi = { key: 0 }, Ii = /* @__PURE__ */ x({
  __name: "BTd",
  props: {
    colspan: null,
    rowspan: null,
    stackedHeading: null,
    stickyColumn: { default: !1 },
    variant: null
  },
  setup(e) {
    const t = e, a = r(s(t, "stickyColumn")), l = i(() => ({
      [`table-${t.variant}`]: t.variant !== void 0,
      "b-table-sticky-column": a.value,
      "table-b-table-default": a.value && t.variant === void 0
    })), n = i(() => t.colspan ? "colspan" : t.rowspan ? "rowspan" : "col");
    return (u, f) => (d(), m("td", {
      role: "cell",
      scope: o(n),
      class: I(o(l)),
      colspan: e.colspan,
      rowspan: e.rowspan,
      "data-label": e.stackedHeading
    }, [
      e.stackedHeading ? (d(), m("div", xi, [
        g(u.$slots, "default")
      ])) : g(u.$slots, "default", { key: 1 })
    ], 10, Ai));
  }
}), Fi = /* @__PURE__ */ x({
  __name: "BTfoot",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = i(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (d(), m("tfoot", {
      role: "rowgroup",
      class: I(o(a))
    }, [
      g(l.$slots, "default")
    ], 2));
  }
}), Pi = ["scope", "colspan", "rowspan", "data-label"], Oi = { key: 0 }, zi = /* @__PURE__ */ x({
  __name: "BTh",
  props: {
    colspan: null,
    rowspan: null,
    stackedHeading: null,
    stickyColumn: { default: !1 },
    variant: null
  },
  setup(e) {
    const t = e, a = r(s(t, "stickyColumn")), l = i(() => ({
      [`table-${t.variant}`]: t.variant !== void 0,
      "b-table-sticky-column": a.value,
      "table-b-table-default": a.value && t.variant === void 0
    })), n = i(() => t.colspan ? "colspan" : t.rowspan ? "rowspan" : "col");
    return (u, f) => (d(), m("th", {
      role: "columnheader",
      scope: o(n),
      class: I(o(l)),
      colspan: e.colspan,
      rowspan: e.rowspan,
      "data-label": e.stackedHeading
    }, [
      e.stackedHeading !== void 0 ? (d(), m("div", Oi, [
        g(u.$slots, "default")
      ])) : g(u.$slots, "default", { key: 1 })
    ], 10, Pi));
  }
}), Li = /* @__PURE__ */ x({
  __name: "BThead",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = i(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (d(), m("thead", {
      role: "rowgroup",
      class: I(o(a))
    }, [
      g(l.$slots, "default")
    ], 2));
  }
}), Ni = /* @__PURE__ */ x({
  __name: "BTr",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = i(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (d(), m("tr", {
      role: "row",
      class: I(o(a))
    }, [
      g(l.$slots, "default")
    ], 2));
  }
}), Ei = ["id", "data-bs-target", "aria-controls", "aria-selected", "onClick"], ul = Symbol(), Hi = /* @__PURE__ */ x({
  __name: "BTabs",
  props: {
    activeNavItemClass: null,
    activeTabClass: null,
    align: null,
    card: { default: !1 },
    contentClass: null,
    end: { default: !1 },
    fill: { default: !1 },
    id: null,
    justified: { default: !1 },
    lazy: { default: !1 },
    navClass: null,
    navWrapperClass: null,
    noFade: { default: !1 },
    noNavStyle: { default: !1 },
    pills: { default: !1 },
    small: { default: !1 },
    tag: { default: "div" },
    vertical: { default: !1 },
    modelValue: { default: -1 }
  },
  emits: ["update:modelValue", "activate-tab", "click"],
  setup(e, { emit: t }) {
    const a = e, l = r(s(a, "card")), n = r(s(a, "end")), u = r(s(a, "fill")), f = r(s(a, "justified")), c = r(s(a, "lazy")), v = r(s(a, "noFade")), h = r(s(a, "noNavStyle")), p = r(s(a, "pills")), B = r(s(a, "small")), C = r(s(a, "vertical")), _ = $e(), A = U(a.modelValue), b = U(""), k = i({
      get: () => A.value,
      set: ($) => {
        A.value = $, y.value.length > 0 && $ >= 0 && $ < y.value.length ? b.value = y.value[$].buttonId : b.value = "", t("update:modelValue", $);
      }
    }), y = i(() => {
      let $ = [];
      return _.default && ($ = z(_).map((V, D) => {
        V.props || (V.props = {});
        const q = V.props["button-id"] || ze("tab"), ee = V.props.id || ze(), Y = k.value > -1 ? D === k.value : V.props.active === "", G = V.props["title-item-class"], ie = V.props["title-link-attributes"];
        return {
          buttonId: q,
          contentId: ee,
          active: Y,
          disabled: V.props.disabled === "" || V.props.disabled === !0,
          navItemClasses: [
            {
              active: Y,
              disabled: V.props.disabled === "" || V.props.disabled === !0
            },
            Y && a.activeNavItemClass ? a.activeNavItemClass : null,
            V.props["title-link-class"]
          ],
          tabClasses: [
            {
              fade: !v.value
            },
            Y && a.activeTabClass ? a.activeTabClass : null
          ],
          target: `#${ee}`,
          title: V.props.title,
          titleItemClass: G,
          titleLinkAttributes: ie,
          onClick: V.props.onClick,
          tab: V
        };
      })), $;
    }), S = i(() => !((y == null ? void 0 : y.value) && y.value.length > 0)), H = i(() => ({
      "d-flex": C.value,
      "align-items-start": C.value
    })), T = i(() => ({
      "nav-pills": p.value,
      "flex-column me-3": C.value,
      [`justify-content-${a.align}`]: a.align !== void 0,
      "nav-fill": u.value,
      "card-header-tabs": l.value,
      "nav-justified": f.value,
      "nav-tabs": !h.value && !p.value,
      small: B.value
    })), F = ($) => {
      let V = !1;
      if ($ !== void 0 && $ > -1 && $ < y.value.length && !y.value[$].disabled && (k.value < 0 || y.value[$].buttonId !== b.value)) {
        const D = new ft("activate-tab", { cancelable: !0, vueTarget: this });
        t("activate-tab", $, k.value, D), D.defaultPrevented || (k.value = $, V = !0);
      }
      return !V && a.modelValue !== k.value && t("update:modelValue", k.value), V;
    }, L = ($, V) => {
      var D;
      F(V), V >= 0 && !y.value[V].disabled && ((D = y.value[V]) == null ? void 0 : D.onClick) && typeof y.value[V].onClick == "function" && y.value[V].onClick($);
    }, z = ($) => !$ || !$.default ? [] : $.default().reduce((V, D) => (typeof D.type == "symbol" ? V = V.concat(D.children) : V.push(D), V), []).filter((V) => {
      var D;
      return ((D = V.type) == null ? void 0 : D.__name) === "BTab";
    });
    return F(A.value), ne(
      () => a.modelValue,
      ($, V) => {
        if ($ === V)
          return;
        if ($ = Math.max($, -1), V = Math.max(V, -1), y.value.length <= 0) {
          k.value = -1;
          return;
        }
        const D = $ > V;
        let q = $;
        const ee = y.value.length - 1;
        for (; q >= 0 && q <= ee && y.value[q].disabled; )
          q += D ? 1 : -1;
        if (q < 0) {
          F(0);
          return;
        }
        if (q >= y.value.length) {
          F(y.value.length - 1);
          return;
        }
        F(q);
      }
    ), ne(
      () => y.value,
      () => {
        let $ = y.value.map((V) => V.active && !V.disabled).lastIndexOf(!0);
        $ < 0 && (k.value >= y.value.length ? $ = y.value.map((V) => !V.disabled).lastIndexOf(!0) : y.value[k.value] && !y.value[k.value].disabled && ($ = k.value)), $ < 0 && ($ = y.value.map((V) => !V.disabled).indexOf(!0)), y.value.forEach((V, D) => V.active = D === $), F($);
      }
    ), Be(() => {
      if (k.value < 0 && y.value.length > 0 && !y.value.some(($) => $.active)) {
        const $ = y.value.map((V) => !V.disabled).indexOf(!0);
        F($ >= 0 ? $ : -1);
      }
    }), We(ul, {
      lazy: c.value,
      card: l.value
    }), ($, V) => (d(), P(X(e.tag), {
      id: e.id,
      class: I(["tabs", o(H)])
    }, {
      default: O(() => [
        o(n) ? (d(), m("div", {
          key: 0,
          class: I(["tab-content", e.contentClass])
        }, [
          (d(!0), m(Z, null, re(o(y), ({ tab: D, contentId: q, tabClasses: ee, active: Y }, G) => (d(), P(X(D), {
            id: q,
            key: G,
            class: I(ee),
            active: Y
          }, null, 8, ["id", "class", "active"]))), 128)),
          o(S) ? (d(), m("div", {
            key: "bv-empty-tab",
            class: I(["tab-pane active", { "card-body": o(l) }])
          }, [
            g($.$slots, "empty")
          ], 2)) : M("", !0)
        ], 2)) : M("", !0),
        E("div", {
          class: I([e.navWrapperClass, { "card-header": o(l), "ms-auto": e.vertical && o(n) }])
        }, [
          E("ul", {
            class: I(["nav", [o(T), e.navClass]]),
            role: "tablist"
          }, [
            g($.$slots, "tabs-start"),
            (d(!0), m(Z, null, re(o(y), ({ tab: D, buttonId: q, contentId: ee, navItemClasses: Y, active: G, target: ie }, ce) => (d(), m("li", {
              key: ce,
              class: I(["nav-item", D.props["title-item-class"]])
            }, [
              E("button", W({
                id: q,
                class: ["nav-link", Y],
                "data-bs-toggle": "tab",
                "data-bs-target": ie,
                role: "tab",
                "aria-controls": ee,
                "aria-selected": G
              }, D.props["title-link-attributes"], {
                onClick: Lt((Q) => L(Q, ce), ["stop", "prevent"])
              }), [
                D.children && D.children.title ? (d(), P(X(D.children.title), { key: 0 })) : (d(), m(Z, { key: 1 }, [
                  J(j(D.props.title), 1)
                ], 64))
              ], 16, Ei)
            ], 2))), 128)),
            g($.$slots, "tabs-end")
          ], 2)
        ], 2),
        o(n) ? M("", !0) : (d(), m("div", {
          key: 1,
          class: I(["tab-content", e.contentClass])
        }, [
          (d(!0), m(Z, null, re(o(y), ({ tab: D, contentId: q, tabClasses: ee, active: Y }, G) => (d(), P(X(D), {
            id: q,
            key: G,
            class: I(ee),
            active: Y
          }, null, 8, ["id", "class", "active"]))), 128)),
          o(S) ? (d(), m("div", {
            key: "bv-empty-tab",
            class: I(["tab-pane active", { "card-body": o(l) }])
          }, [
            g($.$slots, "empty")
          ], 2)) : M("", !0)
        ], 2))
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Di = /* @__PURE__ */ x({
  __name: "BTab",
  props: {
    id: null,
    title: null,
    active: { default: !1 },
    buttonId: { default: void 0 },
    disabled: { default: !1 },
    lazy: { default: void 0 },
    lazyOnce: { default: void 0 },
    noBody: { type: [Boolean, String], default: !1 },
    tag: { default: "div" },
    titleItemClass: null,
    titleLinkAttributes: { default: void 0 },
    titleLinkClass: null
  },
  setup(e) {
    const t = e, a = Ne(ul, null), l = r(s(t, "active")), n = r(s(t, "disabled")), u = r(s(t, t.lazyOnce !== void 0 ? "lazyOnce" : "lazy")), f = U(!1), c = i(() => (a == null ? void 0 : a.lazy) || u.value), v = i(() => t.lazyOnce !== void 0), h = i(() => l.value && !n.value), p = i(() => {
      const C = c.value && v.value && f.value;
      return h.value || !c.value || C;
    }), B = i(() => ({
      active: l.value,
      show: l.value,
      "card-body": (a == null ? void 0 : a.card) && t.noBody === !1
    }));
    return ne(
      () => p.value,
      (C) => {
        C && !f.value && (f.value = !0);
      }
    ), (C, _) => (d(), P(X(e.tag), {
      id: e.id,
      class: I(["tab-pane", o(B)]),
      role: "tabpanel",
      "aria-labelledby": "profile-tab"
    }, {
      default: O(() => [
        o(p) ? g(C.$slots, "default", { key: 0 }) : M("", !0)
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Ri = "toast-title", sa = 1e3, dl = x({
  components: { BLink: Te },
  props: {
    ...je,
    delay: { type: Number, default: 5e3 },
    bodyClass: { type: String },
    body: { type: [Object, String] },
    headerClass: { type: String },
    headerTag: { type: String, default: "div" },
    animation: { type: [Boolean, String], default: !0 },
    id: { type: String },
    isStatus: { type: [Boolean, String], default: !1 },
    autoHide: { type: [Boolean, String], default: !0 },
    noCloseButton: { type: [Boolean, String], default: !1 },
    noFade: { type: [Boolean, String], default: !1 },
    noHoverPause: { type: [Boolean, String], default: !1 },
    solid: { type: [Boolean, String], default: !1 },
    static: { type: [Boolean, String], default: !1 },
    title: { type: String },
    modelValue: { type: [Boolean, String], default: !1 },
    toastClass: { type: Array },
    variant: { type: String }
  },
  emits: ["destroyed", "update:modelValue"],
  setup(e, { emit: t, slots: a }) {
    r(s(e, "animation"));
    const l = r(s(e, "isStatus")), n = r(s(e, "autoHide")), u = r(s(e, "noCloseButton")), f = r(s(e, "noFade")), c = r(s(e, "noHoverPause"));
    r(s(e, "solid")), r(s(e, "static"));
    const v = r(s(e, "modelValue")), h = U(!1), p = U(!1), B = U(!1), C = i(() => ({
      [`b-toast-${e.variant}`]: e.variant !== void 0,
      show: B.value || h.value
    }));
    let _, A, b;
    const k = () => {
      typeof _ > "u" || (clearTimeout(_), _ = void 0);
    }, y = i(
      () => Math.max(Ue(e.delay, 0), sa)
    ), S = () => {
      v.value && (A = b = 0, k(), p.value = !0, at(() => {
        B.value = !1;
      }));
    }, H = () => {
      k(), t("update:modelValue", !0), A = b = 0, p.value = !1, Ee(() => {
        at(() => {
          B.value = !0;
        });
      });
    }, T = () => {
      if (!n.value || c.value || !_ || b)
        return;
      const ee = Date.now() - A;
      ee > 0 && (k(), b = Math.max(y.value - ee, sa));
    }, F = () => {
      (!n.value || c.value || !b) && (b = A = 0), L();
    };
    ne(
      () => v.value,
      (ee) => {
        ee ? H() : S();
      }
    );
    const L = () => {
      k(), n.value && (_ = setTimeout(S, b || y.value), A = Date.now(), b = 0);
    }, z = () => {
      h.value = !0, t("update:modelValue", !0);
    }, $ = () => {
      h.value = !1, L();
    }, V = () => {
      h.value = !0;
    }, D = () => {
      h.value = !1, b = A = 0, t("update:modelValue", !1);
    };
    xl(() => {
      k(), n.value && t("destroyed", e.id);
    }), Be(() => {
      Ee(() => {
        v.value && at(() => {
          H();
        });
      });
    });
    const q = () => {
      Ee(() => {
        at(() => {
          S();
        });
      });
    };
    return () => {
      const ee = () => {
        const Y = [], G = xe(Ri, { hide: S }, a);
        G ? Y.push(le(G)) : e.title && Y.push(le("strong", { class: "me-auto" }, e.title)), !u.value && Y.length !== 0 && Y.push(
          le(Ke, {
            class: ["btn-close"],
            onClick: () => {
              S();
            }
          })
        );
        const ie = [];
        if (Y.length > 0 && ie.push(
          le(
            e.headerTag,
            {
              class: "toast-header"
            },
            { default: () => Y }
          )
        ), xe("default", { hide: S }, a) || e.body) {
          const ce = le(
            Qe(e) ? "b-link" : "div",
            {
              class: ["toast-body", e.bodyClass],
              onClick: Qe(e) ? { click: q } : {}
            },
            xe("default", { hide: S }, a) || e.body
          );
          ie.push(ce);
        }
        return le(
          "div",
          {
            class: ["toast", e.toastClass, C.value],
            tabindex: "0"
          },
          ie
        );
      };
      return le(
        "div",
        {
          class: ["b-toast"],
          id: e.id,
          role: p.value ? null : l.value ? "status" : "alert",
          "aria-live": p.value ? null : l.value ? "polite" : "assertive",
          "aria-atomic": p.value ? null : "true",
          onmouseenter: T,
          onmouseleave: F
        },
        [
          le(
            ht,
            {
              noFade: f.value,
              onAfterEnter: $,
              onBeforeEnter: z,
              onAfterLeave: D,
              onBeforeLeave: V
            },
            () => [B.value ? ee() : ""]
          )
        ]
      );
    };
  }
}), ra = /* @__PURE__ */ x({
  __name: "BToaster",
  props: {
    position: { default: "top-right" },
    instance: null
  },
  setup(e) {
    const t = e, a = {
      "top-left": "top-0 start-0",
      "top-center": "top-0 start-50 translate-middle-x",
      "top-right": "top-0 end-0",
      "middle-left": "top-50 start-0 translate-middle-y",
      "middle-center": "top-50 start-50 translate-middle",
      "middle-right": "top-50 end-0 translate-middle-y",
      "bottom-left": "bottom-0 start-0",
      "bottom-center": "bottom-0 start-50 translate-middle-x",
      "bottom-right": "bottom-0 end-0"
    }, l = i(() => a[t.position]), n = (u) => {
      var f;
      (f = t.instance) == null || f.remove(u);
    };
    return (u, f) => {
      var c;
      return d(), m("div", {
        class: I([[o(l)], "b-toaster position-fixed p-3"]),
        style: { "z-index": "11" }
      }, [
        (d(!0), m(Z, null, re((c = e.instance) == null ? void 0 : c.toasts(e.position).value, (v) => (d(), P(dl, {
          id: v.options.id,
          key: v.options.id,
          modelValue: v.options.value,
          "onUpdate:modelValue": (h) => v.options.value = h,
          "auto-hide": v.options.autoHide,
          delay: v.options.delay,
          "no-close-button": v.options.noCloseButton,
          title: v.content.title,
          body: v.content.body,
          component: v.content.body,
          variant: v.options.variant,
          onDestroyed: n
        }, null, 8, ["id", "modelValue", "onUpdate:modelValue", "auto-hide", "delay", "no-close-button", "title", "body", "component", "variant"]))), 128))
      ], 2);
    };
  }
}), Me = { autoHide: !0, delay: 5e3, noCloseButton: !1, pos: "top-right", value: !0 };
class ia {
  constructor(t) {
    ue(this, "vm");
    ue(this, "containerPositions");
    Il(t) ? this.vm = t : this.vm = Le(t), this.containerPositions = i(() => {
      const a = /* @__PURE__ */ new Set([]);
      return this.vm.toasts.map((l) => {
        l.options.pos && a.add(l.options.pos);
      }), a;
    });
  }
  toasts(t) {
    return t ? i(
      () => this.vm.toasts.filter((a) => {
        if (a.options.pos === t && a.options.value)
          return a;
      })
    ) : i(() => this.vm.toasts);
  }
  remove(...t) {
    this.vm.toasts = this.vm.toasts.filter((a) => {
      if (a.options.id && !t.includes(a.options.id))
        return a;
    });
  }
  isRoot() {
    var t;
    return (t = this.vm.root) != null ? t : !1;
  }
  show(t, a = Me) {
    const l = { id: ze(), ...Me, ...a }, n = {
      options: Le(l),
      content: t
    };
    return this.vm.toasts.push(n), n;
  }
  info(t, a = Me) {
    return this.show(t, { variant: "info", ...a });
  }
  danger(t, a = Me) {
    return this.show(t, { variant: "danger", ...a });
  }
  warning(t, a = Me) {
    return this.show(t, { variant: "warning", ...a });
  }
  success(t, a = Me) {
    return this.show(t, { variant: "success", ...a });
  }
  hide() {
  }
}
class ji {
  constructor() {
    ue(this, "vms");
    ue(this, "rootInstance");
    ue(this, "useToast", Gi);
    this.vms = {};
  }
  getOrCreateViewModel(t) {
    if (!t) {
      if (this.rootInstance)
        return this.vms[this.rootInstance];
      const a = { root: !0, toasts: [], container: void 0, id: Symbol("toast") };
      return this.rootInstance = a.id, this.vms[a.id] = a, a;
    }
    if (t.root) {
      if (this.rootInstance)
        return this.vms[this.rootInstance];
      this.rootInstance = t.id;
    }
    return this.vms[t.id] = t, t;
  }
  getVM(t) {
    if (!t && this.rootInstance)
      return this.vms[this.rootInstance];
    if (t)
      return this.vms[t];
  }
}
const Pt = Symbol(), cl = Symbol(), qi = {
  container: void 0,
  toasts: [],
  root: !1
};
function Mi() {
  return Ne(cl);
}
function Gi(e, t = Pt) {
  const a = Ne(Mi());
  if (!e)
    return new ia(a.getOrCreateViewModel());
  const l = { id: Symbol("toastInstance") }, n = { ...qi, ...l, ...e }, u = a.getOrCreateViewModel(n);
  return new ia(u);
}
const Ui = {
  install: (e, t = {}) => {
    var a, l, n, u;
    e.provide(cl, (l = (a = t == null ? void 0 : t.BToast) == null ? void 0 : a.injectkey) != null ? l : Pt), e.provide((u = (n = t == null ? void 0 : t.BToast) == null ? void 0 : n.injectkey) != null ? u : Pt, new ji());
  }
}, Wi = {
  BAccordion: bo,
  BAccordionItem: Fo,
  BNavText: yr,
  BAlert: Oo,
  BAvatar: Ho,
  BAvatarGroup: zo,
  BNavForm: cr,
  BBadge: Mo,
  BBreadcrumb: Ko,
  BBreadcrumbItem: Da,
  BButton: et,
  BButtonGroup: Qo,
  BButtonToolbar: tn,
  BCard: Wa,
  BCardBody: Ga,
  BCardFooter: Ua,
  BCardGroup: ln,
  BCardHeader: ja,
  BCardImg: dt,
  BCardSubtitle: Ma,
  BCardText: on,
  BCardTitle: qa,
  BCarousel: pn,
  BCarouselSlide: kn,
  BCloseButton: Ke,
  BCol: Ze,
  BCollapse: Na,
  BContainer: wn,
  BDropdown: Ka,
  BDropdownDivider: An,
  BDropdownForm: On,
  BDropdownGroup: En,
  BDropdownHeader: jn,
  BDropdownItem: Mn,
  BDropdownItemButton: Wn,
  BDropdownText: Jn,
  BForm: Ja,
  BFormCheckbox: Ya,
  BFormCheckboxGroup: rs,
  BFormFloatingLabel: es,
  BFormGroup: bs,
  BFormInput: ys,
  BFormInvalidFeedback: xt,
  BFormRadio: Qa,
  BFormRadioGroup: ws,
  BFormRow: st,
  BFormSelect: As,
  BFormSelectOption: jt,
  BFormSelectOptionGroup: el,
  BFormText: It,
  BFormTextarea: Xs,
  BFormTag: tl,
  BFormTags: Ms,
  BFormValidFeedback: Ft,
  BImg: Rt,
  BInputGroup: tr,
  BInputGroupAddon: qt,
  BInputGroupAppend: ar,
  BInputGroupPrepend: lr,
  BInputGroupText: al,
  BLink: Te,
  BListGroup: or,
  BListGroupItem: nr,
  BModal: ur,
  BNav: dr,
  BNavbar: Br,
  BNavbarBrand: Cr,
  BNavbarNav: Sr,
  BNavbarToggle: Tr,
  BNavItem: br,
  BNavItemDropdown: gr,
  BOffcanvas: Fr,
  BOverlay: Pr,
  BPagination: jr,
  BPlaceholder: Ae,
  BPlaceholderButton: sl,
  BPlaceholderCard: qr,
  BPlaceholderTable: Mr,
  BPlaceholderWrapper: Gr,
  BPopover: Yr,
  BProgress: Qr,
  BProgressBar: rl,
  BRow: ai,
  BSkeleton: rt,
  BSkeletonIcon: li,
  BSkeletonTable: si,
  BSkeletonWrapper: ri,
  BSpinner: gt,
  BTab: Di,
  BTable: Vi,
  BTableSimple: yt,
  BTbody: _i,
  BTd: Ii,
  BTfoot: Fi,
  BTh: zi,
  BThead: Li,
  BTr: Ni,
  BToast: dl,
  BToaster: ra,
  BToastContainer: ra,
  BTabs: Hi,
  BTransition: ht,
  BToastPlugin: Ui
};
const Yi = {
  install(e, t = {}) {
    Object.entries(Wi).forEach(([a, l]) => {
      e.component(a, l);
    }), Object.entries(Vo).forEach(([a, l]) => {
      e.directive(a, l);
    }), fo(e);
  }
};
export {
  bo as BAccordion,
  Fo as BAccordionItem,
  Oo as BAlert,
  Ho as BAvatar,
  zo as BAvatarGroup,
  Mo as BBadge,
  Ko as BBreadcrumb,
  Da as BBreadcrumbItem,
  et as BButton,
  Qo as BButtonGroup,
  tn as BButtonToolbar,
  Wa as BCard,
  Ga as BCardBody,
  Ua as BCardFooter,
  ln as BCardGroup,
  ja as BCardHeader,
  dt as BCardImg,
  Ma as BCardSubtitle,
  on as BCardText,
  qa as BCardTitle,
  pn as BCarousel,
  kn as BCarouselSlide,
  Ke as BCloseButton,
  Ze as BCol,
  Na as BCollapse,
  wn as BContainer,
  Ka as BDropdown,
  An as BDropdownDivider,
  On as BDropdownForm,
  En as BDropdownGroup,
  jn as BDropdownHeader,
  Mn as BDropdownItem,
  Wn as BDropdownItemButton,
  Jn as BDropdownText,
  Ja as BForm,
  Ya as BFormCheckbox,
  rs as BFormCheckboxGroup,
  es as BFormFloatingLabel,
  bs as BFormGroup,
  ys as BFormInput,
  xt as BFormInvalidFeedback,
  Qa as BFormRadio,
  ws as BFormRadioGroup,
  st as BFormRow,
  As as BFormSelect,
  jt as BFormSelectOption,
  el as BFormSelectOptionGroup,
  tl as BFormTag,
  Ms as BFormTags,
  It as BFormText,
  Xs as BFormTextarea,
  Ft as BFormValidFeedback,
  Rt as BImg,
  tr as BInputGroup,
  qt as BInputGroupAddon,
  ar as BInputGroupAppend,
  lr as BInputGroupPrepend,
  al as BInputGroupText,
  Te as BLink,
  or as BListGroup,
  nr as BListGroupItem,
  ur as BModal,
  dr as BNav,
  cr as BNavForm,
  br as BNavItem,
  gr as BNavItemDropdown,
  yr as BNavText,
  Br as BNavbar,
  Cr as BNavbarBrand,
  Sr as BNavbarNav,
  Tr as BNavbarToggle,
  Fr as BOffcanvas,
  Pr as BOverlay,
  jr as BPagination,
  Ae as BPlaceholder,
  sl as BPlaceholderButton,
  qr as BPlaceholderCard,
  Mr as BPlaceholderTable,
  Gr as BPlaceholderWrapper,
  Yr as BPopover,
  Qr as BProgress,
  rl as BProgressBar,
  ai as BRow,
  rt as BSkeleton,
  li as BSkeletonIcon,
  si as BSkeletonTable,
  ri as BSkeletonWrapper,
  gt as BSpinner,
  Di as BTab,
  Vi as BTable,
  yt as BTableSimple,
  Hi as BTabs,
  _i as BTbody,
  Ii as BTd,
  Fi as BTfoot,
  zi as BTh,
  Li as BThead,
  dl as BToast,
  ra as BToastContainer,
  Ui as BToastPlugin,
  ra as BToaster,
  Ni as BTr,
  ht as BTransition,
  Yi as BootstrapVue3,
  ft as BvEvent,
  Yi as default,
  vo as useBreadcrumb,
  Gi as useToast,
  go as vBPopover,
  Dt as vBToggle,
  Co as vBTooltip,
  So as vBVisible
};
//# sourceMappingURL=bootstrap-vue-3.es.js.map
